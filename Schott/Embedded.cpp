// Copied into Schott experimental project from SciTE to bootstrap features then removed unwanted code.
#include "pch.h"

const char *props1 = 
"\n"
"\n"
"if PLAT_WIN\n"
"	position.left=0\n"
"	position.top=0\n"
"if PLAT_GTK\n"
"	position.left=5\n"
"	position.top=22\n"
"position.width=576\n"
"position.height=740\n"
"split.vertical=1\n"
"tabbar.visible=1\n"
"\n"
"line.margin.width=4\n"
"margin.width=16\n"
"buffered.draw=1\n"
"\n"
"caret.period=500\n"
"view.whitespace=0\n"
"view.indentation.whitespace=1\n"
"view.indentation.guides=1\n"
"view.indentation.examine=3\n"
"highlight.indentation.guides=1\n"
"edge.column=200\n"
"edge.mode=0\n"
"edge.colour=#C0DCC0\n"
"braces.check=1\n"
"braces.sloppy=1\n"
"if PLAT_WINNT\n"
"	selection.alpha=32\n"
"	selection.back=#000000\n"
"if PLAT_GTK\n"
"	selection.alpha=30\n"
"	selection.back=#000000\n"
"if PLAT_MAC\n"
"	selection.alpha=32\n"
"	selection.back=#000000\n"
"\n"
"ext.lua.startup.script=$(SciteUserHome)/SciTEStartup.lua\n"
"ext.lua.auto.reload=1\n"
"\n"
"are.you.sure=1\n"
"default.file.ext=.cxx\n"
"buffers=40\n"
"if PLAT_GTK\n"
"	background.save.size=10000000\n"
"\n"
"tabsize=8\n"
"indent.size=8\n"
"use.tabs=1\n"
"indent.automatic=1\n"
"indent.opening=0\n"
"indent.closing=0\n"
"\n"
"\n"
"fold=1\n"
"fold.compact=1\n"
"fold.flags=16\n"
"fold.symbols=1\n"
"fold.comment=1\n"
"fold.preprocessor=1\n"
"\n"
"find.command=\n"
"find.files=*.c *.cxx *.h\n"
"\n"
"eol.auto=1\n"
"clear.before.execute=0\n"
"caret.policy.xslop=1\n"
"caret.policy.width=20\n"
"caret.policy.xstrict=0\n"
"caret.policy.xeven=0\n"
"caret.policy.xjumps=0\n"
"caret.policy.yslop=1\n"
"caret.policy.lines=1\n"
"caret.policy.ystrict=1\n"
"caret.policy.yeven=1\n"
"caret.policy.yjumps=0\n"
"\n"
"statusbar.number=4\n"
"statusbar.text.1=\\\n"
"li=$(LineNumber) co=$(ColumnNumber) $(OverType) ($(EOLMode)) $(FileAttr)\n"
"statusbar.text.2=\\\n"
"$(BufferLength) chars in $(NbOfLines) lines. Sel: $(SelLength) chars.\n"
"statusbar.text.3=\\\n"
"Now is: Date=$(CurrentDate) Time=$(CurrentTime)\n"
"statusbar.text.4=\\\n"
"$(FileNameExt) : $(FileDate) - $(FileTime) | $(FileAttr)\n"
"\n"
"if PLAT_WIN\n"
"	command.scite.help=\"file://$(SciteDefaultHome)\\SciTEDoc.html\"\n"
"	command.scite.help.subsystem=2\n"
"if PLAT_GTK\n"
"	command.print.*=a2ps \"$(FileNameExt)\"\n"
"	command.scite.help=xdg-open \"file://$(SciteDefaultHome)/SciTEDoc.html\"\n"
"\n"
"code.page=0\n"
"if PLAT_GTK\n"
"	output.code.page=65001\n"
"if PLAT_MAC\n"
"	output.code.page=65001\n"
"\n"
"export.html.wysiwyg=1\n"
"export.html.styleused=1\n"
"export.pdf.magnification=0\n"
"export.pdf.font=Helvetica\n"
"export.pdf.pagesize=595,842\n"
"export.pdf.margins=72,72,72,72\n"
"export.xml.collapse.spaces=1\n"
"export.xml.collapse.lines=1\n"
"\n"
"chars.alpha=abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\n"
"chars.numeric=0123456789\n"
"chars.accented=äöåúüˇ¿‡¡·¬‚√„ƒ‰≈Â∆Ê«Á»Ë…È ÍÀÎÃÏÕÌŒÓœÔ–—Ò“Ú”Û‘Ù’ı÷ÿ¯Ÿ˘⁄˙€˚‹¸›˝ﬁ˛ﬂˆ\n"
"\n"
"source.files=*.asm;*.c;*.cc;*.cpp;*.cxx;*.cs;*.h;*.hh;*.hxx;*.hpp;\\\n"
"*.idl;*.odl;*.rc;*.rc2;*.dlg;*.def;\\\n"
"*.vb;*.vbs;*.bas;*.frm;*.cls;*.ctl;\\\n"
"*.java;*.js;*.py;*.pl;*.rb;*.cgi;*.lua;*.conf;\\\n"
"make*;*.mak;\\\n"
"*.properties;*.html;*.xml;*.iface;*.bat;*.e;*.m;*.mm\n"
"\n"
"if PLAT_WIN\n"
"	all.files=All Files (*.*)|*.*|\n"
"	top.filters=All Source|$(source.files)|$(all.files)\n"
"if PLAT_GTK\n"
"	all.files=All Files (*)|*|Hidden Files (.*)|.*|\n"
"	top.filters=All Source|$(source.files)|$(all.files)\n"
"if PLAT_MAC\n"
"	all.files=All Files (*.*)|*.*|\n"
"	top.filters=$(all.files)All Source|$(source.files)|\n"
"\n"
"open.filter=\\\n"
"$(top.filters)\\\n"
"$(filter.ada)\\\n"
"$(filter.conf)\\\n"
"$(filter.asm)\\\n"
"$(filter.asn1)\\\n"
"$(filter.ave)\\\n"
"$(filter.baan)\\\n"
"$(filter.bash)\\\n"
"$(filter.caml)\\\n"
"$(filter.cmake)\\\n"
"$(filter.cpp)\\\n"
"$(filter.css)\\\n"
"$(filter.d)\\\n"
"$(filter.eiffel)\\\n"
"$(filter.erlang)\\\n"
"$(filter.fortran)\\\n"
"$(filter.gap)\\\n"
"$(filter.idl)\\\n"
"$(filter.inno)\\\n"
"$(filter.java)\\\n"
"$(filter.js)\\\n"
"$(filter.kix)\\\n"
"$(filter.lout)\\\n"
"$(filter.lua)\\\n"
"$(filter.matlab)\\\n"
"$(filter.metapost)\\\n"
"$(filter.mmixal)\\\n"
"$(filter.nncrontab)\\\n"
"$(filter.nsis)\\\n"
"$(filter.opal)\\\n"
"$(filter.pascal)\\\n"
"$(filter.perl)\\\n"
"$(filter.php)\\\n"
"$(filter.pov)\\\n"
"$(filter.powershell)\\\n"
"$(filter.prg)\\\n"
"$(filter.properties)\\\n"
"$(filter.ps)\\\n"
"$(filter.python)\\\n"
"$(filter.r)\\\n"
"$(filter.ruby)\\\n"
"$(filter.sql)\\\n"
"$(filter.specman)\\\n"
"$(filter.tcl)\\\n"
"$(filter.tex)\\\n"
"$(filter.text)\\\n"
"$(filter.txt2tags)\\\n"
"$(filter.vb)\\\n"
"$(filter.web)\\\n"
"$(filter.yaml)\\\n"
"$(filter.verilog)\\\n"
"$(filter.vhdl)\n"
"\n"
"\n"
"if PLAT_WIN\n"
"	font.base=font:Verdana,size:10\n"
"	font.small=font:Verdana,size:8\n"
"	font.comment=font:Comic Sans MS,size:9\n"
"	font.code.comment.box=$(font.comment)\n"
"	font.code.comment.line=$(font.comment)\n"
"	font.code.comment.doc=$(font.comment)\n"
"	font.code.comment.nested=$(font.comment)\n"
"	font.text=font:Times New Roman,size:11\n"
"	font.text.comment=font:Verdana,size:9\n"
"	font.embedded.base=font:Verdana,size:9\n"
"	font.embedded.comment=font:Comic Sans MS,size:8\n"
"	font.monospace=font:Courier New,size:10\n"
"	font.vbs=font:Lucida Sans Unicode,size:10\n"
"if PLAT_GTK\n"
"	font.base=font:!Bitstream Vera Sans,size:9\n"
"	font.small=font:!Bitstream Vera Sans,size:8\n"
"	font.comment=font:!Bitstream Vera Serif,size:9\n"
"	font.code.comment.box=$(font.comment)\n"
"	font.code.comment.line=$(font.comment)\n"
"	font.code.comment.doc=$(font.comment)\n"
"	font.code.comment.nested=$(font.comment)\n"
"	font.text=font:!Bitstream Charter,size:10\n"
"	font.text.comment=font:!Serif,size:9\n"
"	font.embedded.base=font:!Serif,size:9\n"
"	font.embedded.comment=font:!Serif,size:9\n"
"	font.monospace=font:!Bitstream Vera Sans Mono,size:9\n"
"	font.vbs=font:!Bitstream Vera Sans Mono,size:9\n"
"if PLAT_MAC\n"
"	font.base=font:Verdana,size:12\n"
"	font.small=font:Verdana,size:10\n"
"	font.comment=font:Georgia,size:13\n"
"	font.code.comment.box=$(font.comment)\n"
"	font.code.comment.line=$(font.comment)\n"
"	font.code.comment.doc=$(font.comment)\n"
"	font.code.comment.nested=$(font.comment)\n"
"	font.text=font:Times New Roman,size:13\n"
"	font.text.comment=font:Verdana,size:11\n"
"	font.embedded.base=font:Verdana,size:11\n"
"	font.embedded.comment=font:Comic Sans MS,size:10\n"
"	font.monospace=font:Courier New,size:12\n"
"	font.vbs=font:Lucida Sans Unicode,size:12\n"
"font.js=$(font.comment)\n"
"\n"
"	#~ font.base=font:lucidatypewriter,size:12\n"
"	#~ font.small=font:lucidatypewriter,size:10\n"
"	#~ font.comment=font:new century schoolbook,size:12\n"
"	#~ font.code.comment.box=$(font.comment)\n"
"	#~ font.code.comment.line=$(font.comment)\n"
"	#~ font.code.comment.doc=$(font.comment)\n"
"	#~ font.text=font:times,size:14\n"
"	#~ font.text.comment=font:lucidatypewriter,size:10\n"
"	#~ font.embedded.base=font:lucidatypewriter,size:12\n"
"	#~ font.embedded.comment=font:lucidatypewriter,size:12\n"
"	#~ font.monospace=font:courier,size:12\n"
"	#~ font.vbs=font:new century schoolbook,size:12\n"
"\n"
"colour.code.comment.box=fore:#007F00\n"
"colour.code.comment.line=fore:#007F00\n"
"colour.code.comment.doc=fore:#3F703F\n"
"colour.code.comment.nested=fore:#A0C0A0\n"
"colour.text.comment=fore:#0000FF,back:#D0F0D0\n"
"colour.other.comment=fore:#007F00\n"
"colour.embedded.comment=back:#E0EEFF\n"
"colour.embedded.js=back:#F0F0FF\n"
"colour.notused=back:#FF0000\n"
"\n"
"colour.number=fore:#007F7F\n"
"colour.keyword=fore:#00007F\n"
"colour.string=fore:#7F007F\n"
"colour.char=fore:#7F007F\n"
"colour.operator=fore:#000000\n"
"colour.preproc=fore:#7F7F00\n"
"colour.error=fore:#FFFF00,back:#FF0000\n"
"\n"
"style.*.32=$(font.base)\n"
"style.*.33=back:#C0C0C0,$(font.base)\n"
"style.*.34=fore:#0000FF,bold\n"
"style.*.35=fore:#FF0000,bold\n"
"style.*.36=\n"
"style.*.37=fore:#C0C0C0,back:#FFFFFF\n"
"\n"
"print.magnification=-1\n"
"print.margins=1500,1000,1000,1500\n"
"print.header.format=$(FileNameExt) -- Printed on $(CurrentDate), $(CurrentTime) -- Page $(CurrentPage)\n"
"print.footer.format=$(FilePath) -- File date: $(FileDate) -- File time: $(FileTime)\n"
"print.header.style=font:Arial,size:12,bold\n"
"print.footer.style=font:Arial Narrow,size:10,italics\n"
"\n"
"\n"
"\n"
"keyText=Shift+F11\n"
"keyMake=Ctrl+Shift+F11\n"
"keyHTML=F12\n"
"keyXML=Shift+F12\n"
"if PLAT_MAC\n"
"	os.x.home.end.keys=1\n"
"	keyText=Shift+F13\n"
"	keyMake=Ctrl+Shift+F13\n"
"	keyHTML=Ctrl+Shift+F14\n"
"	keyXML=Shift+F14\n"
"\n"
"menu.language=\\\n"
"Text|txt|$(keyText)|\\\n"
"Ada|ads||\\\n"
"Assembler|asm||\\\n"
"&Batch|bat||\\\n"
"&C / C++|c||\\\n"
"C&#|cs||\\\n"
"CSS|css||\\\n"
"D|d||\\\n"
"&Difference|diff||\\\n"
"&Errorlist|err||\\\n"
"&Fortran|f90||\\\n"
"H&ypertext|html|$(keyHTML)|\\\n"
"&Java|java||\\\n"
"Java&Script|js||\\\n"
"Lisp|lisp||\\\n"
"Lu&a|lua||\\\n"
"Matlab|m.matlab||\\\n"
"&Makefile|mak|$(keyMake)|\\\n"
"Pascal|pas||\\\n"
"Pe&rl|pl||\\\n"
"P&HP|php||\\\n"
"&Properties|properties||\\\n"
"Pytho&n|py||\\\n"
"Ruby|rb||\\\n"
"Shell|sh||\\\n"
"S&QL|sql||\\\n"
"&TCL|tcl||\\\n"
"TeX|tex||\\\n"
"&VB|vb||\\\n"
"VBScr&ipt|vbs||\\\n"
"&XML|xml|$(keyXML)|\\\n"
"YAML|yaml||\n"
"\n"
"user.shortcuts=\\\n"
"Ctrl+Shift+V|IDM_PASTEANDDOWN|\\\n"
"Ctrl+PageUp|IDM_PREVFILE|\\\n"
"Ctrl+PageDown|IDM_NEXTFILE|\n"
"\n"
"\n"
"\n"
"imports.exclude=abaqus asn1 au3 avenue avs baan blitzbasic bullant \\\n"
"cobol cmake csound ecl escript flagship forth freebasic gap haskell inno \\\n"
"kix latex lot lout metapost mmixal modula3 nimrod nncrontab nsis \\\n"
"opal powerpro powershell purebasic r rebol \\\n"
"scriptol smalltalk sorcins spice specman \\\n"
"tacl tal txt2tags verilog vhdl\n"
"\n"
"import *\n"
"\n"
"\n"
"\n"
"file.patterns.abaqus=*.inp;*.dat;*.msg\n"
"filter.abaqus=ABAQUS input (inp)|$(file.patterns.abaqus)|\n"
"\n"
"lexer.$(file.patterns.abaqus)=abaqus\n"
"\n"
"keywords=*amplitude *assembly \\\n"
"*beam *boundary *buckle *bulk \\\n"
"*cload *conditions *conductivity *contact \\\n"
"*damping *density *dload *dsflux *dsload *dynamic \\\n"
"*el *elastic *element *element output *elgen *elset *encastre *end step \\\n"
"*expansion *explicit *equation *embedded element \\\n"
"*field *freq *frequency *friction \\\n"
"*generate \\\n"
"*heading *heat transfer *history \\\n"
"*imperfectio *import *include *initial *initial conditions *instance *interactio \\\n"
"*internal *interval \\\n"
"*marks *material *monitor *mpc \\\n"
"*ncopy *nfill *ngen *nlgeom *node *node output *node print *nset *number \\\n"
"*output \\\n"
"*pair *parameter *part *physical constants *plastic *print *preprint \\\n"
"*radiate *restart \\\n"
"*shell *shell section *solid section *specific heat *sradiate *static *step \\\n"
"*surface \\\n"
"*temperature *time *type \\\n"
"*variable *viscosity \n"
"\n"
"arguments=elset engineering inc input line material name nset pin tie type write generate field variable history \\\n"
"stefan boltzmann absolute zero zero frequency steady state new old set change number shift \\\n"
"model position newset oldset host\n"
"\n"
"keywords.$(file.patterns.abaqus)=\n"
"keywords2.$(file.patterns.abaqus)=$(keywords)\n"
"keywords3.$(file.patterns.abaqus)=\n"
"keywords4.$(file.patterns.abaqus)=\n"
"keywords5.$(file.patterns.abaqus)=$(arguments)\n"
"keywords6.$(file.patterns.abaqus)=\n"
"\n"
"comment.block.abaqus=**\n"
"\n"
"style.abaqus.0=fore:#000000\n"
"style.abaqus.1=fore:#999999,$(font.comment),italics\n"
"style.abaqus.2=fore:#999999,$(font.comment),italics\n"
"style.abaqus.3=$(colour.number)\n"
"style.abaqus.4=$(colour.string)\n"
"style.abaqus.5=fore:#990000\n"
"style.abaqus.6=fore:#000000\n"
"style.abaqus.7=fore:#008888,bold\n"
"style.abaqus.8=fore:#0000CC\n"
"style.abaqus.9=fore:#0000CC,bold\n"
"style.abaqus.10=fore:#6600DD,bold\n"
"style.abaqus.11=fore:#0077FF\n"
"style.abaqus.12=fore:#0077DD\n"
"\n"
"command.compile.*.inp=\n"
"command.build.*.inp=abaqus job=$(FileName) cpus=4\n"
"command.go.*.inp=\n"
"\n"
"autocomplete.abaqus.ignorecase=1\n"
"calltip.abaqus.ignorecase=1\n"
"\n"
"filter.ada=Ada (ads adb)|*.ads;*.adb|\n"
"\n"
"file.patterns.ada=*.ads;*.adb\n"
"\n"
"lexer.$(file.patterns.ada)=ada\n"
"\n"
"\n"
"keywordclass.ada.main=abort abstract accept access aliased all array at begin body \\\n"
"case constant declare delay delta digits do else elsif end entry exception exit for \\\n"
"function generic goto if in is limited loop new null of others out package pragma \\\n"
"private procedure protected raise range record renames requeue return reverse \\\n"
"select separate subtype tagged task terminate then type until use when while with\n"
"keywordclass.ada.operators=abs and mod not or rem xor\n"
"\n"
"keywordclass.ada=$(keywordclass.ada.main) $(keywordclass.ada.operators)\n"
"\n"
"keywords.$(file.patterns.ada)=$(keywordclass.ada)\n"
"\n"
"style.ada.0=fore:#808080\n"
"style.ada.1=$(colour.keyword),bold\n"
"style.ada.2=\n"
"style.ada.3=$(colour.number)\n"
"style.ada.4=$(colour.operator),bold\n"
"style.ada.5=$(colour.char)\n"
"style.ada.6=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled\n"
"style.ada.7=$(colour.string)\n"
"style.ada.8=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled\n"
"style.ada.9=fore:#7F0000\n"
"style.ada.10=$(colour.code.comment.line),$(font.code.comment.line)\n"
"style.ada.11=fore:#FF0000\n"
"\n"
"comment.block.ada=--~\n"
"\n"
"braces.ada.style=4\n"
"\n"
"statement.indent.$(file.patterns.ada)=5 begin declare else elsif exception for if is loop while\n"
"statement.lookback.$(file.patterns.ada)=20\n"
"block.start.$(file.patterns.ada)=10 then is\n"
"block.end.$(file.patterns.ada)=10 end\n"
"\n"
"calltip.ada.word.characters=._$(chars.alpha)\n"
"\n"
"adagcc=gcc -c $(FileNameExt)\n"
"\n"
"command.compile.*.ads=$(adagcc)\n"
"command.build.*.ads=gnatmake\n"
"command.go.*.ads=$(FileName)\n"
"\n"
"command.compile.*.adb=$(adagcc)\n"
"command.build.*.adb=gnatmake\n"
"command.go.*.adb=$(FileName)\n"
"\n"
"file.patterns.asm=*.asm\n"
"filter.asm=Assembler x86/x64(asm)|$(file.patterns.asm)|\n"
"\n"
"lexer.$(file.patterns.asm)=asm\n"
"\n"
"\n"
"bcd_instruction=aaa aad aam aas daa das\n"
"flow_instruction=ja jae jb jbe jc jcxz je jg jge jl jle jmp jna \\\n"
"	jnae jnb jnbe jnc jne jng jnge jnl jnle jno jnp jns jnz \\\n"
"	jo jp jpe jpo js jz \\\n"
"	jcxz jecxz jrcxz \\\n"
"	loop loope loopne loopz loopnz \\\n"
"	call ret\n"
"	\n"
"alu_instruction=add sub adc sbb neg cmp inc dec \\\n"
"	and or xor not test \\\n"
"	shl shr sal sar shld shrd rol ror rcl rcr \\\n"
"	cbw cwd cwde cdq cdqe cqo \\\n"
"	bsf bsr bt btc btr bts \\\n"
"	idiv imul div mul bswap \\\n"
"	nop\n"
"\n"
"mem_instruction=lea \\\n"
"	mov movsx movsxd movzx \\\n"
"	xlatb bound \\\n"
"	xchg xadd cmpxchg cmpxchg8b cmpxchg16b\n"
"\n"
"stack_instruction=push pop pushad popad pushf popf pushfd popfd pushfq popfq\n"
"\n"
"pred_instruction=seta setae setb setbe setc sete setg setge setl \\\n"
"	setle setna setnae setnb setnbe setnc setne setng setnge \\\n"
"	setnl setnle setno setnp setns setnz seto setp setpe setpo \\\n"
"	sets setz \\\n"
"	salc\n"
"	\n"
"flag_instruction=clc cld stc std cmc lahf sahf\n"
"\n"
"cmov_instruction=cmovo cmovno cmovb cmovc cmovnae cmovae cmovnb \\\n"
"	cmovnc cmove cmovz cmovne cmovnz cmovbe cmovna cmova \\\n"
"	cmovnbe cmovs cmovns cmovp cmovpe cmovnp cmovpo cmovl \\\n"
"	cmovnge cmovge cmovnl cmovle cmovng cmovg cmovnle\n"
"\n"
"prefix_instruction=lock rep repe repz repne repnz\n"
"\n"
"string_instruction=cmpsb cmpsw cmpsq \\\n"
"	movsb movsw movsq \\\n"
"	scasb scasw scasd scasq \\\n"
"	stosb stosw stosd stosq\n"
"\n"
"info_instruction=cpuid rdtsc rdtscp rdpmc xgetbv\n"
"\n"
"lwp_instruction=llwpcb slwpcb lwpval lwpins\n"
"\n"
"ext_instruction=crc32 popcnt lzcnt tzcnt movbe pclmulqdq rdrand\n"
"\n"
"bmi1_instruction=andn bextr blsi blsmk blsr\n"
"\n"
"bmi2_instruction=bzhi mulx pdep pext rorx sarx shlx shrx\n"
"\n"
"tbm_instruction=blcfill blci blcic blcmsk blcs blsfill blsic t1mskc tzmsk\n"
"\n"
"fpu_instruction=f2xm1 fabs fadd faddp fbld fbstp fchs fclex fcom fcomp fcompp fdecstp \\\n"
"	fdisi fdiv fdivp fdivr fdivrp feni ffree fiadd ficom ficomp fidiv \\\n"
"	fidivr fild fimul fincstp finit fist fistp fisub fisubr fld fld1 \\\n"
"	fldcw fldenv fldenvw fldl2e fldl2t fldlg2 fldln2 fldpi fldz fmul \\\n"
"	fmulp fnclex fndisi fneni fninit fnop fnsave fnsavew fnstcw fnstenv \\\n"
"	fnstenvw fnstsw fpatan fprem fptan frndint frstor frstorw fsave \\\n"
"	fsavew fscale fsqrt fst fstcw fstenv fstenvw fstp fstsw fsub fsubp \\\n"
"	fsubr fsubrp ftst fwait fxam fxch fxtract fyl2x fyl2xp1 \\\n"
"	fsetpm fcos fldenvd fnsaved fnstenvd fprem1 frstord fsaved fsin fsincos \\\n"
"	fstenvd fucom fucomp fucompp fcomi fcomip fucomi fucomip ffreep \\\n"
"	fcmovb fcmove fcmovbe fcmovu fcmovnb fcmovne fcmovnbe fcmovnu\n"
"\n"
"mmx_instruction=movd movq \\\n"
"	paddb paddw paddd paddsb paddsw paddusb paddusw \\\n"
"	psubb psubw psubd psubsb psubsw psubusb psubusw \\\n"
"	pand pandn por pxor \\\n"
"	pcmpeqb pcmpeqd pcmpeqw pcmpgtb pcmpgtd pcmpgtw \\\n"
"	pmaddwd pmulhw pmullw \\\n"
"	psllw pslld psllq psrlw psrld psrlq psraw psrad \\\n"
"	packuswb packsswb packssdw \\\n"
"	punpcklbw punpcklwd punpckldq punpckhbw punpckhwd punpckhdq \\\n"
"	emms\n"
"\n"
"mmx2_instruction=pavgb pavgw \\\n"
"	pextrw pinsrw pmovmskb \\\n"
"	pmaxsw pmaxub pminsw pminub \\\n"
"	pmulhuw psadbw pshufw \\\n"
"	prefetchnta prefetcht0 prefetcht1 prefetcht2 \\\n"
"	maskmovq movntq sfence\n"
"\n"
"emmx_instruction=paddsiw psubsiw \\\n"
"	pmulhrw pmachriw pmulhriw \\\n"
"	pmagw pdistib paveb \\\n"
"	pmvzb pmvnzb pmvlzb pmvgezb \n"
"\n"
"k3d_instruction=pfacc pfadd pfsub pfsubr pfmul \\\n"
"	pfcmpeq pfcmpge pfcmpgt \\\n"
"	pfmax pfmin \\\n"
"	pfrcp pfrcpit1 pfrcpit2 pfrsqit1 pfrsqrt \\\n"
"	pi2fd pf2id \\\n"
"	pavgusb pmulhrw \\\n"
"	femms\n"
"\n"
"k3d2_instruction=pfnacc pfpnacc pi2fw pf2iw pswapd\n"
"\n"
"k3dgeode_instruction=pfrsqrtv pfrcpv\n"
"\n"
"k3dprefetch_instruction=prefetch prefetchw\n"
"\n"
"sse_instruction=addss addps subss subps \\\n"
"	mulss mulps divss divps sqrtss sqrtps \\ \n"
"	rcpss rcpps rsqrtss rsqrtps \\\n"
"	maxss maxps minss minps \\\n"
"	cmpss comiss ucomiss cmpps \\\n"
"	cmpeqss cmpltss cmpless cmpunordss cmpneqss cmpnltss cmpnless cmpordss \\\n"
"	cmpeqps cmpltps cmpleps cmpunordps cmpneqps cmpnltps cmpnleps cmpordps \\\n"
"	andnps andps orps xorps \\\n"
"	cvtsi2ss cvtss2si cvttss2si \\\n"
"	cvtpi2ps cvtps2pi cvttps2pi \\\n"
"	movss movlps movhps movlhps movhlps movaps movups movntps movmskps \\\n"
"	shufps unpckhps unpcklps \\\n"
"	ldmxcsr stmxcsr\n"
"\n"
"sse2_instruction=addpd addsd subpd subsd \\\n"
"	mulsd mulpd divsd divpd sqrtsd sqrtpd \\\n"
"	maxsd maxpd minsd minpd \\\n"
"	cmpsd comisd ucomisd cmppd \\\n"
"	cmpeqsd cmpltsd cmplesd cmpunordsd cmpneqsd cmpnltsd cmpnlesd cmpordsd \\\n"
"	cmpeqpd cmpltpd cmplepd cmpunordpd cmpneqpd cmpnltpd cmpnlepd cmpordpd \\\n"
"	andnpd andpd orpd xorpd \\\n"
"	cvtsd2ss cvtpd2ps cvtss2sd cvtps2pd \\\n"
"	cvtdq2ps cvtps2dq cvttps2dq \\\n"
"	cvtdq2pd cvtpd2dq cvttpd2dq \\\n"
"	cvtsi2sd cvtsd2si cvttsd2si \\\n"
"	cvtpi2pd cvtpd2pi cvttpd2pi \\\n"
"	movsd movlpd movhpd movapd movupd movntpd movmskpd \\\n"
"	shufpd unpckhpd unpcklpd \\\n"
"	movnti movdqa movdqu movntdq maskmovdqu \\\n"
"	movdq2q movq2dq \\\n"
"	paddq psubq pmuludq \\\n"
"	pslldq psrldq \\\n"
"	punpcklqdq punpckhqdq \\\n"
"	pshufhw pshuflw pshufd \\\n"
"	lfence mfence\n"
"\n"
"sse3_instruction=addsubps addsubpd \\\n"
"	haddps haddpd hsubps hsubpd \\\n"
"	movsldup movshdup movddup \\\n"
"	lddqu \\\n"
"	fisttp\n"
"	\n"
"ssse3_instruction=psignb psignw psignd \\\n"
"	pabsb pabsw pabsd \\\n"
"	palignr pshufb \\\n"
"	pmulhrsw pmaddubsw \\\n"
"	phaddw phaddd phaddsw \\\n"
"	phsubw phsubd phsubsw\n"
"\n"
"sse4a_instruction=extrq insertq \\\n"
"	movntsd movntss\n"
"\n"
"sse41_instruction=mpsadbw phminposuw \\\n"
"	pmuldq pmulld \\\n"
"	dpps dppd \\\n"
"	blendps blendpd blendvps blendvpd pblendvb pblendw \\\n"
"	pmaxsb pmaxuw pmaxsd pmaxud pminsb pminuw pminsd pminud \\\n"
"	roundps roundss roundpd roundsd \\\n"
"	insertps pinsrb pinsrd pinsrq \\\n"
"	extractps pextrb pextrd pextrq \\\n"
"	pmovsxbw pmovsxbd pmovsxbq pmovsxwd pmovsxwq pmovsxdq \\\n"
"	pmovzxbw pmovzxbd pmovzxbq pmovzxwd pmovzxwq pmovzxdq \\\n"
"	ptest \\\n"
"	pcmpeqq \\\n"
"	packusdw \\\n"
"	movntdqa\n"
"\n"
"sse42_instruction=pcmpgtq \\\n"
"	pcmpestri pcmpestrm pcmpistri pcmpistrm\n"
"\n"
"aes_instruction=aesenc aesenclast aesdec aesdeclast aeskeygenassist aesimc\n"
"\n"
"padlock_instruction=xcryptcbc xcryptcfb xcryptctr xcryptecb xcryptofb \\\n"
"	xsha1 xsha256 montmul xstore\n"
"\n"
"\n"
"avx_instruction=vaddss vaddps vaddsd vaddpd vsubss vsubps vsubsd vsubpd \\\n"
"	vaddsubps vaddsubpd \\\n"
"	vhaddps vhaddpd vhsubps vhsubpd \\\n"
"	vmulss vmulps vmulsd vmulpd \\\n"
"	vmaxss vmaxps vmaxsd vmaxpd vminss vminps vminsd vminpd \\\n"
"	vandps vandpd vandnps vandnpd vorps vorpd vxorps vxorpd \\\n"
"	vblendps vblendpd vblendvps vblendvpd \\\n"
"	vcmpss vcomiss vucomiss vcmpsd vcomisd vucomisd vcmpps vcmppd \\\n"
"	vcmpeqss vcmpltss vcmpless vcmpunordss vcmpneqss vcmpnltss vcmpnless vcmpordss \\\n"
"	vcmpeq_uqss vcmpngess vcmpngtss vcmpfalsess vcmpneq_oqss vcmpgess vcmpgtss vcmptruess \\\n"
"	vcmpeq_osss vcmplt_oqss vcmple_oqss vcmpunord_sss vcmpneq_usss vcmpnlt_uqss vcmpnle_uqss vcmpord_sss \\\n"
"	vcmpeq_usss vcmpnge_uqss vcmpngt_uqss vcmpfalse_osss vcmpneq_osss vcmpge_oqss vcmpgt_oqss vcmptrue_usss \\\n"
"	vcmpeqps vcmpltps vcmpleps vcmpunordps vcmpneqps vcmpnltps vcmpnleps vcmpordps \\\n"
"	vcmpeq_uqps vcmpngeps vcmpngtps vcmpfalseps vcmpneq_oqps vcmpgeps vcmpgtps vcmptrueps \\\n"
"	vcmpeq_osps vcmplt_oqps vcmple_oqps vcmpunord_sps vcmpneq_usps vcmpnlt_uqps vcmpnle_uqps vcmpord_sps \\\n"
"	vcmpeq_usps vcmpnge_uqps vcmpngt_uqps vcmpfalse_osps vcmpneq_osps vcmpge_oqps vcmpgt_oqps vcmptrue_usps \\\n"
"	vcmpeqsd vcmpltsd vcmplesd vcmpunordsd vcmpneqsd vcmpnltsd vcmpnlesd vcmpordsd \\\n"
"	vcmpeq_uqsd vcmpngesd vcmpngtsd vcmpfalsesd vcmpneq_oqsd vcmpgesd vcmpgtsd vcmptruesd \\\n"
"	vcmpeq_ossd vcmplt_oqsd vcmple_oqsd vcmpunord_ssd vcmpneq_ussd vcmpnlt_uqsd vcmpnle_uqsd vcmpord_ssd \\\n"
"	vcmpeq_ussd vcmpnge_uqsd vcmpngt_uqsd vcmpfalse_ossd vcmpneq_ossd vcmpge_oqsd vcmpgt_oqsd vcmptrue_ussd \\\n"
"	vcmpeqpd vcmpltpd vcmplepd vcmpunordpd vcmpneqpd vcmpnltpd vcmpnlepd vcmpordpd \\\n"
"	vcmpeq_uqpd vcmpngepd vcmpngtpd vcmpfalsepd vcmpneq_oqpd vcmpgepd vcmpgtpd vcmptruepd \\\n"
"	vcmpeq_ospd vcmplt_oqpd vcmple_oqpd vcmpunord_spd vcmpneq_uspd vcmpnlt_uqpd vcmpnle_uqpd vcmpord_spd \\\n"
"	vcmpeq_uspd vcmpnge_uqpd vcmpngt_uqpd vcmpfalse_ospd vcmpneq_ospd vcmpge_oqpd vcmpgt_oqpd vcmptrue_uspd \\\n"
"	vcvtsd2ss vcvtpd2ps vcvtss2sd vcvtps2pd \\\n"
"	vcvtsi2ss vcvtss2si vcvttss2si \\\n"
"	vcvtpi2ps vcvtps2pi vcvttps2pi \\\n"
"	vcvtdq2ps vcvtps2dq vcvttps2dq \\\n"
"	vcvtdq2pd vcvtpd2dq vcvttpd2dq \\\n"
"	vcvtsi2sd vcvtsd2si vcvttsd2si \\\n"
"	vcvtpi2pd vcvtpd2pi vcvttpd2pi \\\n"
"	vdivss vdivps vdivsd vdivpd vsqrtss vsqrtps vsqrtsd vsqrtpd \\\n"
"	vdpps vdppd \\\n"
"	vmaskmovps vmaskmovpd \\\n"
"	vmovss vmovsd vmovaps vmovapd vmovups vmovupd vmovntps vmovntpd \\\n"
"	vmovhlps vmovlhps vmovlps vmovlpd vmovhps vmovhpd \\\n"
"	vmovsldup vmovshdup vmovddup \\\n"
"	vmovmskps vmovmskpd \\\n"
"	vroundss vroundps vroundsd vroundpd \\\n"
"	vrcpss vrcpps vrsqrtss vrsqrtps \\\n"
"	vunpcklps vunpckhps vunpcklpd vunpckhpd \\\n"
"	vbroadcastss vbroadcastsd vbroadcastf128 \\\n"
"	vextractps vinsertps vextractf128 vinsertf128 \\\n"
"	vshufps vshufpd vpermilps vpermilpd vperm2f128 \\\n"
"	vtestps vtestpd \\\n"
"	vpaddb vpaddusb vpaddsb vpaddw vpaddusw vpaddsw vpaddd vpaddq \\\n"
"	vpsubb vpsubusb vpsubsb vpsubw vpsubusw vpsubsw vpsubd vpsubq \\\n"
"	vphaddw vphaddsw vphaddd vphsubw vphsubsw vphsubd \\\n"
"	vpsllw vpslld vpsllq vpsrlw vpsrld vpsrlq vpsraw vpsrad \\\n"
"	vpand vpandn vpor vpxor \\\n"
"	vpblendwb vpblendw \\\n"
"	vpsignb vpsignw vpsignd \\\n"
"	vpavgb vpavgw \\\n"
"	vpabsb vpabsw vpabsd \\\n"
"	vmovd vmovq vmovdqa vmovdqu vlddqu vmovntdq vmovntdqa vmaskmovdqu \\\n"
"	vpmovsxbw vpmovsxbd vpmovsxbq vpmovsxwd vpmovsxwq vpmovsxdq \\\n"
"	vpmovzxbw vpmovzxbd vpmovzxbq vpmovzxwd vpmovzxwq vpmovzxdq \\\n"
"	vpackuswb vpacksswb vpackusdw vpackssdw \\\n"
"	vpcmpeqb vpcmpeqw vpcmpeqd vpcmpeqq vpcmpgtb vpcmpgtw vpcmpgtd vpcmpgtq \\\n"
"	vpmaddubsw vpmaddwd \\\n"
"	vpmullw vpmulhuw vpmulhw vpmulhrsw vpmulld vpmuludq vpmuldq \\\n"
"	vpmaxub vpmaxsb vpmaxuw vpmaxsw vpmaxud vpmaxsd \\\n"
"	vpminub vpminsb vpminuw vpminsw vpminud vpminsd \\\n"
"	vpmovmskb vptest \\\n"
"	vpunpcklbw vpunpcklwd vpunpckldq vpunpcklqdq \\\n"
"	vpunpckhbw vpunpckhwd vpunpckhdq vpunpckhqdq \\\n"
"	vpslldq vpsrldq vpalignr \\\n"
"	vpshufb vpshuflw vpshufhw vpshufd \\\n"
"	vpextrb vpextrw vpextrd vpextrq vpinsrb vpinsrw vpinsrd vpinsrq \\\n"
"	vpsadbw vmpsadbw vphminposuw \\\n"
"	vpcmpestri vpcmpestrm vpcmpistri vpcmpistrm \\\n"
"	vpclmulqdq vaesenc vaesenclast vaesdec vaesdeclast vaeskeygenassist vaesimc \\\n"
"	vldmxcsr vstmxcsr vzeroall vzeroupper\n"
"\n"
"avx2_instruction=vbroadcasti128 vpbroadcastb vpbroadcastw vpbroadcastd vpbroadcastq \\\n"
"	vpblendd \\\n"
"	vpermd vpermq vperm2i128 \\\n"
"	vextracti128 vinserti128 \\\n"
"	vpmaskmovd vpmaskmovq \\\n"
"	vpsllvd vpsllvq vpsravd vpsrlvd vpsrldq \\\n"
"	vpgatherdd vpgatherqd vgatherdq vgatherqq \\\n"
"	vpermps vpermpd \\\n"
"	vgatherdpd vgatherqpd vgatherdps vgatherqps\n"
"\n"
"xop_instruction=vfrczss vfrczps vfrczsd vfrczpd \\\n"
"	vpermil2ps vperlil2pd \\\n"
"	vtestps vtestpd \\\n"
"	vpcomub vpcomb vpcomuw vpcomw vpcomud vpcomd vpcomuq vpcomq \\\n"
"	vphaddubw vphaddbw vphaddubd vphaddbd vphaddubq vphaddbq \\\n"
"	vphadduwd vphaddwd vphadduwq vphaddwq vphaddudq vphadddq \\\n"
"	vphsubbw vphsubwd vphsubdq \\\n"
"	vpmacsdd vpmacssdd vpmacsdql vpmacssdql vpmacsdqh vpmacssdqh \\\n"
"	vpmacsww vpmacssww vpmacswd vpmacsswd \\\n"
"	vpmadcswd vpmadcsswd \\\n"
"	vpcmov vpperm \\\n"
"	vprotb vprotw vprotd vprotq \\\n"
"	vpshab vpshaw vpshad vpshaq \\\n"
"	vpshlb vpshlw vpshld vpshlq\n"
"\n"
"cvt16_instruction=vcvtph2ps vcvtps2ph\n"
"\n"
"fma4_instruction=vfmaddss vfmaddps vfmaddsd vfmaddpd \\\n"
"	vfmsubss vfmsubps vfmsubsd vfmsubpd \\\n"
"	vnfmaddss vnfmaddps vnfmaddsd vnfmaddpd \\\n"
"	vnfmsubss vnfmsubps vnfmsubsd vnfmsubpd \\\n"
"	vfmaddsubps vfmaddsubpd vfmsubaddps vfmsubaddpd\n"
"\n"
"fma3_instruction=vfmadd132ss vfmadd213ss vfmadd231ss \\\n"
"	vfmadd132ps vfmadd213ps vfmadd231ps \\\n"
"	vfmadd132sd vfmadd213sd vfmadd231sd \\\n"
"	vfmadd132pd vfmadd213pd vfmadd231pd \\\n"
"	vfmaddsub132ps vfmaddsub213ps vfmaddsub231ps \\\n"
"	vfmaddsub132pd vfmaddsub213pd vfmaddsub231pd \\\n"
"	vfmsubadd132ps vfmsubadd213ps vfmsubadd231ps \\\n"
"	vfmsubadd132pd vfmsubadd213pd vfmsubadd231pd \\\n"
"	vfmsub132ss vfmsub213ss vfmsub231ss \\\n"
"	vfmsub132ps vfmsub213ps vfmsub231ps \\\n"
"	vfmsub132sd vfmsub213sd vfmsub231sd \\\n"
"	vfmsub132pd vfmsub213pd vfmsub231pd \\\n"
"	vfnmadd132ss vfnmadd213ss vfnmadd231ss \\\n"
"	vfnmadd132ps vfnmadd213ps vfnmadd231ps \\\n"
"	vfnmadd132sd vfnmadd213sd vfnmadd231sd \\\n"
"	vfnmadd132pd vfnmadd213pd vfnmadd231pd \\\n"
"	vfnmsub132ss vfnmsub213ss vfnmsub231ss \\\n"
"	vfnmsub132ps vfnmsub213ps vfnmsub231ps \\\n"
"	vfnmsub132sd vfnmsub213sd vfnmsub231sd \\\n"
"	vfnmsub132pd vfnmsub213pd vfnmsub231pd\n"
"\n"
"register=al ah bl bh cl ch dl dh \\\n"
"	ax bx cx dx si di bp \\\n"
"	eax ebx ecx edx esi edi ebx esp \\\n"
"	st0 st1 st2 st3 st4 st5 st6 st7 \\\n"
"	mm0 mm1 mm2 mm3 mm4 mm5 mm6 mm7 \\\n"
"	xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 \\\n"
"	ymm0 ymm1 ymm2 ymm3 ymm4 ymm5 ymm6 ymm7 \\\n"
"	fs\n"
"\n"
"register_64=sil dil bpl \\\n"
"	r8b r9b r10b r11b r12b r13b r14b r15b \\\n"
"	r8w r9w r10w r11w r12w r13w r14w r15w \\\n"
"	rax rcx rdx rbx rsp rbp rsi rdi \\\n"
"	r8 r9 r10 r11 r12 r13 r14 r15 \\\n"
"	xmm8 xmm9 xmm10 xmm11 xmm12 xmm13 xmm14 xmm15 \\\n"
"	ymm8 ymm9 ymm10 ymm11 ymm12 ymm13 ymm14 ymm15 \\\n"
"	gs\n"
"\n"
"directive_nasm=db dw dd dq dt do dy \\\n"
"	resb resw resd resq rest reso resy incbin equ times safeseh \\\n"
"	__utf16__ __utf32__ %+ \\\n"
"	default cpu float start imagebase osabi \\\n"
"	..start ..imagebase ..gotpc ..gotoff ..gottpoff ..got ..plt ..sym ..tlsie \\\n"
"	section segment __sect__ group absolute \\\n"
"	.bss .comment .data .lbss .ldata .lrodata .rdata .rodata .tbss .tdata .text \\\n"
"	alloc bss code exec data noalloc nobits noexec nowrite progbits rdata tls write \\\n"
"	private public common stack overlay class \\\n"
"	extern global common import export \\\n"
"	%define %idefine %xdefine %ixdefine %assign %undef %? %?? \\\n"
"	%defstr %idefstr %deftok %ideftok \\\n"
"	%strcat %strlen %substr \\\n"
"	%macro %imacro %rmacro %exitmacro %endmacro %unmacro \\\n"
"	%if %ifn %elif %elifn %else %endif \\\n"
"	%ifdef %ifndef %elifdef %elifndef \\\n"
"	%ifmacro %ifnmacro %elifmacro %elifnmacro \\\n"
"	%ifctx %ifnctx %elifctx %elifnctx \\\n"
"	%ifidn %ifnidn %elifidn %elifnidn \\\n"
"	%ifidni %ifnidni %elifidni %elifnidni \\\n"
"	%ifid %ifnid %elifid %elifnid \\\n"
"	%ifnum %ifnnum %elifnum %elifnnum \\\n"
"	%ifstr %ifnstr %elifstr %elifnstr \\\n"
"	%iftoken %ifntoken %eliftoken %elifntoken \\\n"
"	%ifempty %elifempty %ifnempty %elifnempty \\\n"
"	%ifenv %ifnenv %elifenv %elifnenv \\\n"
"	%rep %exitrep %endrep \\\n"
"	%while %exitwhile %endwhile \\\n"
"	%include %pathsearch %depend %use \\\n"
"	%push %pop %repl %arg %local %stacksize flat flat64 large small \\\n"
"	%error %warning %fatal \\\n"
"	%00 .nolist %rotate %line %! %final %clear \\\n"
"	struc endstruc istruc at iend \\\n"
"	align alignb sectalign \\\n"
"	bits use16 use32 use64 \\\n"
"	__nasm_major__ __nasm_minor__ __nasm_subminor__ ___nasm_patchlevel__ \\\n"
"	__nasm_version_id__ __nasm_ver__ \\\n"
"	__file__ __line__ __pass__ __bits__ __output_format__ \\\n"
"	__date__ __time__ __date_num__ __time_num__ __posix_time__ \\\n"
"	__utc_date__ __utc_time__ __utc_date_num__ __utc_time_num__ \\\n"
"	__float_daz__ __float_round__ __float__ \\\n"
"	__use_altreg__ altreg \\\n"
"	__use_smartalign__ smartalign __alignmode__ \\\n"
"	__use_fp__ __infinity__ __nan__ __qnan__ __snan__ \\\n"
"	__float8__ __float16__ __float32__ __float64__ __float80m__ __float80e__ __float128l__ __float128h__\n"
"\n"
"directive_operand_nasm=a16 a32 a64 o16 o32 o64 strict \\\n"
"	byte word dword qword tword oword yword nosplit \\\n"
"	%0 %1 %2 %3 %4 %5 %6 %7 %8 %9 \\\n"
"	abs rel \\\n"
"	$ $$ \\\n"
"	seg wrt\n"
"\n"
"keywords.$(file.patterns.asm)=$(bcd_instruction) $(flow_instruction) $(alu_instruction) $(mem_instruction) $(stack_instruction) $(pred_instruction) $(flag_instruction) $(cmov_instruction) $(prefix_instruction) $(string_instruction) $(info_instruction) $(lwp_instruction) $(ext_instruction) $(bmi1_instruction) $(bmi2_instruction)\n"
"keywords2.$(file.patterns.asm)=$(fpu_instruction)\n"
"keywords3.$(file.patterns.asm)=$(register) $(register_64)\n"
"keywords4.$(file.patterns.asm)=$(directive_nasm)\n"
"keywords5.$(file.patterns.asm)=$(directive_operand_nasm)\n"
"keywords6.$(file.patterns.asm)=$(mmx_instruction) $(mmx2_instruction) $(emmx_instruction) $(k3d_instruction) $(k3d2_instruction) $(k3dgeode_instruction) $(k3dprefetch_instruction) $(sse_instruction) $(sse2_instruction) $(sse3_instruction) $(ssse3_instruction) $(sse4a_instruction) $(sse41_instruction) $(sse42_instruction) $(aes_instruction) $(padlock_instruction) $(avx_instruction) $(avx2_instruction) $(xop_instruction) $(cvt16_instruction) $(fma4_instruction) $(fma3_instruction)\n"
"\n"
"comment.block.asm=;\n"
"\n"
"\n"
"style.asm.0=\n"
"style.asm.1=fore:#adadad\n"
"style.asm.2=fore:#ff0000\n"
"style.asm.3=$(colour.string)\n"
"style.asm.4=$(colour.operator),bold\n"
"style.asm.5=\n"
"style.asm.6=$(colour.keyword),bold\n"
"style.asm.7=fore:#0000ff\n"
"style.asm.8=fore:#46aa03,bold\n"
"style.asm.9=fore:#0000ff\n"
"style.asm.10=fore:#0000ff\n"
"style.asm.11=$(colour.code.comment.box),$(font.code.comment.box)\n"
"style.asm.12=$(colour.char)\n"
"style.asm.13=fore:#000000,back:#E0C0E0,eolfilled\n"
"style.asm.14=fore:#B00040\n"
"\n"
"\n"
"command.compile.$(file.patterns.asm)=nasm $(FileNameExt)\n"
"\n"
"command.name.0.*.asm=Link\n"
"command.0.*.asm=link $(FileName)\n"
"\n"
"\n"
"statement.indent.$(file.patterns.asm)=9 .if\n"
"\n"
"filter.asn1=ASN.1 (asn1)|*.mib|\n"
"\n"
"file.patterns.asn1=*.mib\n"
"\n"
"lexer.$(file.patterns.asn1)=asn1\n"
"\n"
"style.asn1.0=fore:#000000\n"
"style.asn1.1=fore:#007F00,$(font.comment)\n"
"style.asn1.2=fore:#000000,bold\n"
"style.asn1.3=fore:#7F007F\n"
"style.asn1.4=fore:#007F7F,bold\n"
"style.asn1.5=fore:#7F0000\n"
"style.asn1.6=fore:#00007F\n"
"style.asn1.7=fore:#F07800\n"
"style.asn1.8=fore:#00007F\n"
"style.asn1.9=fore:#00007F\n"
"style.asn1.10=fore:#222222\n"
"\n"
"keywords.$(file.patterns.asn1)=\\\n"
"ACCESS AGENT AUGMENTS \\\n"
"BEGIN BITS \\\n"
"CAPABILITIES CHOICE COMPLIANCE CONTACT CONVENTION \\\n"
"DEFINITIONS DEFVAL DESCRIPTION DISPLAY \\\n"
"END ENTERPRISE EXPORTS \\\n"
"FALSE FROM \\\n"
"GROUP GROUPS \\\n"
"HINT \\\n"
"IDENTITY IMPLIED IMPORTS INCLUDES INDEX INFO \\\n"
"LAST \\\n"
"MANDATORY MAX MIN MODULE \\\n"
"NOTATION NOTIFICATION NULL \\\n"
"OBJECTS OBJECT-TYPE OF ORGANIZATION \\\n"
"PRODUCT \\\n"
"RELEASE REFERENCE REQUIRES REVISION \\\n"
"SEQUENCE SIZE STATUS SUPPORTS SYNTAX \\\n"
"TEXTUAL TRAP TYPE TRAP-TYPE \\\n"
"UPDATED \\\n"
"VALUE VARIABLES VARIATION \\\n"
"WRITE\n"
"\n"
"keywords2.$(file.patterns.asn1)=\\\n"
"accessible \\\n"
"create current \\\n"
"deprecated \\\n"
"for \\\n"
"mandatory \\\n"
"not notify not-accessible \\\n"
"obsolete only optional \\\n"
"read read-only read-write \\\n"
"write\n"
"\n"
"keywords3.$(file.patterns.asn1)=\\\n"
"ABSENT ANY APPLICATION \\\n"
"BIT BOOLEAN BY \\\n"
"COMPONENT COMPONENTS \\\n"
"DEFAULT DEFINED \\\n"
"ENUMERATED EXPLICIT EXTERNAL \\\n"
"IMPLICIT INIFINITY \\\n"
"MAX MIN MINUS \\\n"
"OPTIONAL \\\n"
"PRESENT PRIVATE \\\n"
"REAL \\\n"
"SET \\\n"
"TAGS TRUE\n"
"\n"
"keywords4.$(file.patterns.asn1)=\\\n"
"Counter Counter32 Counter64 \\\n"
"DisplayString \\\n"
"Gauge Gauge32 \\\n"
"IDENTIFIER INTEGER Integer32 IpAddress \\\n"
"NetworkAddress NsapAddress \\\n"
"OBJECT OCTET Opaque \\\n"
"PhysAddress \\\n"
"STRING \\\n"
"TimeTicks \\\n"
"UInteger32 UNITS Unsigned32\n"
"\n"
"autoit3dir=C:\\program files\\autoit3\n"
"\n"
"file.patterns.au3=*.au3\n"
"filter.au3=AutoIt (au3)|*.au3|\n"
"lexer.$(file.patterns.au3)=au3\n"
"\n"
"command.compile.*.au3=$(autoit3dir)\\aut2exe\\aut2exe.exe /in \"$(FilePath)\"\n"
"command.build.*.au3=$(autoit3dir)\\aut2exe\\aut2exe.exe /in \"$(FilePath)\"\n"
"command.go.*.au3=$(autoit3dir)\\autoit3.exe \"$(FilePath)\"\n"
"command.9.*.au3=tidy\\tidy.exe \"$(FilePath)\"\n"
"command.name.9.*.au3=Tidy AutoIt Source\n"
"command.save.before.9.*.au3=1\n"
"command.shortcut.9.*=Ctrl+9\n"
"extension.*.au3=$(SciteDefaultHome)\\AutoIt3.lua\n"
"command.name.11.*.au3=MsgBox(4096,'debug',...)\n"
"command.subsystem.11.*.au3=3\n"
"command.11.*.au3=Debug_MsgBox\n"
"command.shortcut.11.*.au3=Ctrl+Shift+D\n"
"command.save.before.11.*.au3=2\n"
"\n"
"command.name.12.*.au3=Insert Bookmarked Line(s)\n"
"command.subsystem.12.*.au3=3\n"
"command.12.*.au3=Copy_BookMarks\n"
"command.shortcut.12.*.au3=Ctrl+Shift+B\n"
"command.save.before.12.*.au3=2\n"
"\n"
"command.help.*.au3=$(CurrentWord)!$(autoit3dir)\\autoit.chm\n"
"command.help.subsystem.*.au3=4\n"
"api.*.au3=$(SciteDefaultHome)\\api\\au3.api\n"
"calltip.au3.word.characters=$(chars.alpha)$(chars.numeric)\n"
"calltip.au3.ignorecase=1\n"
"autocomplete.au3.ignorecase=1\n"
"autocomplete.au3.start.characters=$(chars.alpha)$(chars.numeric)$@\n"
"word.characters.*.au3=$(chars.alpha)$(chars.numeric)@$_\n"
"indent.size.*.au3=3\n"
"statement.indent.*.au3=\n"
"statement.lookback.*.au3=\n"
"block.start.*.au3=5 case if do for func else elseif while select \\\n"
"                    Case If Do For Func Else ElseIf While Select \\\n"
"                    CASE IF DO FOR FUNC ELSE ELSEIF WHILE SELECT\n"
"block.end.*.au3=5 case else endif elseif endfunc endselect next until wend \\\n"
"                  Case Else EndIf ElseIf EndFunc EndSelect Next Until Wend \\\n"
"                  CASE ELSE ENDIF ELSEIF ENDFUNC ENDSELECT NEXT UNTIL WEND\n"
"comment.block.au3=;~\n"
"comment.block.at.line.start.au3=1\n"
"comment.stream.start.au3=#CS\n"
"comment.stream.end.au3=#CE\n"
"comment.box.start.au3=#CS\n"
"comment.box.middle.au3=\n"
"comment.box.end.au3= #CE\n"
"\n"
"keywordclass.au3= \\\n"
" and byref case continueloop dim do else elseif endfunc endif endselect exit exitloop for func \\\n"
"  global if local next not or return select step then to until wend while exit\n"
"\n"
"keywords.$(file.patterns.au3)=$(keywordclass.au3)\n"
"\n"
"keywords2.$(file.patterns.au3)= \\\n"
" abs acos adlibdisable adlibenable asc asin atan autoitsetoption autoitwingettitle autoitwinsettitle \\\n"
"  bitand bitnot bitor bitshift bitxor blockinput break call cdtray chr clipget clipput controlclick \\\n"
"  controlcommand controldisable controlenable controlfocus controlgetfocus controlgetpos controlgettext \\\n"
"  controlhide controlmove controlsend controlsettext controlshow cos dec dircopy dircreate dirmove \\\n"
"  dirremove drivegetdrive drivegetfilesystem drivegetlabel drivegetserial drivegettype drivesetlabel \\\n"
"  drivespacefree drivespacetotal drivestatus envget envset envupdate eval exp filechangedir fileclose \\\n"
"  filecopy filecreateshortcut filedelete fileexists filefindfirstfile filefindnextfile filegetattrib \\\n"
"  filegetlongname filegetshortname filegetsize filegettime filegetversion fileinstall filemove \\\n"
"  fileopen fileopendialog fileread filereadline filerecycle filerecycleempty filesavedialog fileselectfolder \\\n"
"  filesetattrib filesettime filewrite filewriteline guicreate guicreateex guidefaultfont guidelete \\\n"
"  guigetcontrolstate guihide guimsg guiread guirecvmsg guisendmsg guisetcontrol guisetcontroldata \\\n"
"  guisetcontrolex guisetcontrolfont guisetcontrolnotify guisetcoord guisetcursor guishow guiwaitclose \\\n"
"  guiwrite hex hotkeyset inidelete iniread iniwrite inputbox int isadmin isarray isdeclared isfloat \\\n"
"  isint isnumber isstring log memgetstats mod mouseclick mouseclickdrag mousedown mousegetcursor \\\n"
"  mousegetpos mousemove mouseup mousewheel msgbox number pixelchecksum pixelgetcolor pixelsearch \\\n"
"  processclose processexists processsetpriority processwait processwaitclose progressoff progresson \\\n"
"  progressset random regdelete regenumkey regenumval regread regwrite round run runasset runwait \\\n"
"  send seterror shutdown sin sleep soundplay soundsetwavevolume splashimageon splashoff splashtexton \\\n"
"  sqrt statusbargettext string stringaddcr stringformat stringinstr stringisalnum stringisalpha \\\n"
"  stringisascii stringisdigit stringisfloat stringisint stringislower stringisspace stringisupper \\\n"
"  stringisxdigit stringleft stringlen stringlower stringmid stringreplace stringright stringsplit \\\n"
"  stringstripcr stringstripws stringtrimleft stringtrimright stringupper tan timerstart timerstop \\\n"
"  tooltip traytip ubound urldownloadtofile winactivate winactive winclose winexists wingetcaretpos \\\n"
"  wingetclasslist wingetclientsize wingethandle wingetpos wingetstate wingettext wingettitle \\\n"
"  winkill winmenuselectitem winminimizeall winminimizeallundo winmove winsetontop winsetstate \\\n"
"  winsettitle winwait winwaitactive winwaitclose winwaitnotactive\n"
"\n"
"keywords3.$(file.patterns.au3)= \\\n"
" @appdatacommondir @appdatadir @autoitversion @commonfilesdir @compiled @computername @comspec \\\n"
"  @cr @crlf @desktopcommondir @desktopdir @desktopheight @desktopwidth @documentscommondir @error \\\n"
"  @favoritescommondir @favoritesdir @homedrive @homepath @homeshare @hour @ipaddress1 @ipaddress2 \\\n"
"  @ipaddress3 @ipaddress4 @lf @logondnsdomain @logondomain @logonserver @mday @min @mon @mydocumentsdir \\\n"
"  @osbuild @oslang @osservicepack @ostype @osversion @programfilesdir @programscommondir @programsdir \\\n"
"  @scriptdir @scriptfullpath @scriptname @sec @startmenucommondir @startmenudir @startupcommondir \\\n"
"  @startupdir @sw_hide @sw_maximize @sw_minimize @sw_restore @sw_show @systemdir @tab @tempdir \\\n"
"  @userprofiledir @username @wday @windowsdir @workingdir @yday @year\n"
"\n"
"keywords4.$(file.patterns.au3)= {!} {#} {^} {{} {}} {+} {alt} {altdown} {altup} {appskey} {asc} {backspace} {browser_back} \\\n"
"{browser_favorites} {browser_forward} {browser_home} {browser_refresh} {browser_search} {browser_stop} {bs} {capslock} {ctrlbreak} \\\n"
"{ctrldown} {ctrlup} {del} {delete} {down} {end} {enter} {esc} {escape} {f1} {f10} {f11} {f12} {f2} {f3} {f4} {f5} {f6} {f7} {f8} {f9} \\\n"
"{home} {ins} {insert} {lalt} {launch_app1} {launch_app2} {launch_mail} {launch_media} {lctrl} {left} {lshift} {lwin} \\\n"
"{lwindown} {media_next} {media_play_pause} {media_prev} {media_stop} {numlock} \\\n"
"{numpad0} {numpad1} {numpad2} {numpad3} {numpad4} {numpad5} {numpad6} {numpad7} {numpad8} {numpad9} \\\n"
"{numpadadd} {numpaddiv} {numpaddot} {numpadenter} {numpadmult} {numpadsub} {pause} {pgdn} {pgup} \\\n"
"{printscreen} {ralt} {rctrl} {right} {rshift} {rwin} {rwindown} {scrolllock} {shiftdown} {shiftup} {sleep} {space} {tab} {up} \\\n"
"{volume_down} {volume_mute} {volume_up}\n"
"\n"
"keywords5.$(file.patterns.au3)= #include #include-once\n"
"\n"
"keywords6.$(file.patterns.au3)= #region #endregion\n"
"\n"
"style.au3.0=fore:#000000\n"
"style.au3.1=fore:#009933,italics\n"
"style.au3.2=fore:#669900,italics\n"
"style.au3.3=fore:#AC00A9,bold,italics\n"
"style.au3.4=fore:#000090,bold,italics\n"
"style.au3.5=fore:#0000FF,bold\n"
"style.au3.6=fore:#FF33FF,bold\n"
"style.au3.7=fore:#9999CC,bold\n"
"style.au3.8=fore:#FF0000,bold\n"
"style.au3.9=fore:#AA0000,bold\n"
"style.au3.10=fore:#FF8800,bold\n"
"style.au3.11=fore:#F000FF,italics\n"
"style.au3.12=fore:#A00FF0,italics\n"
"style.au3.13=fore:#FF0000,bold\n"
"style.au3.14=fore:#0000FF,bold,italics\n"
"\n"
"filter.ave=AVE (ave)|*.ave|\n"
"\n"
"\n"
"file.patterns.ave=*.ave\n"
"\n"
"lexer.*.ave=ave\n"
"lexer.$(file.patterns.ave)=ave\n"
"\n"
"\n"
"keywords.$(file.patterns.ave)=nil true false else for if while then elseif end av self in exit\n"
"word.chars.ave=$(chars.alpha)$(chars.numeric)_#\n"
"word.characters.$(file.patterns.ave)=$(word.chars.ave)\n"
"\n"
"statement.indent.$(file.patterns.ave)=1 else for if while then\n"
"statement.lookback.$(file.patterns.ave)=1 end\n"
"\n"
"\n"
"\n"
"comment.block.ave='--\n"
"\n"
"comment.box.start.ave='--\n"
"comment.box.middle.ave='--\n"
"comment.box.end.ave='--\n"
"autocomplete.ave.ignorecase=1\n"
"calltip.ave.ignorecase=1\n"
"autocomplete.ave.start.characters=.\n"
"calltip.ave.word.characters=.$(word.chars.ave)\n"
"\n"
"style.ave.32=$(font.code.base),fore:#000000\n"
"style.ave.0=fore:#FF0000\n"
"style.ave.1=$(colour.code.comment.line),$(font.code.comment.line)\n"
"style.ave.2=$(colour.number),bold\n"
"style.ave.3=$(colour.keyword),bold\n"
"style.ave.6=$(colour.string)\n"
"style.ave.7=$(colour.preproc),bold\n"
"style.ave.8=back:#E0C0E0,eolfilled\n"
"style.ave.10=$(colour.operator)\n"
"style.ave.9=$(font.code.base),fore:#000000\n"
"style.ave.12=$(font.code.base),fore:#003355,bold\n"
"style.ave.13=$(font.code.base),fore:#005533,bold\n"
"style.ave.14=$(colour.keyword)\n"
"style.ave.15=$(colour.keyword)\n"
"style.ave.16=$(colour.keyword)\n"
"braces.ave.style=10\n"
"\n"
"\n"
"avenue=ave \"$(FilePath)\"\n"
"avenueGo=avego \"$(FilePath)\"\n"
"avenueBuild=avebuild \"$(FilePath)\"\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"file.patterns.avs=*.avs;*.avsi\n"
"\n"
"filter.avs=AviSynth (avs avsi)|$(file.patterns.avs)|\n"
"\n"
"lexer.$(file.patterns.avs)=avs\n"
"\n"
"word.chars.avs=$(chars.alpha)$(chars.numeric)_#\n"
"word.characters.$(file.patterns.avs)=$(word.chars.avs)\n"
"\n"
"autocomplete.avs.ignorecase=1\n"
"autocomplete.avs.fillups=(\n"
"calltip.avs_quote.ignorecase=1\n"
"calltip.avs.word.characters=$(word.chars.avs)\n"
"\n"
"comment.block.at.line.start.avs=1\n"
"comment.block.avs=#~\n"
"comment.stream.start.avs=/*\n"
"comment.stream.end.avs=*/\n"
"comment.box.start.avs=/*\n"
"comment.box.middle.avs= *\n"
"comment.box.end.avs= */\n"
"\n"
"keywords.$(file.patterns.avs)=true false return global\n"
"\n"
"keywords2.$(file.patterns.avs)=addborders alignedsplice amplify amplifydb animate applyrange assumebff \\\n"
"assumefieldbased assumefps assumeframebased assumesamplerate assumescaledfps assumetff audiodub audiodubex \\\n"
"avifilesource avisource bicubicresize bilinearresize blackmanresize blackness blankclip blur bob cache \\\n"
"changefps colorbars colorkeymask coloryuv compare complementparity conditionalfilter conditionalreader \\\n"
"convertaudio convertaudioto16bit convertaudioto24bit convertaudioto32bit convertaudioto8bit convertaudiotofloat \\\n"
"convertbacktoyuy2 convertfps converttobackyuy2 converttomono converttorgb converttorgb24 converttorgb32 \\\n"
"converttoy8 converttoyv16 converttoyv24 converttoyv411 converttoyuy2 converttoyv12 crop cropbottom delayaudio \\\n"
"deleteframe dissolve distributor doubleweave duplicateframe ensurevbrmp3sync fadein fadein0 fadein2 fadeio fadeio0 \\\n"
"fadeio2 fadeout fadeout0 fadeout2 fixbrokenchromaupsampling fixluminance fliphorizontal flipvertical frameevaluate \\\n"
"freezeframe gaussresize generalconvolution getchannel getchannels getmtmode getparity grayscale greyscale histogram \\\n"
"horizontalreduceby2 imagereader imagesource imagewriter info interleave internalcache internalcachemt invert killaudio \\\n"
"killvideo lanczos4resize lanczosresize layer letterbox levels limiter loop mask maskhs max merge mergeargb mergechannels \\\n"
"mergechroma mergeluma mergergb messageclip min mixaudio monotostereo normalize null opendmlsource overlay peculiarblend \\\n"
"pointresize pulldown reduceby2 resampleaudio resetmask reverse rgbadjust scriptclip segmentedavisource segmenteddirectshowsource \\\n"
"selecteven selectevery selectodd selectrangeevery separatefields setmtmode sharpen showalpha showblue showfiveversions \\\n"
"showframenumber showgreen showred showsmpte showtime sincresize skewrows spatialsoften spline16resize spline36resize \\\n"
"spline64resize ssrc stackhorizontal stackvertical subtitle subtract supereq swapfields swapuv temporalsoften timestretch \\\n"
"tone trim turn180 turnleft turnright tweak unalignedsplice utoy utoy8 version verticalreduceby2 vtoy vtoy8 wavsource \\\n"
"weave writefile writefileend writefileif writefilestart ytouv\n"
"\n"
"keywords3.$(file.patterns.avs)=addgrain addgrainc agc_hdragc analyzelogo animeivtc asharp audiograph autocrop \\\n"
"autoyuy2 avsrecursion awarpsharp bassaudiosource bicublinresize bifrost binarize blendfields blindpp blockbuster \\\n"
"bordercontrol cfielddiff cframediff chromashift cnr2 colormatrix combmask contra convolution3d convolution3dyv12 \\\n"
"dctfilter ddcc deblendlogo deblock deblock_qed decimate decomb dedup deen deflate degrainmedian depan depanestimate \\\n"
"depaninterleave depanscenes depanstabilize descratch despot dfttest dgbob dgsource directshowsource distancefunction \\\n"
"dss2 dup dupmc edeen edgemask ediupsizer eedi2 eedi3 eedi3_rpow2 expand faerydust fastbicubicresize fastbilinearresize \\\n"
"fastediupsizer dedgemask fdecimate ffaudiosource ffdshow ffindex ffmpegsource ffmpegsource2 fft3dfilter fft3dgpu \\\n"
"ffvideosource fielddeinterlace fielddiff fillmargins fity2uv fity2u fity2v fitu2y fitv2y fluxsmooth fluxsmoothst fluxsmootht \\\n"
"framediff framenumber frfun3b frfun7 gicocu golddust gradfun2db grapesmoother greedyhma grid guavacomb hqdn3d hybridfupp \\\n"
"hysteresymask ibob improvesceneswitch inflate inpand inpaintlogo interframe interlacedresize interlacedwarpedresize \\\n"
"interleaved2planar iscombed iscombedt iscombedtivtc kerneldeint leakkernelbob leakkerneldeint limitedsharpen limitedsharpenfaster \\\n"
"logic lsfmod lumafilter lumayv12 manalyse maskeddeinterlace maskedmerge maskedmix mblockfps mcompensate mctemporaldenoise \\\n"
"mctemporaldenoisepp mdegrain1 mdegrain2 mdegrain3 mdepan medianblur mergehints mflow mflowblur mflowfps mflowinter minblur mipsmooth \\\n"
"mmask moderatesharpen monitorfilter motionmask mpasource mpeg2source mrecalculate mscdetection msharpen mshow msmooth msu_fieldshiftfixer \\\n"
"msu_frc msuper mt mt_adddiff mt_average mt_binarize mt_circle mt_clamp mt_convolution mt_deflate mt_diamond mt_edge mt_ellipse \\\n"
"mt_expand mt_freeellipse mt_freelosange mt_freerectangle mt_hysteresis mt_infix mt_inflate mt_inpand mt_invert mt_logic mt_losange \\\n"
"mt_lut mt_lutf mt_luts mt_lutspa mt_lutsx mt_lutxy mt_lutxyz mt_makediff mt_mappedblur mt_merge mt_motion mt_polish mt_rectangle \\\n"
"mt_square mti mtsource multidecimate mvanalyse mvblockfps mvchangecompensate mvcompensate mvdegrain1 mvdegrain2 mvdegrain3 mvdenoise \\\n"
"mvdepan mvflow mvflowblur mvflowfps mvflowfps2 mvflowinter mvincrease mvmask mvrecalculate mvscdetection mvshow nicac3source nicdtssource \\\n"
"niclpcmsource nicmpasource nicmpg123source nnedi nnedi2 nnedi2_rpow2 nnedi3 nnedi3_rpow2 nomosmooth overlaymask peachsmoother pixiedust \\\n"
"planar2interleaved qtgmc qtinput rawavsource rawsource reduceflicker reinterpolate411 removedirt removedust removegrain removegrainhd \\\n"
"removetemporalgrain repair requestlinear reversefielddominance rgb3dlut rgdeinterlace rgsdeinterlace rgblut rotate sangnom seesaw sharpen2 \\\n"
"showchannels showcombedtivtc smartdecimate smartdeinterlace smdegrain smoothdeinterlace smoothuv soothess soxfilter spacedust sshiq ssim \\\n"
"ssiq stmedianfilter t3dlut tanisotropic tbilateral tcanny tcomb tcombmask tcpserver tcpsource tdecimate tdeint tedgemask telecide \\\n"
"temporalcleaner temporalrepair temporalsmoother tfieldblank tfm tisophote tivtc tmaskblank tmaskedmerge tmaskedmerge3 tmm tmonitor tnlmeans \\\n"
"tomsmocomp toon textsub ttempsmooth ttempsmoothf tunsharp unblock uncomb undot unfilter unsharpmask vaguedenoiser variableblur verticalcleaner \\\n"
"videoscope vinverse vobsub vqmcalc warpedresize warpsharp xsharpen yadif yadifmod yuy2lut yv12convolution yv12interlacedreduceby2 \\\n"
"yv12interlacedselecttopfields yv12layer yv12lut yv12lutxy yv12substract yv12torgb24 yv12toyuy2\n"
"\n"
"keywords4.$(file.patterns.avs)=abs apply assert bool ceil chr clip continueddenominator continuednumerator cos default defined \\\n"
"eval averagechromau averagechromav averageluma chromaudifference chromavdifference lumadifference exist exp findstr float floor \\\n"
"frac hexvalue import int isbool isclip isfloat isint isstring lcase leftstr load_stdcall_plugin loadcplugin loadplugin loadvfapiplugin \\\n"
"loadvirtualdubplugin log midstr muldiv nop opt_allowfloataudio opt_avipadscanlines opt_dwchannelmask opt_usewaveextensible \\\n"
"opt_vdubplanarhack pi pow rand revstr rightstr round scriptdir scriptfile scriptname select setmemorymax setplanarlegacyalignment \\\n"
"rgbdifference rgbdifferencefromprevious rgbdifferencetonext udifferencefromprevious udifferencetonext setworkingdir sign sin spline \\\n"
"sqrt string strlen time ucase undefined value versionnumber versionstring uplanemax uplanemedian uplanemin uplaneminmaxdifference \\\n"
"vdifferencefromprevious vdifferencetonext vplanemax vplanemedian vplanemin vplaneminmaxdifference ydifferencefromprevious \\\n"
"ydifferencetonext yplanemax yplanemedian yplanemin yplaneminmaxdifference\n"
"\n"
"keywords5.$(file.patterns.avs)=audiobits audiochannels audiolength audiolengthf audiorate framecount framerate frameratedenominator \\\n"
"frameratenumerator getleftchannel getrightchannel hasaudio hasvideo height isaudiofloat isaudioint isfieldbased isframebased \\\n"
"isinterleaved isplanar isrgb isrgb24 isrgb32 isyuv isyuy2 isyv12 width\n"
"\n"
"keywords6.$(file.patterns.avs)=\n"
"\n"
"\n"
"style.avs.32=$(font.base)\n"
"style.avs.0=fore:#000000,$(font.base)\n"
"style.avs.1=$(colour.code.comment.box),$(font.code.comment.box)\n"
"style.avs.2=$(colour.code.comment.box),$(font.code.comment.box)\n"
"style.avs.3=$(colour.code.comment.line),$(font.code.comment.line)\n"
"style.avs.4=$(colour.number)\n"
"style.avs.5=$(colour.operator)\n"
"style.avs.6=\n"
"style.avs.7=$(colour.string)\n"
"style.avs.8=$(colour.string)\n"
"style.avs.9=fore:#00007F,bold\n"
"style.avs.10=fore:#00007F,bold\n"
"style.avs.11=fore:#0080C0,bold\n"
"style.avs.12=fore:#007F7F\n"
"style.avs.13=fore:#00007F\n"
"style.avs.14=fore:#8000FF\n"
"braces.avs.style=5\n"
"\n"
"file.patterns.baan=*.bc;*.cln\n"
"\n"
"filter.baan=Baan (baan)|$(file.patterns.baan)|\n"
"\n"
"lexer.$(file.patterns.baan)=baan\n"
"\n"
"word.characters.$(file.patterns.baan)=$(chars.alpha)$(chars.numeric)_#.$\n"
"calltip.baan.word.characters=\"._0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$\"\n"
"autocomplete.baan.ignorecase=1\n"
"calltip.baan.ignorecase=1\n"
"\n"
"preprocessor.symbol.$(file.patterns.baan)=#\n"
"preprocessor.start.$(file.patterns.baan)=if ifdef ifndef\n"
"preprocessor.middle.$(file.patterns.baan)=else elif\n"
"preprocessor.end.$(file.patterns.baan)=endif\n"
"\n"
"keywordclass.baan=\n"
"keywords.$(file.patterns.baan)=$(keywordclass.baan)\n"
"\n"
"comment.block.baan=|\n"
"comment.box.start.baan=|\n"
"comment.box.middle.baan=|\n"
"comment.box.end.baan=|\n"
"comment.stream.start.baan=DllUsage\n"
"comment.stream.end.baan=EndDllUsage\n"
"\n"
"\n"
"\n"
"colour.baan.operator=fore:#B06000\n"
"\n"
"style.baan.32=$(font.monospace)\n"
"style.baan.0=fore:#808080,$(font.monospace)\n"
"style.baan.1=$(colour.code.comment.line),$(font.monospace)\n"
"style.baan.2=fore:#007F7F,$(font.comment)\n"
"style.baan.3=$(colour.number),$(font.monospace)\n"
"style.baan.4=$(colour.keyword),bold,$(font.monospace)\n"
"style.baan.5=$(colour.string),$(font.monospace)\n"
"style.baan.6=$(colour.preproc),$(font.monospace)\n"
"style.baan.7=$(colour.operator),bold,$(font.monospace)\n"
"style.baan.8=$(font.monospace)\n"
"style.baan.9=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled\n"
"style.baan.10=fore:#B00040,$(font.monospace)\n"
"braces.baan.style=10\n"
"\n"
"statement.indent.$(file.patterns.baan)=5 after.choice  after.commit.transaction  after.delete  \\\n"
"after.display  after.field  \\\n"
"after.form  after.input  after.program  after.read  after.rewrite  \\\n"
"after.group  after.skip.delete  after.skip.rewrite  after.skip.write  \\\n"
"after.update.db.commit  after.write  after.zoom  \\\n"
"before.checks  before.choice  before.delete  before.display  \\\n"
"before.display.object  before.field  before.form  before.input  before.layout  \\\n"
"before.group before.program  before.read  before.rewrite  before.write  before.zoom  \\\n"
"case check.input  declaration  default  dllusage  \\\n"
"else  elseif  functions  if  on.input  on.entry  on.exit \\\n"
"read.view  ref.input  ref.display selectdo  selectempty  selecteos \\\n"
"when.field.changes  while\n"
"\n"
"statement.lookback.$(file.patterns.baan)=1 endif endwhile endfor endselect return\n"
"\n"
"file.patterns.blitzbasic=*.bb\n"
"\n"
"filter.blitzbasic=BlitzBasic (bb)|$(file.patterns.blitzbasic)|\n"
"\n"
"lexer.$(file.patterns.blitzbasic)=blitzbasic\n"
"\n"
"\n"
"keywordclass.blitzbasic=abs accepttcpstream acos after and apptitle asc asin atan atan2 \\\n"
"automidhandle autosuspend availvidmem backbuffer banksize before bin calldll \\\n"
"case ceil changedir channelpan channelpitch channelplaying channelvolume chr \\\n"
"closedir closefile closemovie closetcpserver closetcpstream closeudpstream cls \\\n"
"clscolor color colorblue colorgreen colorred commandline const copybank copyfile \\\n"
"copyimage copypixel copypixelfast copyrect copystream cos countgfxdrivers \\\n"
"countgfxmodes counthostips createbank createdir createimage createnetplayer \\\n"
"createprocess createtcpserver createtimer createudpstream currentdate currentdir \\\n"
"currenttime data debuglog default delay delete deletedir deletefile \\\n"
"deletenetplayer desktopbuffer dim dottedip drawblock drawblockrect drawimage \\\n"
"drawimagerect drawmovie each else else if elseif end end function end if end \\\n"
"select end type endgraphics endif eof execfile exit exp false field filepos \\\n"
"filesize filetype first flip float floor flushjoy flushkeys flushmouse \\\n"
"fontheight fontname fontsize fontstyle fontwidth for forever freebank freefont \\\n"
"freeimage freesound freetimer frontbuffer function gammablue gammagreen gammared \\\n"
"getcolor getenv getkey getmouse gfxdrivername gfxmodedepth gfxmodeexists \\\n"
"gfxmodeformat gfxmodeheight gfxmodewidth global gosub goto grabimage graphics \\\n"
"graphicsbuffer graphicsdepth graphicsformat graphicsheight graphicswidth \\\n"
"handleimage hex hidepointer hostip hostnetgame if imagebuffer imageheight \\\n"
"imagerectcollide imagerectoverlap imagescollide imagesoverlap imagewidth \\\n"
"imagexhandle imageyhandle include input insert instr int joinnetgame joydown \\\n"
"joyhat joyhit joypitch joyroll joytype joyu joyudir joyv joyvdir joyx joyxdir \\\n"
"joyy joyyaw joyydir joyz joyzdir keydown keyhit keywait last left len line \\\n"
"loadanimimage loadbuffer loadfont loadimage loadsound local lockbuffer \\\n"
"lockedformat lockedpitch lockedpixels log log10 loopsound lower lset maskimage \\\n"
"mid midhandle millisecs mod morefiles mousedown mousehit mousex mousexspeed \\\n"
"mousey mouseyspeed mousez mousezspeed movemouse movieheight movieplaying \\\n"
"moviewidth netmsgdata netmsgfrom netmsgto netmsgtype netplayerlocal \\\n"
"netplayername new next nextfile not null openfile openmovie opentcpstream or \\\n"
"origin oval pausechannel pausetimer peekbyte peekfloat peekint peekshort pi \\\n"
"playcdtrack playmusic playsound plot pokebyte pokefloat pokeint pokeshort print \\\n"
"queryobject rand read readavail readbyte readbytes readdir readfile readfloat \\\n"
"readint readline readpixel readpixelfast readshort readstring rect rectsoverlap \\\n"
"recvnetmsg recvudpmsg repeat replace resettimer resizebank resizeimage restore \\\n"
"resumechannel resumetimer return right rnd rndseed rotateimage rset runtimeerror \\\n"
"sar savebuffer saveimage scaleimage scanline seedrnd seekfile select sendnetmsg \\\n"
"sendudpmsg setbuffer setenv setfont setgamma setgfxdriver sgn shl showpointer \\\n"
"shr sin soundpan soundpitch soundvolume sqr startnetgame step stop stopchannel \\\n"
"stopnetgame str string stringheight stringwidth systemproperty tan tcpstreamip \\\n"
"tcpstreamport tcptimeouts text tformfilter tformimage then tileblock tileimage \\\n"
"timerticks to totalvidmem trim true type udpmsgip udpmsgport udpstreamip \\\n"
"udpstreamport udptimeouts unlockbuffer until updategamma upper viewport vwait \\\n"
"waitkey waitmouse waittimer wend while write writebyte writebytes writefile \\\n"
"writefloat writeint writeline writepixel writepixelfast writeshort writestring \\\n"
"xor\n"
"\n"
"keywords.$(file.patterns.blitzbasic)=$(keywordclass.blitzbasic)\n"
"\n"
"style.blitzbasic.0=fore:#000000\n"
"style.blitzbasic.1=$(colour.code.comment.line),$(font.code.comment.line)\n"
"style.blitzbasic.2=$(colour.number)\n"
"style.blitzbasic.3=$(colour.keyword)\n"
"style.blitzbasic.4=$(colour.string)\n"
"style.blitzbasic.6=$(colour.operator)\n"
"style.blitzbasic.7=$(style.blitzbasic.0)\n"
"style.blitzbasic.10=$(colour.keyword)\n"
"style.blitzbasic.11=$(colour.keyword)\n"
"style.blitzbasic.12=$(colour.keyword)\n"
"style.blitzbasic.15=$(colour.preproc)\n"
"style.blitzbasic.16=$(colour.error)\n"
"style.blitzbasic.17=$(colour.number)\n"
"style.blitzbasic.18=$(colour.number)\n"
"\n"
"\n"
"filter.bullant=Bullant (.ant)|*.ant|\n"
"\n"
"file.patterns.bullant=*.ant\n"
"\n"
"lexer.$(file.patterns.bullant)=bullant\n"
"\n"
"keywordclass.bullant=abstract all ancestor and application \\\n"
"assert attributes author \\\n"
"begin \\\n"
"callback class concrete config constants construct continue \\\n"
"depends description downcast driver \\\n"
"elif else ensures error exception exposure extension \\\n"
"false fatal final function \\\n"
"generics glyph \\\n"
"help hidden host \\\n"
"immutable in inherits is \\\n"
"kernel \\\n"
"label leave library locals \\\n"
"mutable \\\n"
"none not null \\\n"
"obsolete options or other \\\n"
"parameters peer private public \\\n"
"raise reason restricted retry return \\\n"
"returns rollback route \\\n"
"security self settings severity step \\\n"
;
const char *props2 = 
"task test transaction true \\\n"
"unknown \\\n"
"varying \\\n"
"warning when \\\n"
"method end if until while trap case debug for foreach lock \\\n"
"boolean \\\n"
"character character$ \\\n"
"date date$ datetime datetime$ \\\n"
"float \\\n"
"hex$ \\\n"
"identifier identifier$ integer interval interval$ \\\n"
"money money$ \\\n"
"raw raw$ \\\n"
"string \\\n"
"tick tick$ time time$ \\\n"
"version version$\n"
"\n"
"\n"
"keywords.$(file.patterns.bullant)=$(keywordclass.bullant)\n"
"\n"
"style.bullant.0=fore:#000000,$(font.monospace)\n"
"style.bullant.1=fore:#007F00,$(font.monospace)\n"
"style.bullant.2=fore:#007F00,$(font.monospace)\n"
"style.bullant.3=fore:#7F7F7F\n"
"style.bullant.4=fore:#007F7F\n"
"\n"
"\n"
"style.bullant.5=fore:#00007F,bold\n"
"style.bullant.6=fore:#7F007F,$(font.monospace)\n"
"style.bullant.7=fore:#7F007F,$(font.monospace)\n"
"style.bullant.8=fore:#007F7F\n"
"style.bullant.9=fore:#7F7F00\n"
"\n"
"command.compile.*.ant=\n"
"\n"
"command.go.*.ant=\n"
"command.go.subsystem.*.ant=\n"
"\n"
"command.build.*.ant=\n"
"command.build.subsystem.*.ant=\n"
"\n"
"\n"
"file.patterns.caml=*.ml;*.mli\n"
"file.patterns.sml=*.sml\n"
"\n"
"filter.caml=Objective Caml (ml mli)|$(file.patterns.caml)|\n"
"filter.sml=Standard ML 97 (sml ml)|$(file.patterns.sml)|\n"
"\n"
"lexer.*.caml=caml\n"
"lexer.$(file.patterns.caml)=caml\n"
"lexer.$(file.patterns.sml)=caml\n"
"\n"
"\n"
"keywordstandard.caml= \\\n"
"and as assert asr begin class \\\n"
"constraint do done downto else end \\\n"
"exception external false for fun function \\\n"
"functor if in include inherit initializer \\\n"
"land lazy let lor lsl lsr \\\n"
"lxor match method mod module mutable \\\n"
"new object of open or private \\\n"
"rec sig struct then to true \\\n"
"try type val virtual when while \\\n"
"with\n"
"keywords.$(file.patterns.caml)=$(keywordstandard.caml)\n"
"\n"
"keywordstandard.sml= \\\n"
"abstype andalso and as case datatype div do \\\n"
"else end eqtype exception \\\n"
"false fn fun functor handle if infixr infix include in let local \\\n"
"mod nonfix not of open op orelse raise rec \\\n"
"sharing signature sig structure struct then true type use \\\n"
"val while withtype with\n"
"keywords.$(file.patterns.sml)=$(keywordstandard.sml)\n"
"\n"
"keywordoptional1.caml= \\\n"
"option Some None ignore ref lnot succ pred parser\n"
"keywords2.$(file.patterns.caml)=$(keywordoptional1.caml)\n"
"\n"
"keywordoptional1.sml= \\\n"
"option SOME NONE ignore ref \\\n"
"chr explode implode ord size\n"
"keywords2.$(file.patterns.sml)=$(keywordoptional1.sml)\n"
"\n"
"keywordoptional2.caml= \\\n"
"array bool char float int list string unit\n"
"keywords3.$(file.patterns.caml)=$(keywordoptional2.caml)\n"
"\n"
"keywordoptional2.sml= \\\n"
"array bool char int list nil real string unit vector word\n"
"keywords3.$(file.patterns.sml)=$(keywordoptional2.sml)\n"
"\n"
"word.characters.$(file.patterns.caml)=$(chars.alpha)$(chars.numeric)_'`\n"
"word.characters.$(file.patterns.sml)=$(chars.alpha)$(chars.numeric)_'\n"
"\n"
"comment.stream.start.caml=(*\n"
"comment.stream.end.caml=*)\n"
"comment.box.start.caml=(*\n"
"comment.box.middle.caml= *\n"
"comment.box.end.caml= *)\n"
"\n"
"\n"
"style.caml.32=$(font.base)\n"
"style.caml.0=fore:#808080\n"
"style.caml.1=\n"
"style.caml.2=fore:#000000,back:#ffe0ff\n"
"style.caml.3=$(colour.keyword),bold\n"
"style.caml.4=fore:#000000,back:#e0e0ff\n"
"style.caml.5=fore:#a0000,bold\n"
"style.caml.6=back:#C0C0C0,$(font.base)\n"
"style.caml.7=$(colour.operator),bold\n"
"style.caml.8=fore:#000000,back:#ffff00\n"
"style.caml.9=fore:#000000,back:#ffff00\n"
"style.caml.10=fore:#000000,back:#e0e0e0\n"
"style.caml.11=fore:#000000,back:#ffff00\n"
"style.caml.12=$(colour.code.comment.box),$(font.code.comment.box)\n"
"style.caml.13=$(colour.embedded.comment),$(font.code.comment.box)\n"
"style.caml.14=$(colour.embedded.comment),$(font.code.comment.box)\n"
"style.caml.15=$(colour.embedded.comment),$(font.code.comment.box)\n"
"\n"
"braces.caml.style=7\n"
"\n"
"command.compile.$(file.patterns.caml)=ocamlc -c $(FileNameExt)\n"
"\n"
"filter.cmake=CMake (CMakeLists.txt, *.cmake, *.ctest)|CMakeLists.txt;*.cmake;*.cmake.in;*.ctest;*.ctest.in|\n"
"file.patterns.cmake=CMakeLists.txt;*.cmake;*.cmake.in;*.ctest;*.ctest.in\n"
"lexer.$(file.patterns.cmake)=cmake\n"
"\n"
"keywords.$(file.patterns.cmake)= add_custom_command \\\n"
"add_custom_target \\\n"
"add_definitions \\\n"
"add_dependencies \\\n"
"add_executable \\\n"
"add_library \\\n"
"add_subdirectory \\\n"
"add_test \\\n"
"aux_source_directory \\\n"
"build_command \\\n"
"build_name \\\n"
"cmake_minimum_required \\\n"
"configure_file \\\n"
"create_test_sourcelist \\\n"
"else \\\n"
"elseif \\\n"
"enable_language \\\n"
"enable_testing \\\n"
"endforeach \\\n"
"endif \\\n"
"endmacro \\\n"
"endwhile \\\n"
"exec_program \\\n"
"execute_process \\\n"
"export_library_dependencies \\\n"
"file \\\n"
"find_file \\\n"
"find_library \\\n"
"find_package \\\n"
"find_path \\\n"
"find_program \\\n"
"fltk_wrap_ui \\\n"
"foreach \\\n"
"get_cmake_property \\\n"
"get_directory_property \\\n"
"get_filename_component \\\n"
"get_source_file_property \\\n"
"get_target_property \\\n"
"get_test_property \\\n"
"if \\\n"
"include \\\n"
"include_directories \\\n"
"include_external_msproject \\\n"
"include_regular_expression \\\n"
"install \\\n"
"install_files \\\n"
"install_programs \\\n"
"install_targets \\\n"
"link_directories \\\n"
"link_libraries \\\n"
"list \\\n"
"load_cache \\\n"
"load_command \\\n"
"macro \\\n"
"make_directory \\\n"
"mark_as_advanced \\\n"
"math \\\n"
"message \\\n"
"option \\\n"
"output_required_files \\\n"
"project \\\n"
"qt_wrap_cpp \\\n"
"qt_wrap_ui \\\n"
"remove \\\n"
"remove_definitions \\\n"
"separate_arguments \\\n"
"set \\\n"
"set_directory_properties \\\n"
"set_source_files_properties \\\n"
"set_target_properties \\\n"
"set_tests_properties \\\n"
"site_name \\\n"
"source_group \\\n"
"string \\\n"
"subdir_depends \\\n"
"subdirs \\\n"
"target_link_libraries \\\n"
"try_compile \\\n"
"try_run \\\n"
"use_mangled_mesa \\\n"
"utility_source \\\n"
"variable_requires \\\n"
"vtk_make_instantiator \\\n"
"vtk_wrap_java \\\n"
"vtk_wrap_python \\\n"
"vtk_wrap_tcl \\\n"
"while \\\n"
"write_file\n"
"\n"
"keywords2.$(file.patterns.cmake)= ABSOLUTE \\\n"
"ABSTRACT \\\n"
"ADDITIONAL_MAKE_CLEAN_FILES \\\n"
"ALL \\\n"
"AND \\\n"
"APPEND \\\n"
"ARGS \\\n"
"ASCII \\\n"
"BEFORE \\\n"
"CACHE \\\n"
"CACHE_VARIABLES \\\n"
"CLEAR \\\n"
"COMMAND \\\n"
"COMMANDS \\\n"
"COMMAND_NAME \\\n"
"COMMENT \\\n"
"COMPARE \\\n"
"COMPILE_FLAGS \\\n"
"COPYONLY \\\n"
"DEFINED \\\n"
"DEFINE_SYMBOL \\\n"
"DEPENDS \\\n"
"DOC \\\n"
"EQUAL \\\n"
"ESCAPE_QUOTES \\\n"
"EXCLUDE \\\n"
"EXCLUDE_FROM_ALL \\\n"
"EXISTS \\\n"
"EXPORT_MACRO \\\n"
"EXT \\\n"
"EXTRA_INCLUDE \\\n"
"FATAL_ERROR \\\n"
"FILE \\\n"
"FILES \\\n"
"FORCE \\\n"
"FUNCTION \\\n"
"GENERATED \\\n"
"GLOB \\\n"
"GLOB_RECURSE \\\n"
"GREATER \\\n"
"GROUP_SIZE \\\n"
"HEADER_FILE_ONLY \\\n"
"HEADER_LOCATION \\\n"
"IMMEDIATE \\\n"
"INCLUDES \\\n"
"INCLUDE_DIRECTORIES \\\n"
"INCLUDE_INTERNALS \\\n"
"INCLUDE_REGULAR_EXPRESSION \\\n"
"LESS \\\n"
"LINK_DIRECTORIES \\\n"
"LINK_FLAGS \\\n"
"LOCATION \\\n"
"MACOSX_BUNDLE \\\n"
"MACROS \\\n"
"MAIN_DEPENDENCY \\\n"
"MAKE_DIRECTORY \\\n"
"MATCH \\\n"
"MATCHALL \\\n"
"MATCHES \\\n"
"MODULE \\\n"
"NAME \\\n"
"NAME_WE \\\n"
"NOT \\\n"
"NOTEQUAL \\\n"
"NO_SYSTEM_PATH \\\n"
"OBJECT_DEPENDS \\\n"
"OPTIONAL \\\n"
"OR \\\n"
"OUTPUT \\\n"
"OUTPUT_VARIABLE \\\n"
"PATH \\\n"
"PATHS \\\n"
"POST_BUILD \\\n"
"POST_INSTALL_SCRIPT \\\n"
"PREFIX \\\n"
"PREORDER \\\n"
"PRE_BUILD \\\n"
"PRE_INSTALL_SCRIPT \\\n"
"PRE_LINK \\\n"
"PROGRAM \\\n"
"PROGRAM_ARGS \\\n"
"PROPERTIES \\\n"
"QUIET \\\n"
"RANGE \\\n"
"READ \\\n"
"REGEX \\\n"
"REGULAR_EXPRESSION \\\n"
"REPLACE \\\n"
"REQUIRED \\\n"
"RETURN_VALUE \\\n"
"RUNTIME_DIRECTORY \\\n"
"SEND_ERROR \\\n"
"SHARED \\\n"
"SOURCES \\\n"
"STATIC \\\n"
"STATUS \\\n"
"STREQUAL \\\n"
"STRGREATER \\\n"
"STRLESS \\\n"
"SUFFIX \\\n"
"TARGET \\\n"
"TOLOWER \\\n"
"TOUPPER \\\n"
"VAR \\\n"
"VARIABLES \\\n"
"VERSION \\\n"
"WIN32 \\\n"
"WRAP_EXCLUDE \\\n"
"WRITE \\\n"
"APPLE  \\\n"
"MINGW \\\n"
"MSYS \\\n"
"CYGWIN  \\\n"
"BORLAND \\\n"
"WATCOM \\\n"
"MSVC MSVC_IDE MSVC60 MSVC70 MSVC71 MSVC80 CMAKE_COMPILER_2005 \\\n"
"OFF ON \\\n"
"\n"
"\n"
"statement.indent.$(file.patterns.cmake)=5 if while foreach macro\n"
"comment.block.cmake=#~\n"
"comment.block.at.line.start.cmake=1\n"
"calltip.cmake.ignorecase=1\n"
"calltip.cmake.parameters.start=(\n"
"calltip.cmake.parameters.separators=,\n"
"calltip.cmake.parameters.end=)\n"
"\n"
"style.cmake.0=fore:#000000,$(font.base)\n"
"style.cmake.1=fore:#007F00,$(font.comment)\n"
"style.cmake.2=fore:#7F007F,back:#EEEEEE\n"
"style.cmake.3=fore:#7F007F,back:#EEEEEE\n"
"style.cmake.4=fore:#7F007F,back:#EEEEEE\n"
"style.cmake.5=fore:#00007F,bold\n"
"style.cmake.6=fore:#800000\n"
"style.cmake.7=fore:#CC3300\n"
"style.cmake.8=fore:#000000\n"
"style.cmake.9=fore:#00007F,bold\n"
"style.cmake.10=fore:#00007F,bold\n"
"style.cmake.11=fore:#00007F,bold\n"
"style.cmake.12=fore:#00007F,bold\n"
"style.cmake.13=fore:#CC3300,back:#EEEEEE\n"
"style.cmake.14=$(colour.number)\n"
"\n"
"file.patterns.COBOL=*.cob\n"
"filter.cobol=COBOL (cob)|$(file.patterns.COBOL)|\n"
"\n"
"lexer.$(file.patterns.COBOL)=COBOL\n"
"\n"
"word.characters.$(file.patterns.cobol)=$(chars.alpha)$(chars.numeric)$(chars.accented)_-\n"
"\n"
"keywords.$(file.patterns.COBOL)=configuration data declaratives division environment environment-division file file-control function i-o i-o-control identification input input-output linkage local-storage output procedure program program-id receive-control section special-names working-storage\n"
"keywords2.$(file.patterns.COBOL)=accept add alter apply assign call chain close compute continue control convert copy count delete display divide draw drop eject else enable end-accept end-add end-call end-chain end-compute end-delete end-display end-divide end-evaluate end-if end-invoke end-multiply end-perform end-read end-receive end-return end-rewrite end-search end-start end-string end-subtract end-unstring end-write erase evaluate examine exec execute exit go goback generate if ignore initialize initiate insert inspect invoke leave merge move multiply open otherwise perform print read receive release reload replace report reread rerun reserve reset return rewind rewrite rollback run search seek select send set sort start stop store string subtract sum suppress terminate then transform unlock unstring update use wait when wrap write\n"
"keywords3.$(file.patterns.COBOL)=access acquire actual address advancing after all allowing alphabet alphabetic alphabetic-lower alphabetic-upper alphanumeric alphanumeric-edited also alternate and any are area areas as ascending at attribute author auto auto-hyphen-skip auto-skip automatic autoterminate background-color background-colour backward basis beep before beginning bell binary blank blink blinking block bold bottom box boxed by c01 c02 c03 c04 c05 c06 c07 c08 c09 c10 c11 c12 cancel cbl cd centered cf ch chaining changed character characters chart class clock-units cobol code code-set col collating color colour column com-reg comma command-line commit commitment common communication comp comp-0 comp-1 comp-2 comp-3 comp-4 comp-5 comp-6 comp-x compression computational computational-1 computational-2 computational-3 computational-4 computational-5 computational-6 computational-x computational console contains content control-area controls conversion converting core-index corr corresponding crt crt-under csp currency current-date cursor cycle cyl-index cyl-overflow date date-compiled date-written day day-of-week dbcs de debug debug-contents debug-item debug-line debug-name debug-sub-1 debug-sub-2 debug-sub-3 debugging decimal-point default delimited delimiter depending descending destination detail disable disk disp display-1 display-st down duplicates dynamic echo egcs egi emi empty-check encryption end end-of-page ending enter entry eol eop eos equal equals error escape esi every exceeds exception excess-3 exclusive exhibit extend extended-search external externally-described-key factory false fd fh--fcd fh--keydef file-id file-limit file-limits file-prefix filler final first fixed footing for foreground-color foreground-colour footing format from full giving global greater grid group heading high high-value high-values highlight id in index indexed indic indicate indicator indicators inheriting initial installation into invalid invoked is japanese just justified kanji kept key keyboard label last leading left left-justify leftline length length-check less limit limits lin linage linage-counter line line-counter lines lock lock-holding locking low low-value low-values lower lowlight manual mass-update master-index memory message method mode modified modules more-labels multiple name named national national-edited native nchar negative next no no-echo nominal not note nstd-reels null nulls number numeric numeric-edited numeric-fill o-fill object object-computer object-storage occurs of off omitted on oostackptr optional or order organization other others overflow overline packed-decimal padding page page-counter packed-decimal paragraph password pf ph pic picture plus pointer pop-up pos position positioning positive previous print-control print-switch printer printer-1 printing prior private procedure-pointer procedures proceed process processing prompt protected public purge queue quote quotes random range rd readers ready record record-overflow recording records redefines reel reference references relative remainder remarks removal renames reorg-criteria repeated replacing reporting reports required resident return-code returning reverse reverse-video reversed rf rh right right-justify rolling rounded s01 s02 s03 s04 s05 same screen scroll sd secure security segment segment-limit selective self selfclass sentence separate sequence sequential service setshadow shift-in shift-out sign size skip1 skip2 skip3 sort-control sort-core-size sort-file-size sort-merge sort-message sort-mode-size sort-option sort-return source source-computer space spaces space-fill spaces standard standard-1 standard-2 starting status sub-queue-1 sub-queue-2 sub-queue-3 subfile super symbolic sync synchronized sysin sysipt syslst sysout syspch syspunch system-info tab tallying tape terminal terminal-info test text than through thru time time-of-day time-out timeout times title to top totaled totaling trace track-area track-limit tracks trailing trailing-sign transaction true type typedef underline underlined unequal unit until up updaters upon upper upsi-0 upsi-1 upsi-2 upsi-3 upsi-4 upsi-5 upsi-6 upsi-7 usage user using value values variable varying when-compiled window with words write-only write-verify writerszero zero zero-fill zeros zeroes\n"
"\n"
"\n"
"style.COBOL.0=fore:#808080,$(font.monospace)\n"
"\n"
"style.COBOL.2=$(colour.code.comment.line),$(font.code.comment.line)\n"
"style.COBOL.3=$(colour.code.comment.document),$(font.code.comment.document)\n"
"style.COBOL.4=$(colour.number),$(font.monospace)\n"
"style.COBOL.5=$(colour.keyword),bold,$(font.monospace)\n"
"style.COBOL.6=$(colour.string),$(font.monospace)\n"
"style.COBOL.7=$(colour.char),$(font.monospace)\n"
"style.COBOL.8=$(colour.keyword),bold,$(font.monospace)\n"
"style.COBOL.9=$(colour.preproc),$(font.preproc)\n"
"style.COBOL.10=$(colour.operator),bold,$(font.monospace)\n"
"style.COBOL.11=$(colour.identifier),$(font.identifier),$(font.monospace)\n"
"style.COBOL.16=$(colour.keyword),bold,$(font.monospace)\n"
"\n"
"\n"
"\n"
"\n"
"file.patterns.conf=*.conf;.htaccess\n"
"filter.conf=Apache Conf (conf)|$(file.patterns.conf)|\n"
"lexer.$(file.patterns.conf)=conf\n"
"\n"
"keywords.$(file.patterns.conf)=\\\n"
"acceptmutex acceptpathinfo accessconfig accessfilename \\\n"
"action addalt addaltbyencoding addaltbytype addcharset \\\n"
"adddefaultcharset adddescription addencoding \\\n"
"addhandler addicon addiconbyencoding addiconbytype \\\n"
"addinputfilter addlanguage addmodule addmoduleinfo \\\n"
"addoutputfilter addoutputfilterbytype addtype agentlog \\\n"
"alias aliasmatch all allow allowconnect \\\n"
"allowencodedslashes allowoverride anonymous \\\n"
"anonymous_authoritative anonymous_logemail \\\n"
"anonymous_mustgiveemail anonymous_nouserid \\\n"
"anonymous_verifyemail assignuserid authauthoritative \\\n"
"authdbauthoritative authdbgroupfile \\\n"
"authdbmauthoritative authdbmgroupfile authdbmtype \\\n"
"authdbmuserfile authdbuserfile authdigestalgorithm \\\n"
"authdigestdomain authdigestfile authdigestgroupfile \\\n"
"authdigestnccheck authdigestnonceformat \\\n"
"authdigestnoncelifetime authdigestqop \\\n"
"authdigestshmemsize authgroupfile \\\n"
"authldapauthoritative authldapbinddn \\\n"
"authldapbindpassword authldapcharsetconfig \\\n"
"authldapcomparednonserver authldapdereferencealiases \\\n"
"authldapenabled authldapfrontpagehack \\\n"
"authldapgroupattribute authldapgroupattributeisdn \\\n"
"authldapremoteuserisdn authldapurl authname authtype \\\n"
"authuserfile bindaddress browsermatch \\\n"
"browsermatchnocase bs2000account bufferedlogs \\\n"
"cachedefaultexpire cachedirlength cachedirlevels \\\n"
"cachedisable cacheenable cacheexpirycheck cachefile \\\n"
"cacheforcecompletion cachegcclean cachegcdaily \\\n"
"cachegcinterval cachegcmemusage cachegcunused \\\n"
"cacheignorecachecontrol cacheignoreheaders \\\n"
"cacheignorenolastmod cachelastmodifiedfactor \\\n"
"cachemaxexpire cachemaxfilesize cacheminfilesize \\\n"
"cachenegotiateddocs cacheroot cachesize \\\n"
"cachetimemargin cgimapextension charsetdefault \\\n"
"charsetoptions charsetsourceenc checkspelling \\\n"
"childperuserid clearmodulelist contentdigest \\\n"
"cookiedomain cookieexpires cookielog cookiename \\\n"
"cookiestyle cookietracking coredumpdirectory customlog \\\n"
"dav davdepthinfinity davlockdb davmintimeout \\\n"
"defaulticon defaultlanguage defaulttype define \\\n"
"deflatebuffersize deflatecompressionlevel \\\n"
"deflatefilternote deflatememlevel deflatewindowsize \\\n"
"deny directory directoryindex directorymatch \\\n"
"directoryslash documentroot dumpioinput dumpiooutput \\\n"
"enableexceptionhook enablemmap enablesendfile \\\n"
"errordocument errorlog example expiresactive \\\n"
"expiresbytype expiresdefault extendedstatus \\\n"
"extfilterdefine extfilteroptions fancyindexing \\\n"
"fileetag files filesmatch forcelanguagepriority \\\n"
"forcetype forensiclog from group header headername \\\n"
"hostnamelookups identitycheck ifdefine ifmodule \\\n"
"imapbase imapdefault imapmenu include indexignore \\\n"
"indexoptions indexorderdefault isapiappendlogtoerrors \\\n"
"isapiappendlogtoquery isapicachefile isapifakeasync \\\n"
"isapilognotsupported isapireadaheadbuffer keepalive \\\n"
"keepalivetimeout languagepriority ldapcacheentries \\\n"
"ldapcachettl ldapconnectiontimeout ldapopcacheentries \\\n"
"ldapopcachettl ldapsharedcachefile ldapsharedcachesize \\\n"
"ldaptrustedca ldaptrustedcatype limit limitexcept \\\n"
"limitinternalrecursion limitrequestbody \\\n"
"limitrequestfields limitrequestfieldsize \\\n"
"limitrequestline limitxmlrequestbody listen \\\n"
"listenbacklog loadfile loadmodule location \\\n"
"locationmatch lockfile logformat loglevel maxclients \\\n"
"maxkeepaliverequests maxmemfree maxrequestsperchild \\\n"
"maxrequestsperthread maxspareservers maxsparethreads \\\n"
"maxthreads maxthreadsperchild mcachemaxobjectcount \\\n"
"mcachemaxobjectsize mcachemaxstreamingbuffer \\\n"
"mcacheminobjectsize mcacheremovalalgorithm mcachesize \\\n"
"metadir metafiles metasuffix mimemagicfile \\\n"
"minspareservers minsparethreads mmapfile \\\n"
"modmimeusepathinfo multiviewsmatch namevirtualhost \\\n"
"nocache noproxy numservers nwssltrustedcerts \\\n"
"nwsslupgradeable options order passenv pidfile port \\\n"
"protocolecho proxy proxybadheader proxyblock \\\n"
"proxydomain proxyerroroverride proxyiobuffersize \\\n"
"proxymatch proxymaxforwards proxypass proxypassreverse \\\n"
"proxypreservehost proxyreceivebuffersize proxyremote \\\n"
"proxyremotematch proxyrequests proxytimeout proxyvia \\\n"
"qsc readmename redirect redirectmatch \\\n"
"redirectpermanent redirecttemp refererignore \\\n"
"refererlog removecharset removeencoding removehandler \\\n"
"removeinputfilter removelanguage removeoutputfilter \\\n"
"removetype requestheader require resourceconfig \\\n"
"rewritebase rewritecond rewriteengine rewritelock \\\n"
"rewritelog rewriteloglevel rewritemap rewriteoptions \\\n"
"rewriterule rlimitcpu rlimitmem rlimitnproc satisfy \\\n"
"scoreboardfile script scriptalias scriptaliasmatch \\\n"
"scriptinterpretersource scriptlog scriptlogbuffer \\\n"
"scriptloglength scriptsock securelisten sendbuffersize \\\n"
"serveradmin serveralias serverlimit servername \\\n"
"serverpath serverroot serversignature servertokens \\\n"
"servertype setenv setenvif setenvifnocase sethandler \\\n"
"setinputfilter setoutputfilter singlelisten ssiendtag \\\n"
"ssierrormsg ssistarttag ssitimeformat ssiundefinedecho \\\n"
"sslcacertificatefile sslcacertificatepath \\\n"
"sslcarevocationfile sslcarevocationpath \\\n"
"sslcertificatechainfile sslcertificatefile \\\n"
"sslcertificatekeyfile sslciphersuite sslengine \\\n"
"sslmutex ssloptions sslpassphrasedialog sslprotocol \\\n"
"sslproxycacertificatefile sslproxycacertificatepath \\\n"
"sslproxycarevocationfile sslproxycarevocationpath \\\n"
"sslproxyciphersuite sslproxyengine \\\n"
"sslproxymachinecertificatefile \\\n"
"sslproxymachinecertificatepath sslproxyprotocol \\\n"
"sslproxyverify sslproxyverifydepth sslrandomseed \\\n"
"sslrequire sslrequiressl sslsessioncache \\\n"
"sslsessioncachetimeout sslusername sslverifyclient \\\n"
"sslverifydepth startservers startthreads \\\n"
"suexecusergroup threadlimit threadsperchild \\\n"
"threadstacksize timeout transferlog typesconfig \\\n"
"unsetenv usecanonicalname user userdir \\\n"
"virtualdocumentroot virtualdocumentrootip virtualhost \\\n"
"virtualscriptalias virtualscriptaliasip \\\n"
"win32disableacceptex xbithack\n"
"\n"
"keywords2.$(file.patterns.conf)=\\\n"
"on off standalone inetd \\\n"
"force-response-1.0 downgrade-1.0 nokeepalive \\\n"
"indexes includes followsymlinks none \\\n"
"x-compress x-gzip\n"
"\n"
"style.conf.0=fore:#808080,$(font.base)\n"
"style.conf.1=fore:#007F00,$(font.comment)\n"
"style.conf.2=fore:#007F7F\n"
"style.conf.9=fore:#00007F,bold\n"
"style.conf.4=fore:#000000,back:#FFE0FF\n"
"style.conf.5=fore:#000000,back:#FFE0FF\n"
"style.conf.6=fore:#7F007F,$(font.monospace)\n"
"style.conf.7=bold\n"
"style.conf.8=fore:#007F7F,bold\n"
"style.conf.3=fore:#000000,back:#A0FFA0\n"
"\n"
"command.compile.$(file.patterns.conf)=httpd -t -f $(FilePath)\n"
"command.build.$(file.patterns.conf)=httpd -t -f $(FilePath)\n"
"\n"
"file.patterns.cpp=*.c;*.cc;*.cpp;*.cxx;*.h;*.hh;*.hpp;*.hxx;*.ipp;*.m;*.mm;*.sma\n"
"file.patterns.cplusplus=*.cc;*.cpp;*.cxx\n"
"file.patterns.java=*.java;*.jad;*.pde\n"
"file.patterns.javafx=*.fx\n"
"file.patterns.test=*.pln;*.inc;*.t\n"
"file.patterns.js=*.js;*.es\n"
"file.patterns.cs=*.cs\n"
"file.patterns.rc=*.rc;*.rc2;*.dlg\n"
"file.patterns.idl=*.idl;*.odl\n"
"file.patterns.flash=*.as;*.asc;*.jsfl\n"
"file.patterns.ch=*.ch;*.chf;*.chs\n"
"file.patterns.vala=*.vala\n"
"file.patterns.go=*.go\n"
"file.patterns.pike=*.pike\n"
"file.patterns.c.like=$(file.patterns.cpp);$(file.patterns.cs);$(file.patterns.idl);$(file.patterns.java);$(file.patterns.js);$(file.patterns.flash);$(file.patterns.ch);$(file.patterns.vala);$(file.patterns.pike)\n"
"\n"
"shbang.tcc=cpp\n"
"shbang.tinycc=cpp\n"
"\n"
"filter.cpp=C/C++ (c cc cpp cxx cs vala h hh hxx hpp ipp dlg rc rc2 mak)|\\\n"
"$(file.patterns.cpp);$(file.patterns.cs);$(file.patterns.rc);$(file.patterns.vala);*.mak;make*|\n"
"filter.java=Java (java)|*.java|\n"
"filter.js=JavaScript (js es)|$(file.patterns.js)|\n"
"filter.idl=IDL (idl odl)|$(file.patterns.idl)|\n"
"filter.test=SilkTest (pln inc t)|$(file.patterns.test)|\n"
"filter.flash=Flash (as asc jsfl)|$(file.patterns.flash)|\n"
"filter.ch=Ch (ch chf chs)|$(file.patterns.ch)|\n"
"filter.go=Go (go)|$(file.patterns.go)|\n"
"filter.pike=Pike (pike)|$(file.patterns.pike)|\n"
"\n"
"lexer.$(file.patterns.java)=cpp\n"
"lexer.$(file.patterns.javafx)=cpp\n"
"lexer.$(file.patterns.cpp)=cpp\n"
"lexer.$(file.patterns.rc)=cpp\n"
"lexer.$(file.patterns.idl)=cpp\n"
"lexer.$(file.patterns.cs)=cpp\n"
"lexer.$(file.patterns.js)=cpp\n"
"lexer.$(file.patterns.test)=cpp\n"
"lexer.$(file.patterns.flash)=cpp\n"
"lexer.$(file.patterns.ch)=cpp\n"
"lexer.$(file.patterns.vala)=cpp\n"
"lexer.$(file.patterns.go)=cpp\n"
"lexer.$(file.patterns.pike)=cpp\n"
"\n"
"keywordclass.cpp=and and_eq asm auto bitand bitor bool break \\\n"
"case catch char class compl const const_cast continue \\\n"
"default delete do double dynamic_cast else enum explicit export extern false float for \\\n"
"friend goto if inline int long mutable namespace new not not_eq \\\n"
"operator or or_eq private protected public \\\n"
"register reinterpret_cast return short signed sizeof static static_cast struct switch \\\n"
"template this throw true try typedef typeid typename union unsigned using \\\n"
"virtual void volatile wchar_t while xor xor_eq\n"
"keywords.$(file.patterns.cpp)=$(keywordclass.cpp)\n"
"\n"
"\n"
"file.patterns.doxygen.langs=$(file.patterns.cpp);$(file.patterns.java)\n"
"keywordclass.doxygen=a addindex addtogroup anchor arg attention \\\n"
"author b brief bug c class code date def defgroup deprecated dontinclude \\\n"
"e em endcode endhtmlonly endif endlatexonly endlink endverbatim enum example exception \\\n"
"f$ f[ f] file fn hideinitializer htmlinclude htmlonly \\\n"
"if image include ingroup internal invariant interface latexonly li line link \\\n"
"mainpage name namespace nosubgrouping note overload \\\n"
"p page par param param[in] param[out] \\\n"
"post pre ref relates remarks return retval \\\n"
"sa section see showinitializer since skip skipline struct subsection \\\n"
"test throw throws todo typedef union until \\\n"
"var verbatim verbinclude version warning weakgroup $ @ \\ & < > # { }\n"
"keywords3.$(file.patterns.doxygen.langs)=$(keywordclass.doxygen)\n"
"\n"
"\n"
"word.chars.cxx=$(chars.alpha)$(chars.numeric)_#\n"
"word.characters.$(file.patterns.cpp)=$(word.chars.cxx)\n"
"calltip.cpp.word.characters=$(chars.alpha)$(chars.numeric)_\n"
"comment.block.cpp=//~\n"
"comment.stream.start.cpp=/*\n"
"comment.stream.end.cpp=*/\n"
"comment.box.start.cpp=/*\n"
"comment.box.middle.cpp= *\n"
"comment.box.end.cpp= */\n"
"\n"
"\n"
"word.characters.$(file.patterns.javafx)=$(word.chars.cxx)$-\n"
"\n"
"file.patterns.c.except.cpp=$(file.patterns.cs);$(file.patterns.idl);*.java;$(file.patterns.flash);$(file.patterns.ch)\n"
"statement.indent.$(file.patterns.c.except.cpp)=5 case default do else for if while\n"
"statement.indent.$(file.patterns.cpp)=5 case default do else for if private protected public while\n"
"statement.end.$(file.patterns.c.like)=10 ;\n"
"statement.lookback.$(file.patterns.c.like)=20\n"
"block.start.$(file.patterns.c.like)=10 {\n"
"block.end.$(file.patterns.c.like)=10 }\n"
"\n"
"\n"
"preprocessor.symbol.$(file.patterns.cpp)=#\n"
"preprocessor.start.$(file.patterns.cpp)=if ifdef ifndef\n"
"preprocessor.middle.$(file.patterns.cpp)=else elif\n"
"preprocessor.end.$(file.patterns.cpp)=endif\n"
"\n"
"preprocessor.symbol.$(file.patterns.cs)=#\n"
"preprocessor.start.$(file.patterns.cs)=if region\n"
"preprocessor.middle.$(file.patterns.cs)=else elif\n"
"preprocessor.end.$(file.patterns.cs)=endif endregion\n"
"\n"
"keywordclass.ch=\\\n"
"auto array bool break case char class complex ComplexInf ComplexNaN \\\n"
"const continue default delete \\\n"
"do double else enum export extern float for foreach goto if Inf inline int \\\n"
"long namespace NaN new NULL private public register restrict return short \\\n"
"signed sizeof static string_t struct switch this typedef union unsigned \\\n"
"using void volatile wchar_t while __declspec\n"
"keywords.$(file.patterns.ch)=$(keywordclass.ch)\n"
"word.chars.ch=$(chars.alpha)$(chars.numeric)_#\n"
"word.characters.$(file.patterns.ch)=$(word.chars.cxx)\n"
"comment.block.ch=//~\n"
"comment.stream.start.ch=/*\n"
"comment.stream.end.ch=*/\n"
"comment.box.start.ch=/*\n"
"comment.box.middle.ch= *\n"
"comment.box.end.ch= */\n"
"preprocessor.symbol.$(file.patterns.ch)=#\n"
"preprocessor.start.$(file.patterns.ch)=if ifdef ifndef\n"
"preprocessor.middle.$(file.patterns.ch)=else elif\n"
"preprocessor.end.$(file.patterns.ch)=endif\n"
"\n"
"keywordclass.cs=abstract as ascending base bool break by byte case catch char checked \\\n"
"class const continue decimal default delegate descending do double else enum \\\n"
"equals event explicit extern false finally fixed float for foreach from goto group if \\\n"
"implicit in int interface internal into is join lock let long namespace new null \\\n"
"object on operator orderby out override params private protected public \\\n"
"readonly ref return sbyte sealed select short sizeof stackalloc static \\\n"
"string struct switch this throw true try typeof uint ulong \\\n"
"unchecked unsafe ushort using var virtual void volatile where while\n"
"keywords.$(file.patterns.cs)=$(keywordclass.cs)\n"
"word.characters.$(file.patterns.cs)=$(word.chars.cxx)\n"
"\n"
"keywordclass.go=\\\n"
"bool byte break case chan complex64 complex128 const continue defer default  \\\n"
"else  for func go goto fallthrough false float32 float64 if import int interface int8 int16 int32 int64 \\\n"
"len map nil package range return select string struct switch true type \\\n"
"uint uintptr uint8 uint16 uint32 uint64  var\n"
"keywords.$(file.patterns.go)=$(keywordclass.go)\n"
"\n"
"keywordclass.rc=\\\n"
"ACCELERATORS ALT AUTO3STATE AUTOCHECKBOX AUTORADIOBUTTON \\\n"
"BEGIN BITMAP BLOCK BUTTON CAPTION CHARACTERISTICS CHECKBOX CLASS \\\n"
"COMBOBOX CONTROL CTEXT CURSOR DEFPUSHBUTTON DIALOG DIALOGEX DISCARDABLE \\\n"
"EDITTEXT END EXSTYLE FONT GROUPBOX ICON LANGUAGE LISTBOX LTEXT \\\n"
"MENU MENUEX MENUITEM MESSAGETABLE POPUP \\\n"
"PUSHBUTTON RADIOBUTTON RCDATA RTEXT SCROLLBAR SEPARATOR SHIFT STATE3 \\\n"
"STRINGTABLE STYLE TEXTINCLUDE VALUE VERSION VERSIONINFO VIRTKEY\n"
"keywords.$(file.patterns.rc)=$(keywordclass.rc)\n"
"\n"
"keywordclass.idl=\\\n"
"aggregatable allocate appobject arrays async async_uuid \\\n"
"auto_handle \\\n"
"bindable boolean broadcast byte byte_count \\\n"
"call_as callback char coclass code comm_status \\\n"
"const context_handle context_handle_noserialize \\\n"
"context_handle_serialize control cpp_quote custom \\\n"
"decode default defaultbind defaultcollelem \\\n"
"defaultvalue defaultvtable dispinterface displaybind dllname \\\n"
"double dual \\\n"
"enable_allocate encode endpoint entry enum error_status_t \\\n"
"explicit_handle \\\n"
"fault_status first_is float \\\n"
"handle_t heap helpcontext helpfile helpstring \\\n"
"helpstringcontext helpstringdll hidden hyper \\\n"
"id idempotent ignore iid_as iid_is immediatebind implicit_handle \\\n"
"import importlib in include in_line int __int64 __int3264 interface \\\n"
"last_is lcid length_is library licensed local long \\\n"
"max_is maybe message methods midl_pragma \\\n"
"midl_user_allocate midl_user_free min_is module ms_union \\\n"
"ncacn_at_dsp ncacn_dnet_nsp ncacn_http ncacn_ip_tcp \\\n"
"ncacn_nb_ipx ncacn_nb_nb ncacn_nb_tcp ncacn_np \\\n"
"ncacn_spx ncacn_vns_spp ncadg_ip_udp ncadg_ipx ncadg_mq \\\n"
"ncalrpc nocode nonbrowsable noncreatable nonextensible notify \\\n"
"object odl oleautomation optimize optional out out_of_line \\\n"
"pipe pointer_default pragma properties propget propput propputref \\\n"
"ptr public \\\n"
"range readonly ref represent_as requestedit restricted retval \\\n"
"shape short signed size_is small source strict_context_handle \\\n"
"string struct switch switch_is switch_type \\\n"
"transmit_as typedef \\\n"
"uidefault union unique unsigned user_marshal usesgetlasterror uuid \\\n"
"v1_enum vararg version void wchar_t wire_marshal\n"
"\n"
"keywordclass.msidl=handle\n"
"keywordclass.xpidl=attribute native noscript scriptable shared wstring inout\n"
"keywords.$(file.patterns.idl)=$(keywordclass.idl) $(keywordclass.xpidl)\n"
"\n"
"keywordclass.java=abstract assert boolean break byte case catch char class \\\n"
"const continue default do double else enum extends final finally float for \\\n"
"goto if implements import instanceof int interface long \\\n"
"native new package private protected public \\\n"
"return short static strictfp super switch synchronized this throw throws \\\n"
"transient try var void volatile while\n"
"keywords.$(file.patterns.java)=$(keywordclass.java)\n"
"\n"
"keywordclass.javafx=abstract after and as assert at attribute before bind bound break \\\n"
"catch class continue def delete else exclusive extends false finally for from function \\\n"
"if import indexof insert instanceof lazy mod new not null \\\n"
"or override package private protected public-init public public-read \\\n"
"return reverse sizeof static super then this throw true try typeof \\\n"
"var while\n"
"keywords.$(file.patterns.javafx)=$(keywordclass.javafx)\n"
"keywords2.$(file.patterns.javafx)=Boolean Duration Integer Number Object String Void \\\n"
"Character Byte Short Long Float Double \\\n"
"isInitialized isSameObject print println \\\n"
"first in init into inverse last on postinit replace step trigger tween where with\n"
"\n"
"keywordclass.javascript=abstract boolean break byte case catch char class \\\n"
"const continue debugger default delete do double else enum export extends \\\n"
"final finally float for function goto if implements import in instanceof \\\n"
"int interface long native new package private protected public \\\n"
"return short static super switch synchronized this throw throws \\\n"
"transient try typeof var void volatile while with\n"
"keywords.$(file.patterns.js)=$(keywordclass.javascript)\n"
"\n"
"keywordclass.flash=add and break case catch class continue default delete do \\\n"
"dynamic else eq extends false finally for function ge get gt if implements import in \\\n"
"instanceof interface intrinsic le lt ne new not null or private public return \\\n"
"set static super switch this throw true try typeof undefined var void while with\n"
"\n"
"keywordclass2.flash=Array Arguments Accessibility Boolean Button Camera Color \\\n"
"ContextMenu ContextMenuItem Date Error Function Key LoadVars LocalConnection Math \\\n"
"Microphone Mouse MovieClip MovieClipLoader NetConnection NetStream Number Object \\\n"
"PrintJob Selection SharedObject Sound Stage String StyleSheet System TextField \\\n"
"TextFormat TextSnapshot Video Void XML XMLNode XMLSocket \\\n"
"_accProps _focusrect _global _highquality _parent _quality _root _soundbuftime \\\n"
"arguments asfunction call capabilities chr clearInterval duplicateMovieClip \\\n"
"escape eval fscommand getProperty getTimer getURL getVersion gotoAndPlay gotoAndStop \\\n"
"ifFrameLoaded Infinity -Infinity int isFinite isNaN length loadMovie loadMovieNum \\\n"
"loadVariables loadVariablesNum maxscroll mbchr mblength mbord mbsubstring MMExecute \\\n"
"NaN newline nextFrame nextScene on onClipEvent onUpdate ord parseFloat parseInt play \\\n"
"prevFrame prevScene print printAsBitmap printAsBitmapNum printNum random removeMovieClip \\\n"
"scroll set setInterval setProperty startDrag stop stopAllSounds stopDrag substring \\\n"
"targetPath tellTarget toggleHighQuality trace unescape unloadMovie unLoadMovieNum updateAfterEvent\n"
"\n"
"keywords.$(file.patterns.flash)=$(keywordclass.flash)\n"
"keywords2.$(file.patterns.flash)=$(keywordclass2.flash)\n"
"\n"
"keywordclass.vala=if else switch case default break continue return yield for foreach in \\\n"
"do while try catch finally throw\n"
"\n"
"keywordclass2.vala=namespace interface class struct enum delegate signal errordomain \\\n"
"construct get set value base const static var dynamic weak unowned virtual abstract \\\n"
"override public protected private extern throws requires ensures yields out ref lock \\\n"
"using true false null delete generic new this typeof sizeof as owned int string char bool\n"
"\n"
"keywords.$(file.patterns.vala)=$(keywordclass.vala)\n"
"keywords2.$(file.patterns.vala)=$(keywordclass2.vala)\n"
"\n"
"keywordclass.pike=constant enum if do for while else foreach case switch break continue \\\n"
"return typeof catch class lambda import inherit static void int string float mixed object \\\n"
"function program array mapping multiset\n"
"keywords.$(file.patterns.pike)=$(keywordclass.pike)\n"
"\n"
"\n"
"\n"
"style.cpp.32=$(font.base)\n"
"style.cpp.0=fore:#808080\n"
"style.cpp.1=$(colour.code.comment.box),$(font.code.comment.box)\n"
"style.cpp.2=$(colour.code.comment.line),$(font.code.comment.line)\n"
"style.cpp.3=$(colour.code.comment.doc),$(font.code.comment.doc)\n"
"style.cpp.4=$(colour.number)\n"
"style.cpp.5=$(colour.keyword),bold\n"
"style.cpp.6=$(colour.string)\n"
"style.cpp.7=$(colour.char)\n"
"style.cpp.8=fore:#804080\n"
"style.cpp.9=$(colour.preproc)\n"
"style.cpp.10=$(colour.operator),bold\n"
"style.cpp.11=\n"
"style.cpp.12=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled\n"
"style.cpp.13=fore:#007F00,$(font.monospace),back:#E0FFE0,eolfilled\n"
"style.cpp.14=fore:#3F7F3F,$(font.monospace),back:#E0F0FF,eolfilled\n"
"style.cpp.15=$(colour.code.comment.doc),$(font.code.comment.doc)\n"
"style.cpp.16=fore:#B00040\n"
"style.cpp.17=fore:#3060A0,$(font.code.comment.doc)\n"
"style.cpp.18=fore:#804020,$(font.code.comment.doc)\n"
"style.cpp.20=$(colour.string),back:#FFF3FF,eolfilled\n"
"style.cpp.21=$(font.monospace),fore:#007F00,back:#E0FFE0,eolfilled\n"
"style.cpp.22=$(font.monospace),fore:#007F00,back:#E7FFD7,eolfilled\n"
"\n"
"\n"
"style.cpp.64=fore:#C0C0C0\n"
"style.cpp.65=$(style.cpp.1),fore:#90B090\n"
"style.cpp.66=$(style.cpp.2),fore:#90B090\n"
"style.cpp.67=$(style.cpp.3),fore:#D0D0D0\n"
"style.cpp.68=$(style.cpp.4),fore:#90B0B0\n"
"style.cpp.69=$(style.cpp.5),fore:#9090B0\n"
"style.cpp.70=$(style.cpp.6),fore:#B090B0\n"
"style.cpp.71=$(style.cpp.7),fore:#B090B0\n"
"style.cpp.72=$(style.cpp.8),fore:#C0C0C0\n"
"style.cpp.73=$(style.cpp.9),fore:#B0B090\n"
"style.cpp.74=$(style.cpp.10),fore:#B0B0B0\n"
"style.cpp.75=$(style.cpp.11),fore:#B0B0B0\n"
"style.cpp.76=$(style.cpp.12),fore:#000000\n"
"style.cpp.77=$(style.cpp.13),fore:#90B090\n"
"style.cpp.78=$(style.cpp.14),fore:#7FAF7F\n"
"style.cpp.79=$(style.cpp.15),fore:#C0C0C0\n"
"style.cpp.80=$(style.cpp.16),fore:#C0C0C0\n"
"style.cpp.81=$(style.cpp.17),fore:#C0C0C0\n"
"style.cpp.82=$(style.cpp.18),fore:#C0C0C0\n"
"style.cpp.84=$(style.cpp.20),fore:#B090B0\n"
"style.cpp.85=$(style.cpp.21),fore:#90B090\n"
"style.cpp.86=$(style.cpp.22),fore:#90B090\n"
"\n"
"braces.cpp.style=10\n"
"\n"
"ccopts=-pedantic -Os\n"
"cc=g++ $(ccopts) -c $(FileNameExt) -o $(FileName).o\n"
"ccc=gcc $(ccopts) -c $(FileNameExt) -o $(FileName).o\n"
"\n"
"make.command=make\n"
"command.compile.*.c=$(ccc) -std=c99\n"
"command.build.*.c=$(make.command)\n"
"command.build.*.h=$(make.command)\n"
"command.go.*.c=./$(FileName)\n"
"\n"
"command.compile.$(file.patterns.cplusplus)=$(cc)\n"
"command.build.$(file.patterns.cplusplus)=$(make.command)\n"
"command.go.$(file.patterns.cplusplus)=./$(FileName)\n"
"command.go.needs.$(file.patterns.cplusplus)=g++ $(ccopts) $(FileNameExt) -o $(FileName)\n"
"\n"
"command.name.0.$(file.patterns.cpp)=Indent\n"
"command.0.$(file.patterns.cpp)=astyle -taOHUKk3 -M8 $(FileNameExt)\n"
"command.is.filter.0.$(file.patterns.cpp)=1\n"
"\n"
"command.name.1.$(file.patterns.cplusplus)=Lint\n"
"command.1.$(file.patterns.cplusplus)=g++ -W -Wall -Wshadow -Wwrite-strings -Wold-style-cast \\\n"
"	-Woverloaded-virtual -pedantic -Os -fno-exceptions -c $(FileNameExt)\n"
"\n"
"if PLAT_WIN\n"
"	command.compile.*.rc=windres $(FileNameExt) $(FileName).o\n"
"	command.build.*.rc=$(make.command)\n"
"	command.help.$(file.patterns.cpp)=$(CurrentWord)!G:\\Program Files\\Microsoft Visual Studio\\MSDN98\\98VSa\\1033\\MSDNVS6A.COL\n"
"	command.help.subsystem.$(file.patterns.cpp)=4\n"
"	command.go.*.js=cscript /nologo $(FileNameExt)\n"
"\n"
"if PLAT_GTK\n"
"	command.help.$(file.patterns.cpp)=man $(CurrentWord) | col -b\n"
"\n"
"if PLAT_WIN\n"
"	command.build.*.cs=csc /t:winexe $(FileNameExt) /r:system.dll,system.drawing.dll\n"
"	command.go.*.cs=$(FileName)\n"
"	command.go.subsystem.*.cs=1\n"
"if PLAT_GTK\n"
"	command.build.*.cs=mcs /t:winexe $(FileNameExt) /r:System,System.Drawing\n"
"	command.go.*.cs=mono $(FileName).exe\n"
"	command.go.subsystem.*.cs=1\n"
"\n"
"command.compile.*.java=javac $(FileNameExt)\n"
"command.build.*.java=javac *.java\n"
"command.go.*.java=java -cp . $(FileName)\n"
"\n"
"command.compile.*.fx=javafxc -d bin $(FileNameExt)\n"
"command.build.*.fx=javafxc -d bin *.fx\n"
"command.go.*.fx=javafx -cp bin $(FileName)\n"
"\n"
"if PLAT_WIN\n"
"	command.help.*.java=http://java.sun.com/javase/6/docs/api/java/util/$(CurrentWord).html\n"
"	command.help.subsystem.*.java=2\n"
"\n"
"command.compile.*.ch=ch -n $(FileNameExt)\n"
"command.build.*.ch=ch -n  $(FileNameExt)\n"
"command.go.*.ch=ch -u $(FileNameExt)\n"
"\n"
"command.compile.*.as=mtasc -strict $(FileNameExt)\n"
"command.build.*.as=mtasc -strict *.as\n"
"\n"
"command.compile.*.fx=javafxc -d . $(FileNameExt)\n"
"command.build.*.fx=javafxc -d . *.fx\n"
"command.go.*.fx=javafx -cp . $(FileName)\n"
"\n"
"command.build.$(file.patterns.vala)=valac $(FileNameExt)\n"
"command.go.*.vala=./$(FileName)\n"
"\n"
"command.compile.*.go=8g $(FileNameExt)\n"
"command.build.*.go=$(make.command)\n"
"command.go.*.go=./$(FileName)\n"
"\n"
"file.patterns.csound=*.orc;*.sco;*.csd\n"
"filter.csound=Csound (orc sco csd)|$(file.patterns.csound)|\n"
"\n"
"lexer.$(file.patterns.csound)=csound\n"
"\n"
"\n"
"\n"
"csound_opcodes=\\\n"
"	a i db in or zr Add Dec Div Inc Mul Sub abs and cos dam dec div exp \\\n"
"	fin fof fog inh ino inq ins int inx inz lfo log mac mod mul not out \\\n"
"	pan pow rms rnd shl sin sqr sub sum tab tan tb0 tb1 tb2 tb3 tb4 tb5 \\\n"
"	tb6 tb7 tb8 tb9 urd vco xin xor zar zaw zir ziw zkr zkw adsr babo \\\n"
"	buzz cent clip comb cosh diff divz fini fink fmb3 fof2 fold fout \\\n"
"	frac ftsr gain goto in32 inch init line maca moog mute nrpn outc \\\n"
"	outh outo outq outs outx outz peak port pset pvoc rand seed sinh \\\n"
"	sqrt stix tabw tanh tb10 tb11 tb12 tb13 tb14 tb15 tone vadd vco2 \\\n"
"	vdiv vexp vibr vmap vmul vpow wrap xout xyin zacl zarg zawm ziwm \\\n"
"	zkcl zkwm FLbox FLjoy FLrun adsyn ampdb atone birnd bqrez butbp \\\n"
"	butbr buthp butlp clear ctrl7 dbamp dconv delay dumpk endin endop \\\n"
"	event expon fouti foutk ftgen ftlen gauss gbuzz grain guiro igoto \\\n"
"	ihold instr integ kgoto limit linen log10 loopg loopl lpf18 madsr \\\n"
"	max_k metro noise nsamp oscil out32 outch outic outkc outq1 outq2 \\\n"
"	outq3 outq4 outs1 outs2 pareq pitch pluck portk print pvadd randh \\\n"
"	randi rbjeq readk reson rezzy rnd31 scans scanu sense space tab_i \\\n"
"	table tbvcf tempo timek times tival tonek tonex vaddv vbap4 vbap8 \\\n"
"	vbapz vcomb vcopy vdecr vdivv veloc vexpv vibes vincr vmult voice \\\n"
"	vport vpowv vpvoc vsubv vwrap wgbow xadsr zamod zkmod FLhide FLkeyb \\\n"
"	FLknob FLpack FLshow FLtabs FLtext active adsynt alpass areson \\\n"
"	atonek atonex bamboo bbcutm bbcuts biquad cabasa cauchy cggoto \\\n"
"	cigoto ckgoto clfilt cngoto convle cosinv cpsoct cpspch cpstun \\\n"
"	cpuprc cross2 crunch ctrl14 ctrl21 delay1 delayk delayr delayw \\\n"
"	deltap denorm diskin dumpk2 dumpk3 dumpk4 envlpx expseg filesr \\\n"
"	fiopen fmbell follow foscil foutir ftlen2 ftload ftmorf ftsave \\\n"
"	grain2 grain3 harmon hrtfer initc7 interp jitter linenr lineto \\\n"
"	linseg locsig loopge loople lorenz loscil lowres lpread lpslot \\\n"
"	mandel mandol mclock mdelay midic7 midiin midion mirror moscil \\\n"
"	mpulse mrtmsg mxadsr nlfilt noteon notnum ntrpol octave octcps \\\n"
"	octpch opcode oscbnk oscil1 oscil3 oscili osciln oscils oscilx \\\n"
"	outiat outipb outipc outkat outkpb outkpc pchoct phasor planet \\\n"
"	poscil printk prints pvread pvsftr pvsftw random readk2 readk3 \\\n"
"	readk4 reinit resonk resonr resonx resony resonz reverb rigoto \\\n"
"	s16b14 s32b14 sekere sfload sfplay shaker sininv spat3d spdist \\\n"
"	spsend strset table3 tablei tablew tabw_i taninv tigoto timout \\\n"
"	turnon upsamp vbap16 vcella vco2ft vdel_k vdelay vlimit vmultv \\\n"
"	vrandh vrandi wgclar xscans xscanu FLcolor FLcount FLgroup FLlabel \\\n"
"	FLpanel FLvalue aftouch ampdbfs ampmidi aresonk balance bexprnd \\\n"
"	biquada changed clockon cps2pch cpsmidi cpstmid cpstuni cpsxpch \\\n"
"	dbfsamp dcblock deltap3 deltapi deltapn deltapx dispfft display \\\n"
"	envlpxr exprand expsega expsegr filelen filter2 flanger fmmetal \\\n"
"	fmrhode fmvoice follow2 foscili fprints ftchnls ftloadk ftlptim \\\n"
"	ftsavek gogobel granule hilbert initc14 initc21 invalue jitter2 \\\n"
"	jspline linrand linsegr locsend logbtwo loopseg loscil3 lowresx \\\n"
"	lphasor lposcil lpreson lpshold marimba massign midic14 midic21 \\\n"
"	midichn midion2 midiout moogvcf noteoff nreverb nstrnum octmidi \\\n"
"	oscil1i outic14 outipat outkc14 outkpat pcauchy pchbend pchmidi \\\n"
"	phaser1 phaser2 pinkish poisson polyaft poscil3 printk2 printks \\\n"
"	product pvcross pvsanal pvsinfo pvsynth randomh randomi release \\\n"
"	repluck reverb2 rspline rtclock seqtime sfilist sfinstr sfplay3 \\\n"
"	sfplaym sfplist slider8 sndwarp soundin spat3di spat3dt specsum \\\n"
"	streson tableiw tablekt tableng tablera tablewa taninv2 tempest \\\n"
"	tlineto transeg trigger trigseq trirand turnoff unirand valpass \\\n"
"	vco2ift vdelay3 vdelayk vdelayx vexpseg vibrato vlinseg vlowres \\\n"
"	vmirror waveset weibull wgbrass wgflute wgpluck wguide1 wguide2 \\\n"
"	xtratim zakinit FLbutton FLcolor2 FLprintk FLroller FLscroll \\\n"
"	FLsetBox FLsetVal FLslider FLupdate betarand butterbp butterbr \\\n"
"	butterhp butterlp chanctrl clockoff convolve cpsmidib ctrlinit \\\n"
"	cuserrnd deltapxw distort1 downsamp duserrnd filepeak fmpercfl \\\n"
"	fmwurlie fprintks hsboscil lowpass2 lpfreson lpinterp lposcil3 \\\n"
"	maxalloc midictrl multitap nestedap octmidib oscilikt outvalue \\\n"
"	pchmidib powoftwo prealloc pvinterp pvsadsyn pvscross pvsfread \\\n"
"	pvsmaska rireturn samphold schedule semitone sensekey setksmps \\\n"
"	sfinstr3 sfinstrm sfplay3m sfpreset slider16 slider32 slider64 \\\n"
"	slider8f soundout specaddm specdiff specdisp specfilt spechist \\\n"
"	specptrk specscal spectrum sprintks subinstr svfilter tablegpw \\\n"
"	tableikt tablemix tableseg tablewkt tablexkt tb0_init tb1_init \\\n"
"	tb2_init tb3_init tb4_init tb5_init tb6_init tb7_init tb8_init \\\n"
"	tb9_init tempoval vco2init vdelayxq vdelayxs vdelayxw vecdelay \\\n"
"	wgpluck2 wterrain xscanmap zfilter2 FLbutBank FLgetsnap FLpackEnd \\\n"
"	FLprintk2 FLsetFont FLsetSize FLsetText FLsetsnap FLslidBnk \\\n"
"	FLtabsEnd dripwater eventname ktableseg noteondur osciliktp \\\n"
"	oscilikts pgmassign phasorbnk pitchamdf pvbufread readclock \\\n"
"	sandpaper scantable schedwhen sfinstr3m sfpassign slider16f \\\n"
"	slider32f slider64f sndwarpst soundoutc soundouts tablecopy \\\n"
"	tableigpw tableimix tablexseg tb10_init tb11_init tb12_init \\\n"
"	tb13_init tb14_init tb15_init timeinstk timeinsts vbap4move \\\n"
"	vbap8move vbapzmove vdelayxwq vdelayxws xscansmap FLgroupEnd \\\n"
"	FLloadsnap FLpack_end FLpanelEnd FLsavesnap FLsetAlign FLsetColor \\\n"
"	FLsetVal_i FLtabs_end filenchnls noteondur2 scanhammer schedkwhen \\\n"
"	tableicopy tambourine vbap16move vbaplsinit wgbowedbar FLgroup_end \\\n"
"	FLpanel_end FLscrollEnd FLsetColor2 mididefault midinoteoff \\\n"
"	sleighbells FLscroll_end subinstrinit FLsetPosition FLsetTextSize \\\n"
"	FLsetTextType midinoteoncps midinoteonkey midinoteonoct \\\n"
"	midinoteonpch midipitchbend schedwhenname FLsetTextColor \\\n"
"	schedkwhenname midicontrolchange midiprogramchange \\\n"
"	midipolyaftertouch midichannelaftertouch\n"
"\n"
"csound_header_stmts=sr kr ar ksmps nchnls\n"
"\n"
"csound_other_keywords=\n"
"\n"
"keywords.$(file.patterns.csound)=$(csound_opcodes)\n"
"keywords2.$(file.patterns.csound)=$(csound_header_stmts)\n"
"keywords3.$(file.patterns.csound)=$(csound_other_keywords)\n"
"\n"
"comment.block.csound=;\n"
"\n"
"\n"
"style.csound.0=$(font.monospace)\n"
"style.csound.1=$(font.monospace),fore:#669999\n"
"style.csound.2=$(font.monospace),fore:#339933\n"
"style.csound.3=$(font.monospace)\n"
"style.csound.4=$(font.monospace)\n"
"style.csound.5=\n"
"style.csound.6=$(font.monospace),fore:#0000FF,bold\n"
"style.csound.7=$(font.monospace),fore:#CC2200\n"
"style.csound.8=$(font.monospace)\n"
"style.csound.9=$(font.monospace)\n"
"style.csound.10=$(font.monospace),fore:#660099,bold\n"
"style.csound.11=$(font.monospace),fore:#660099\n"
"style.csound.12=$(font.monospace),fore:#660099\n"
"style.csound.13=$(font.monospace),fore:#660099\n"
"style.csound.14=$(font.monospace),fore:#660099\n"
"style.csound.15=$(font.monospace)\n"
"style.csound.16=$(font.monospace)\n"
"style.csound.17=$(font.monospace),fore:#000000,back:#E0C0E0,eolfilled\n"
"\n"
"filter.css=CSS (css)|*.css|\n"
"lexer.*.css=css\n"
"\n"
"indent.size.*.css=4\n"
"tab.size.*.css=4\n"
"use.tabs.*.css=1\n"
"\n"
"keywordclass.css1=\\\n"
"color background-color background-image background-repeat background-attachment background-position background \\\n"
"font-family font-style font-variant font-weight font-size font \\\n"
"word-spacing letter-spacing text-decoration vertical-align text-transform text-align text-indent line-height \\\n"
"margin-top margin-right margin-bottom margin-left margin \\\n"
"padding-top padding-right padding-bottom padding-left padding \\\n"
"border-top-width border-right-width border-bottom-width border-left-width border-width \\\n"
"border-top border-right border-bottom border-left border \\\n"
"border-color border-style width height float clear \\\n"
"display white-space list-style-type list-style-image list-style-position list-style\n"
"\n"
"keywordclass.values=\\\n"
"auto none normal italic oblique small-caps bold bolder lighter \\\n"
"xx-small x-small small medium large x-large xx-large larger smaller \\\n"
"transparent repeat repeat-x repeat-y no-repeat scroll fixed \\\n"
"top bottom left center right justify both \\\n"
"underline overline line-through blink \\\n"
"baseline sub super text-top middle text-bottom \\\n"
"capitalize uppercase lowercase thin medium thick \\\n"
"dotted dashed solid double groove ridge inset outset \\\n"
"block inline list-item pre no-wrap inside outside \\\n"
"disc circle square decimal lower-roman upper-roman lower-alpha upper-alpha \\\n"
"aqua black blue fuchsia gray green lime maroon navy olive purple red silver teal white yellow\n"
"\n"
"\n"
"\n"
"\n"
"keywordclass.css2=\\\n"
"border-top-color border-right-color border-bottom-color border-left-color border-color \\\n"
"border-top-style border-right-style border-bottom-style border-left-style border-style \\\n"
"top right bottom left position z-index direction unicode-bidi \\\n"
"min-width max-width min-height max-height overflow clip visibility content quotes \\\n"
"counter-reset counter-increment marker-offset \\\n"
"size marks page-break-before page-break-after page-break-inside page orphans widows \\\n"
"font-stretch font-size-adjust unicode-range units-per-em src \\\n"
"panose-1 stemv stemh slope cap-height x-height ascent descent widths bbox definition-src \\\n"
"baseline centerline mathline topline text-shadow \\\n"
"caption-side table-layout border-collapse border-spacing empty-cells speak-header \\\n"
"cursor outline outline-width outline-style outline-color \\\n"
"volume speak pause-before pause-after pause cue-before cue-after cue \\\n"
"play-during azimuth elevation speech-rate voice-family pitch pitch-range stress richness \\\n"
"speak-punctuation speak-numeral\n"
"\n"
"keywordclass.values2=\\\n"
"inherit \\\n"
"run-in compact marker table inline-table table-row-group table-header-group table-footer-group \\\n"
"table-row table-column-group table-column table-cell table-caption \\\n"
"static relative absolute fixed ltr rtl embed bidi-override \\\n"
"visible hidden scroll collapse open-quote close-quote no-open-quote no-close-quote \\\n"
"decimal-leading-zero lower-greek lower-latin upper-latin hebrew armenian georgian \\\n"
"cjk-ideographic hiragana katakana hiragana-iroha katakana-iroha \\\n"
"landscape portrait crop cross always avoid \\\n"
"wider narrower ultra-condensed extra-condensed condensed semi-condensed \\\n"
"semi-expanded expanded extra-expanded ultra-expanded \\\n"
"caption icon menu message-box small-caption status-bar \\\n"
"separate show hide once crosshair default pointer move text wait help \\\n"
"e-resize ne-resize nw-resize n-resize se-resize sw-resize s-resize w-resize \\\n"
"ActiveBorder ActiveCaption AppWorkspace Background ButtonFace ButtonHighlight ButtonShadow \\\n"
"InactiveCaptionText ButtonText CaptionText GrayText Highlight HighlightText InactiveBorder \\\n"
"InactiveCaption InfoBackground InfoText Menu MenuText Scrollbar ThreeDDarkShadow \\\n"
"ThreeDFace ThreeDHighlight ThreeDLightShadow ThreeDShadow Window WindowFrame WindowText \\\n"
"silent x-soft soft medium loud x-loud spell-out mix \\\n"
"left-side far-left center-left center-right far-right right-side behind leftwards rightwards \\\n"
"below level above higher lower x-slow slow medium fast x-fast faster slower \\\n"
"male female child x-low low high x-high code digits continous\n"
"\n"
"keywordclass.vendor.prefixes=^-moz- ^-webkit- ^-o- ^-ms-\n"
"\n"
"keywordclass.css3=background-size \\\n"
"border-radius border-top-right-radius border-bottom-right-radius border-bottom-left-radius border-top-left-radius \\\n"
"box-shadow \\\n"
"columns column-width column-count column-rule column-gap column-rule-color column-rule-style column-rule-width \\\n"
"resize opacity word-wrap\n"
"\n"
"keywordclass.pseudoclass.css1=link active visited\n"
"keywordclass.pseudoclass.css2=first-child focus hover lang left right first\n"
"keywordclass.pseudoclass.css3=empty enabled disabled checked not root target \\\n"
"only-child last-child nth-child nth-last-child \\\n"
"first-of-type last-of-type nth-of-type nth-last-of-type only-of-type \\\n"
"valid invalid required optional\n"
"keywordclass.pseudoclass.other=indeterminate default\n"
"\n"
"keywordclass.pseudoelement.css=first-letter first-line before after\n"
"keywordclass.pseudoelement.css3=selection\n"
"\n"
"\n"
"\n"
"\n"
"keywords.*.css=$(keywordclass.css1)\n"
"keywords2.*.css=$(keywordclass.pseudoclass.css1) $(keywordclass.pseudoclass.css2) \\\n"
"    $(keywordclass.pseudoclass.css3) $(keywordclass.pseudoelement.css)\n"
"keywords3.*.css=$(keywordclass.css2)\n"
"keywords4.*.css=$(keywordclass.css3)\n"
"keywords5.*.css=$(keywordclass.pseudoelement.css) $(keywordclass.pseudoelement.css3)\n"
"keywords6.*.css=$(keywordclass.vendor.prefixes) filter\n"
"keywords7.*.css=$(keywordclass.pseudoclass.other) $(keywordclass.vendor.prefixes)\n"
"keywords8.*.css=$(keywordclass.pseudoelement.other) $(keywordclass.vendor.prefixes)\n"
"\n"
"word.characters.*.css=$(chars.alpha)$(chars.numeric)-\n"
"comment.stream.start.css=/*\n"
"comment.stream.end.css=*/\n"
"\n"
"style.css.32=$(font.code.base)\n"
"style.css.0=fore:#FF0080\n"
"style.css.1=$(colour.keyword),bold\n"
"style.css.2=\n"
"style.css.3=fore:#800000\n"
"style.css.4=$(colour.error)\n"
"style.css.5=$(colour.operator)\n"
"style.css.6=fore:#0040E0\n"
"style.css.7=fore:#FF0000\n"
"style.css.8=$(colour.string)\n"
"style.css.9=$(colour.code.comment.box),$(font.code.comment.box)\n"
"style.css.10=$(colour.number),italics\n"
"style.css.11=fore:#FF8000,bold\n"
"style.css.12=$(colour.preproc)\n"
"style.css.13=$(colour.string)\n"
"style.css.14=$(colour.string)\n"
"style.css.15=fore:#0040E0\n"
"style.css.16=fore:#800000\n"
"style.css.17=fore:#00A0E0\n"
"style.css.18=fore:#C80000\n"
"style.css.19=fore:#7F7F00\n"
"style.css.20=fore:#7F7F00\n"
"style.css.21=fore:#7F7F00\n"
"style.css.22=$(colour.preproc),bold\n"
"\n"
"block.start.*.css=5 {\n"
"block.end.*.css=5 }\n"
"\n"
"file.patterns.d=*.d\n"
"filter.d=D (d)|$(file.patterns.d)|\n"
"lexer.$(file.patterns.d)=d\n"
"\n"
"word.chars.d=$(chars.alpha)$(chars.numeric)_#\n"
"word.characters.$(file.patterns.d)=$(word.chars.d)\n"
"calltip.d.word.characters=$(chars.alpha)$(chars.numeric)_\n"
"\n"
"\n"
"comment.block.d=//~\n"
"comment.stream.start.d=/+\n"
"comment.stream.end.d=+/\n"
"comment.box.start.d=/*\n"
"comment.box.middle.d= *\n"
"comment.box.end.d= */\n"
"\n"
"statement.indent.$(file.patterns.d)=6 case catch class debug default do else \\\n"
"finally for foreach foreach_reverse if private protected public scope struct \\\n"
"try union while with\n"
"statement.end.$(file.patterns.d)=13 ;\n"
"statement.lookback.$(file.patterns.d)=20\n"
"block.start.$(file.patterns.d)=13 {\n"
"block.end.$(file.patterns.d)=13 }\n"
"\n"
"keywords.$(file.patterns.d)=abstract alias align asm assert auto \\\n"
" body bool break byte \\\n"
" case cast catch cdouble cent cfloat char class const continue creal \\\n"
" dchar debug default delegate delete deprecated do double \\\n"
" else enum export extern \\\n"
" false final finally float for foreach foreach_reverse function \\\n"
" goto \\\n"
" idouble if ifloat import in inout int interface invariant ireal is \\\n"
" lazy long \\\n"
" mixin module \\\n"
" new null \\\n"
" out override \\\n"
" package pragma private protected public \\\n"
" real return \\\n"
" scope short static struct super switch synchronized \\\n"
" template this throw true try typedef typeid typeof \\\n"
" ubyte ucent uint ulong union unittest ushort \\\n"
" version void volatile \\\n"
" wchar while with\n"
"\n"
"\n"
"keywords3.$(file.patterns.d)=a addindex addtogroup anchor arg attention \\\n"
"author b brief bug c class code date def defgroup deprecated dontinclude \\\n"
"e em endcode endhtmlonly endif endlatexonly endlink endverbatim enum example exception \\\n"
"f$ f[ f] file fn hideinitializer htmlinclude htmlonly \\\n"
"if image include ingroup internal invariant interface latexonly li line link \\\n"
"mainpage name namespace nosubgrouping note overload \\\n"
"p page par param post pre ref relates remarks return retval \\\n"
"sa section see showinitializer since skip skipline struct subsection \\\n"
"test throw todo typedef union until \\\n"
"var verbatim verbinclude version warning weakgroup $ @ \\ & < > # { }\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"style.d.32=$(font.base)\n"
"style.d.0=fore:#808080\n"
"style.d.1=$(colour.code.comment.box),$(font.code.comment.box)\n"
"style.d.2=$(colour.code.comment.line),$(font.code.comment.line)\n"
"style.d.3=$(colour.code.comment.doc),$(font.code.comment.doc)\n"
"style.d.4=$(colour.code.comment.nested),$(font.code.comment.nested)\n"
"style.d.5=$(colour.number)\n"
"style.d.6=$(colour.keyword),bold\n"
"style.d.7=$(colour.keyword),bold\n"
"style.d.8=$(colour.keyword),bold\n"
"style.d.9=$(colour.keyword),bold\n"
"style.d.10=$(colour.string)\n"
"style.d.11=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled\n"
"style.d.12=$(colour.char)\n"
"style.d.13=$(colour.operator),bold\n"
"style.d.14=\n"
"style.d.15=$(colour.code.comment.doc),$(font.code.comment.doc)\n"
"style.d.16=fore:#3060A0,$(font.code.comment.doc)\n"
"style.d.17=fore:#804020,$(font.code.comment.doc)\n"
"braces.d.style=13\n"
"\n"
"\n"
"command.compile.*.d=dmd -O $(FileNameExt)\n"
"command.build.*.d=$(make.command)\n"
"command.go.*.d=$(FileName)\n"
"\n"
"file.patterns.ecl=*.ecl;*.eclattr;*.hql\n"
"filter.ecl=ECL (ecl, eclattr, hql)|$(file.patterns.ecl)|\n"
"lexer.$(file.patterns.ecl)=ecl\n"
"\n"
"word.chars.ecl=$(chars.alpha)$(chars.numeric)_#\n"
"word.characters.$(file.patterns.ecl)=$(word.chars.ecl)\n"
"calltip.ecl.word.characters=$(chars.alpha)$(chars.numeric)_\n"
"\n"
"comment.block.ecl=//\n"
"comment.stream.start.ecl=/+\n"
"comment.stream.end.ecl=+/\n"
"comment.box.start.ecl=/*\n"
"comment.box.middle.ecl= *\n"
"comment.box.end.ecl= */\n"
"\n"
"statement.indent.$(file.patterns.ecl)=record module\n"
"statement.end.$(file.patterns.ecl)=13 ;\n"
;
const char *props3 = 
"statement.lookback.$(file.patterns.ecl)=20\n"
"block.start.$(file.patterns.ecl)=13 {\n"
"block.end.$(file.patterns.ecl)=13 }\n"
"\n"
"style.ecl.0=fore:#00000000\n"
"style.ecl.1=fore:#00800000\n"
"style.ecl.2=fore:#00800000\n"
"style.ecl.3=fore:#00000000\n"
"style.ecl.4=fore:#80808000\n"
"style.ecl.5=fore:#0000FF00\n"
"style.ecl.6=fore:#00000000\n"
"style.ecl.7=fore:#80808000\n"
"style.ecl.8=fore:#00000000\n"
"style.ecl.9=fore:#00408000\n"
"style.ecl.10=fore:#00000000\n"
"style.ecl.11=fore:#00000000\n"
"style.ecl.12=fore:#00000000\n"
"style.ecl.13=fore:#00000000\n"
"style.ecl.14=fore:#00000000\n"
"style.ecl.15=fore:#00000000\n"
"style.ecl.16=bold,fore:#00008000\n"
"style.ecl.17=bold,fore:#7F7F7F00\n"
"style.ecl.18=fore:#FF000000\n"
"style.ecl.19=fore:#80000000\n"
"style.ecl.20=fore:#80000000\n"
"style.ecl.21=fore:#80008000\n"
"style.ecl.22=fore:#80008000\n"
"style.ecl.23=fore:#7F7F7F00\n"
"style.ecl.24=fore:#00000000\n"
"style.ecl.25=fore:#00000000\n"
"style.ecl.26=fore:#00000000\n"
"style.ecl.27=fore:#00000000\n"
"style.ecl.32=fore:#00000000,$(font.monospace)\n"
"style.ecl.34=bold,fore:#00000000\n"
"style.ecl.35=fore:#FF000000\n"
"style.ecl.36=fore:#80800000\n"
"style.ecl.37=fore:#80000000\n"
"\n"
"keywords.$(file.patterns.ecl)=abs acos ascii asin asstring atan atan2 ave case choose choosen choosesets clustersize cos cosh count cron dataset dedup denormalize distribute distributed distribution ebcdic enth error evaluate event exists exp fetch fromunicode getisvalid global group hash hash32 hash64 hashcrc hashmd5 if index intformat isvalid iterate join keyunicode length limit ln log map matched matchlength matchposition matchtext matchunicode max merge min normalize parse pipe power preload project pull random rank ranked realformat recordof regexfind regexreplace rejected rollup round roundup row rowdiff sample set sin sinh sizeof soapcall sort sorted sqrt sum table tan tanh topn tounicode transfer trim truncate typeof ungroup unicodeorder which workunit xmldecode xmlencode xmltext xmlunicode\n"
"keywords2.$(file.patterns.ecl)=apply build buildindex evaluate fail keydiff keypatch loadxml notify output parallel sequential soapcall\n"
"keywords3.$(file.patterns.ecl)=__compressed__ all and any as atmost before beginc++ best between case const counter csv descend encrypt end endc++ endmacro except exclusive expire export extend false few first flat full function group header heading hole ifblock import in joined keep keyed last left limit load local locale lookup macro many maxcount maxlength min skew module named nocase( noroot noscan nosort not of only opt or outer overwrite packed partition penalty physicallength pipe quote record relationship repeat return right scan self separator service shared skew skip sql store terminator thor threshold token transform trim true type unicodeorder unsorted validate virtual whole wild within xml xpath\n"
"keywords4.$(file.patterns.ecl)=ascii big_endian boolean data decimal ebcdic integer pattern qstring real record rule set of string token udecimal unicode unsigned varstring varunicode\n"
"keywords5.$(file.patterns.ecl)=checkpoint deprecated failcode failmessage failure global independent onwarning persist priority recovery stored success wait when\n"
"keywords6.$(file.patterns.ecl)=#append #break #declare #demangle #end #for #getdatatype #if #inmodule #loop #mangle #onwarning #option #set #stored #uniquename #workunit integer symbol value text symbol value\n"
"\n"
"\n"
"filter.eiffel=Eiffel (e)|*.e|\n"
"\n"
"file.patterns.eiffel=*.e\n"
"\n"
"lexer.$(file.patterns.eiffel)=eiffel\n"
"\n"
"keywordclass.eiffel=\\\n"
"alias all and any as bit boolean \\\n"
"check class character clone create creation current \\\n"
"debug deferred div do double \\\n"
"else elseif end ensure equal expanded export external \\\n"
"false feature forget from frozen general \\\n"
"if implies indexing infix inherit inspect integer invariant is \\\n"
"language like local loop mod name nochange none not \\\n"
"obsolete old once or platform pointer prefix precursor \\\n"
"real redefine rename require rescue result retry \\\n"
"select separate string strip then true undefine unique until \\\n"
"variant void when xor\n"
"\n"
"keywords.$(file.patterns.eiffel)=$(keywordclass.eiffel)\n"
"\n"
"style.eiffel.0=fore:#808080\n"
"style.eiffelkw.0=$(style.eiffel.0)\n"
"style.eiffel.1=$(colour.code.comment.line),$(font.code.comment.line)\n"
"style.eiffelkw.1=$(style.eiffel.1)\n"
"style.eiffel.2=$(colour.number)\n"
"style.eiffelkw.2=$(style.eiffel.2)\n"
"style.eiffel.3=$(colour.keyword),bold\n"
"style.eiffelkw.3=$(style.eiffel.3)\n"
"style.eiffel.4=$(colour.string),$(font.monospace)\n"
"style.eiffelkw.4=$(style.eiffel.4)\n"
"style.eiffel.5=$(colour.char),$(font.monospace)\n"
"style.eiffelkw.5=$(style.eiffel.5)\n"
"style.eiffel.6=$(colour.operator),bold\n"
"style.eiffelkw.6=$(style.eiffel.6)\n"
"style.eiffel.7=\n"
"style.eiffelkw.7=$(style.eiffel.7)\n"
"style.eiffel.8=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled\n"
"style.eiffelkw.8=$(style.eiffel.8)\n"
"braces.eiffel.style=6\n"
"braces.eiffelkw.style=$(braces.eiffel.style)\n"
"\n"
"statement.indent.$(file.patterns.eiffel)=5 do else elsif rescue if is loop\n"
"statement.end.$(file.patterns.eiffel)=10 ;\n"
"statement.lookback.$(file.patterns.eiffel)=20\n"
"block.start.$(file.patterns.eiffel)=10 check debug deferred do from if inspect once\n"
"block.end.$(file.patterns.eiffel)=10 end\n"
"\n"
"command.compile.*.e=compile $(FileName)\n"
"\n"
"file.patterns.erlang=*.erl;*.hrl\n"
"\n"
"filter.erlang=Erlang (erl hrl)|$(file.patterns.erlang)|\n"
"\n"
"lexer.$(file.patterns.erlang)=erlang\n"
"\n"
"keywords.$(file.patterns.erlang)=after and andalso band begin bnot bor bsl bsr bxor case catch cond div end fun if let not of or orelse query receive rem try when xor\n"
"keywords2.$(file.patterns.erlang)=erlang: abs adler32 adler32_combine erlang:append_element apply atom_to_binary atom_to_list binary_to_atom binary_to_existing_atom binary_to_list bitstring_to_list binary_to_term bit_size erlang:bump_reductions byte_size erlang:cancel_timer check_process_code concat_binary crc32 crc32_combine date decode_packet delete_module erlang:demonitor disconnect_node erlang:display element erase erlang:error exit float float_to_list erlang:fun_info erlang:fun_to_list erlang:function_exported garbage_collect get erlang:get_cookie get_keys erlang:get_stacktrace group_leader halt erlang:hash hd erlang:hibernate integer_to_list erlang:integer_to_list iolist_to_binary iolist_size is_alive is_atom is_binary is_bitstring is_boolean erlang:is_builtin is_float is_function is_integer is_list is_number is_pid is_port is_process_alive is_record is_reference is_tuple length link list_to_atom list_to_binary list_to_bitstring list_to_existing_atom list_to_float list_to_integer erlang:list_to_integer list_to_pid list_to_tuple load_module erlang:load_nif erlang:loaded erlang:localtime erlang:localtime_to_universaltime make_ref erlang:make_tuple erlang:max erlang:md5 erlang:md5_final erlang:md5_init erlang:md5_update erlang:memory erlang:min module_loaded erlang:monitor monitor_node node nodes now open_port erlang:phash erlang:phash2 pid_to_list port_close port_command erlang:port_command port_connect port_control erlang:port_call erlang:port_info erlang:port_to_list erlang:ports pre_loaded erlang:process_display process_flag process_info processes purge_module put erlang:raise erlang:read_timer erlang:ref_to_list register registered erlang:resume_process round self erlang:send erlang:send_after erlang:send_nosuspend erlang:set_cookie setelement size spawn spawn_link spawn_monitor spawn_opt split_binary erlang:start_timer statistics erlang:suspend_process erlang:system_flag erlang:system_info erlang:system_monitor erlang:system_profile term_to_binary throw time tl erlang:trace erlang:trace_delivered erlang:trace_info erlang:trace_pattern trunc tuple_size tuple_to_list erlang:universaltime erlang:universaltime_to_localtime unlink unregister whereis erlang:yield\n"
"keywords3.$(file.patterns.erlang)=-define -else -endif -ifdef -ifndef -include -include_lib -undef\n"
"keywords4.$(file.patterns.erlang)=-behavior -behaviour -compile -created -created_by -export -file -import -module -modified -modified_by -record -revision -spec -type -vsn\n"
"keywords5.$(file.patterns.erlang)=@author @clear @copyright @deprecated @doc @docfile @end @equiv @headerfile @hidden @private @reference @see @since @spec @throws @title @todo @TODO @type @version\n"
"keywords6.$(file.patterns.erlang)=@date @docRoot @link @module @package @section @time @type @version\n"
"\n"
"comment.block.erlang=%~\n"
"\n"
"\n"
"style.erlang.0=fore:#000000\n"
"\n"
"style.erlang.1=fore:#d00000\n"
"style.erlang.14=fore:#3f5fbf\n"
"style.erlang.15=fore:#3f5fbf\n"
"style.erlang.16=fore:#3f5fbf,bold\n"
"style.erlang.17=fore:#3f5fbf,bold,italics\n"
"\n"
"style.erlang.2=fore:#7f0000\n"
"style.erlang.3=fore:#007f00\n"
"style.erlang.5=fore:#ff901e\n"
"style.erlang.9=fore:#007f00\n"
"style.erlang.10=fore:#7f007f\n"
"style.erlang.19=fore:#7f007f\n"
"style.erlang.11=fore:#7f7f00,bold\n"
"style.erlang.20=fore:#7f7f00,bold\n"
"style.erlang.7=fore:#7f7f00\n"
"style.erlang.18=fore:#7f7f00\n"
"style.erlang.13=fore:#007f7f\n"
"style.erlang.21=fore:#007f7f\n"
"\n"
"style.erlang.4=fore:#00007f,bold\n"
"style.erlang.22=fore:#0000ff,bold\n"
"style.erlang.8=fore:#00007f\n"
"style.erlang.23=fore:#00cccc\n"
"style.erlang.24=fore:#007f7f\n"
"style.erlang.12=fore:#007f7f\n"
"style.erlang.6=fore:#000000\n"
"ECOMPILEHOME=C:\\Daten\\Code\\CVS Workspace\\etheria-pol095\\scripts\n"
"\n"
"filter.escript=E-Script (src em)|$(file.patterns.escript)|\n"
"file.patterns.escript=*.src;*.em\n"
"\n"
"lexer.$(file.patterns.escript)=escript\n"
"escript.case.sensitive=0\n"
"\n"
"\n"
"command.compile.*.src=\"$(ECOMPILEHOME)\\ecompile.exe\" $(FileNameExt)\n"
"\n"
"style.escript.0=$(font.base)\n"
"style.escript.1=$(colour.code.comment.box),$(font.code.comment.box)\n"
"style.escript.2=$(colour.code.comment.line),$(font.code.comment.line)\n"
"style.escript.3=$(colour.code.comment.doc),$(font.code.comment.doc)\n"
"style.escript.4=$(colour.number)\n"
"style.escript.5=fore:#FF4000\n"
"style.escript.6=fore:#FF8000,$(font.string.literal)\n"
"style.escript.7=fore:#FF0000\n"
"style.escript.8=\n"
"style.escript.9=fore:#0000FF\n"
"style.escript.10=fore:#B00040\n"
"style.escript.11=fore:#B00040\n"
"\n"
"\n"
"\n"
"keywords.$(file.patterns.escript)=\\\n"
"basic basicio boats \\\n"
"cfgfile \\\n"
"file \\\n"
"http \\\n"
"npc \\\n"
"os \\\n"
"uo util \\\n"
"accessible \\\n"
"addmenuitem \\\n"
"appendconfigfileelem \\\n"
"applyconstraint \\\n"
"applydamage \\\n"
"applyrawdamage \\\n"
"assignrecttoweatherregion \\\n"
"append \\\n"
"baseskilltorawskill \\\n"
"boatfromitem \\\n"
"broadcast \\\n"
"ban \\\n"
"cdbl \\\n"
"cint \\\n"
"cstr \\\n"
"checklineofsight \\\n"
"checklosat \\\n"
"checkskill \\\n"
"consumemana \\\n"
"consumereagents \\\n"
"consumesubstance \\\n"
"createaccount \\\n"
"createitematlocation \\\n"
"createiteminbackpack \\\n"
"createitemininventory \\\n"
"createitemincontainer \\\n"
"createmenu \\\n"
"createmultiatlocation \\\n"
"createnpcfromtemplate \\\n"
"createrootiteminstoragearea \\\n"
"createstoragearea \\\n"
"clear_script_profile_counters \\\n"
"close \\\n"
"damage \\\n"
"destroyitem \\\n"
"destroymulti \\\n"
"destroyrootiteminstoragearea \\\n"
"detach \\\n"
"disableevents \\\n"
"disconnectclient \\\n"
"distance \\\n"
"disable \\\n"
"enableevents \\\n"
"enumerateitemsincontainer \\\n"
"enumerateonlinecharacters \\\n"
"equipfromtemplate \\\n"
"equipitem \\\n"
"eraseglobalproperty \\\n"
"eraseobjproperty \\\n"
"enable \\\n"
"enabled \\\n"
"erase \\\n"
"events_waiting \\\n"
"exists \\\n"
"findconfigelem \\\n"
"findobjtypeincontainer \\\n"
"findrootiteminstoragearea \\\n"
"findstoragearea \\\n"
"fclose \\\n"
"find \\\n"
"fopen \\\n"
"fread \\\n"
"fseek \\\n"
"ftell \\\n"
"fwrite \\\n"
"gamestat \\\n"
"getamount \\\n"
"getcommandhelp \\\n"
"getconfigint \\\n"
"getconfigintkeys \\\n"
"getconfigmaxintkey \\\n"
"getconfigreal \\\n"
"getconfigstring \\\n"
"getconfigstringkeys \\\n"
"getconfigstringarray \\\n"
"getelemproperty \\\n"
"getequipmentbylayer \\\n"
"getglobalproperty \\\n"
"getharvestdifficulty \\\n"
"getmapinfo \\\n"
"getmenuobjtypes \\\n"
"getobjproperty \\\n"
"getobjtype \\\n"
"getobjtypebyname \\\n"
"getproperty \\\n"
"getrawskill \\\n"
"getregionstring \\\n"
"getskill \\\n"
"getspelldifficulty \\\n"
"getstandingheight \\\n"
"getworldheight \\\n"
"grantprivilege \\\n"
"harvestresource \\\n"
"healdamage \\\n"
"hex \\\n"
"islegalmove \\\n"
"insert \\\n"
"keys \\\n"
"listequippeditems \\\n"
"listghostsnearlocation \\\n"
"listhostiles \\\n"
"listitemsatlocation \\\n"
"listitemsnearlocation \\\n"
"listitemsnearlocationoftype \\\n"
"listmobilesinlineofsight \\\n"
"listmobilesnearlocation \\\n"
"listmobilesnearlocationex \\\n"
"listobjectsinbox \\\n"
"loadtusscpfile \\\n"
"left \\\n"
"len \\\n"
"log_profile \\\n"
"lower \\\n"
"makeboundingbox \\\n"
"move \\\n"
"moveboat \\\n"
"moveboatrelative \\\n"
"movecharactertolocation \\\n"
"moveitemtocontainer \\\n"
"moveitemtolocation \\\n"
"move_offline_mobiles \\\n"
"openpaperdoll \\\n"
"open \\\n"
"pack \\\n"
"performaction \\\n"
"playlightningbolteffect \\\n"
"playmovingeffect \\\n"
"playmovingeffectxyz \\\n"
"playobjectcenteredeffect \\\n"
"playsoundeffect \\\n"
"playsoundeffectprivate \\\n"
"playstationaryeffect \\\n"
"printtextabove \\\n"
"printtextaboveprivate \\\n"
"packages \\\n"
"polcore \\\n"
"position \\\n"
"print \\\n"
"queryparam \\\n"
"randomdiceroll \\\n"
"randomint \\\n"
"rawskilltobaseskill \\\n"
"readconfigfile \\\n"
"readgameclock \\\n"
"releaseitem \\\n"
"registerforspeechevents \\\n"
"registeritemwithboat \\\n"
"requestinput \\\n"
"reserveitem \\\n"
"restartscript \\\n"
"resurrect \\\n"
"revokeprivilege \\\n"
"runawayfrom \\\n"
"runawayfromlocation \\\n"
"runtoward \\\n"
"runtowardlocation \\\n"
"reverse \\\n"
"run_script_to_completion \\\n"
"saveworldstate \\\n"
"selectmenuitem2 \\\n"
"self \\\n"
"sendbuywindow \\\n"
"senddialoggump \\\n"
"sendevent \\\n"
"sendopenspecialcontainer \\\n"
"sendpacket \\\n"
"sendsellwindow \\\n"
"sendskillwindow \\\n"
"sendstringastipwindow \\\n"
"sendsysmessage \\\n"
"sendtextentrygump \\\n"
"setanchor \\\n"
"setglobalproperty \\\n"
"setname \\\n"
"setobjproperty \\\n"
"setopponent \\\n"
"setproperty \\\n"
"setrawskill \\\n"
"setregionlightlevel \\\n"
"setregionweatherlevel \\\n"
"setscriptcontroller \\\n"
"setwarmode \\\n"
"shutdown \\\n"
"speakpowerwords \\\n"
"splitwords \\\n"
"startspelleffect \\\n"
"subtractamount \\\n"
"systemfindboatbyserial \\\n"
"systemfindobjectbyserial \\\n"
"say \\\n"
"set_critical \\\n"
"set_debug \\\n"
"set_priority \\\n"
"set_priority_divide \\\n"
"set_script_option \\\n"
"setcmdlevel \\\n"
"setdex \\\n"
"setint \\\n"
"setlightlevel \\\n"
"setmaster \\\n"
"setname \\\n"
"setpassword \\\n"
"setstr \\\n"
"shrink \\\n"
"size \\\n"
"sleep \\\n"
"sleepms \\\n"
"sort \\\n"
"spendgold \\\n"
"squelch \\\n"
"start_script \\\n"
"syslog \\\n"
"system_rpm \\\n"
"target \\\n"
"targetcoordinates \\\n"
"targetmultiplacement \\\n"
"turnawayfrom \\\n"
"turnawayfromlocation \\\n"
"turnboat \\\n"
"turntoward \\\n"
"turntowardlocation \\\n"
"toggle \\\n"
"unloadconfigfile \\\n"
"unpack \\\n"
"unban \\\n"
"unload_scripts \\\n"
"upper \\\n"
"walkawayfrom \\\n"
"walkawayfromlocation \\\n"
"walktoward \\\n"
"walktowardlocation \\\n"
"wander \\\n"
"writehtml \\\n"
"writehtmlraw \\\n"
"wait_for_event \\\n"
"movechar_forcelocation \\\n"
"moveitem_forcelocation \\\n"
"moveitem_normal \\\n"
"scriptopt_debug \\\n"
"scriptopt_no_interrupt \\\n"
"scriptopt_no_runaway \\\n"
"te_cancel_disable \\\n"
"te_cancel_enable \\\n"
"te_style_disable \\\n"
"te_style_normal \\\n"
"te_style_numerical \\\n"
"tgtopt_check_los \\\n"
"tgtopt_harmful \\\n"
"tgtopt_helpful \\\n"
"tgtopt_neutral \\\n"
"tgtopt_nocheck_los \\\n"
"setprop \\\n"
"getprop\n"
"\n"
"\n"
"keywords2.$(file.patterns.escript)=\\\n"
"array \\\n"
"const \\\n"
"dictionary \\\n"
"global \\\n"
"local \\\n"
"var \\\n"
"and \\\n"
"default \\\n"
"in \\\n"
"next not \\\n"
"or \\\n"
"return \\\n"
"to \\\n"
"include \\\n"
"use \\\n"
"enum\n"
"\n"
"\n"
"keywords3.$(file.patterns.escript)=\\\n"
"while \\\n"
"for \\\n"
"endfor \\\n"
"function \\\n"
"program \\\n"
"endprogram endfunction \\\n"
"foreach \\\n"
"case \\\n"
"else elseif \\\n"
"if endcase endenum endforeach endif endwhile\n"
"\n"
"\n"
"\n"
"file.patterns.flagship=*.prg\n"
"\n"
"lexer.$(file.patterns.flagship)=flagship\n"
"\n"
"keywordclass.fs6commands=\\\n"
"? @ accept access all alternate announce ansi any append as assign autolock average \\\n"
"begin bell bitmap blank box \\\n"
"call cancel case century charset checkbox clear close cls color combobox commit \\\n"
"confirm console constant continue copy count create cursor \\\n"
"date dbread dbwrite decimals declare default delete deleted delimiters device dir \\\n"
"directory display do draw \\\n"
"edit else elseif eject end endcase enddo endif endtext epoch erase error escape eval eventmask \\\n"
"exact exclusive extended external extra \\\n"
"field file filter find fixed font for form format from \\\n"
"get gets global global_extern go goto gotop guialign guicolor guicursor guitransl \\\n"
"html htmltext \\\n"
"if image index input intensity \\\n"
"join \\\n"
"key keyboard keytransl \\\n"
"label lines list listbox local locate \\\n"
"margin memory memvar menu message method multibyte multilocks \\\n"
"next nfs nfslock nfs_force note \\\n"
"on openerror order outmode \\\n"
"pack parameters path pixel pop printer private prompt public push pushbutton \\\n"
"quit \\\n"
"radiobutton radiogroup read recall refresh reindex relation release rename replace report request restore \\\n"
"richtext rowadapt rowalign run \\\n"
"save say scoreboard scrcompress screen seek select sequence set setenhanced setstandard setunselected \\\n"
"skip softseek sort source static store struct structure sum \\\n"
"tag tbrowse text to total type typeahead \\\n"
"unique unlock update use \\\n"
"wait while with wrap \\\n"
"xml zap zerobyteout\n"
"\n"
"keywordclass.fs6libfunc=\\\n"
"_displarr _displarrerr _displarrstd _displobj _displobjerr _displobjstd \\\n"
"aadd abs achoice aclone acopy adel adir aelemtype aeval afields afill ains alert alias alltrim altd ansi2oem \\\n"
"appiomode appmdimode appobject array asc ascan asize asort at atail atanychar autoxlock \\\n"
"between bin2i bin2l bin2w binand binlshift binor binrshift binxor bof break browse \\\n"
"cdow chr chr2screen cmonth col col2pixel color2rgb colorselect colvisible consoleopen consolesize crc32 ctod curdir \\\n"
"date datevalid day dbappend dbclearfilter dbclearindex dbclearrelation dbcloseall dbclosearea dbcommit dbcommitall \\\n"
"dbcreate dbcreateindex dbdelete dbedit dbeval dbf dbfilter dbfinfo dbflock dbfused dbgetlocate dbgobottom dbgoto \\\n"
"dbgotop dbobject dbrecall dbreindex dbrelation dbrlock dbrlocklist dbrselect dbrunlock dbseek dbselectarea \\\n"
"dbsetdriver dbsetfilter dbsetindex dbsetlocate dbsetorder dbsetrelation dbskip dbstruct dbunlock dbunlockall \\\n"
"dbusearea default deleted descend devout devoutpict devpos directory diskspace dispbegin dispbox dispcount \\\n"
"dispend dispout doserror doserror2str dow drawline dtoc dtos \\\n"
"empty eof errorblock errorlevel eval execname execpidnum exp \\\n"
"fattrib fclose fcount fcreate ferase ferror ferror2str fieldblock fielddeci fieldget fieldgetarr fieldlen fieldname \\\n"
"fieldpos fieldput fieldputarr fieldtype fieldwblock file findexefile fklabel fkmax flagship_dir flock flockf fopen \\\n"
"found fread freadstdin freadstr freadtxt frename fs_set fseek fwrite \\\n"
"getactive getalign getapplykey getdosetkey getenv getenvarr getfunction getpostvalid getprevalid getreader guidrawline \\\n"
"hardcr header hex2num \\\n"
"i2bin iif indexcheck indexcount indexdbf indexext indexkey indexnames indexord infobox inkey inkey2read inkey2str inkeytrap \\\n"
"instdchar instdstring int int2num isalpha isbegseq iscolor isdbexcl isdbflock isdbmultip isdbmultiple isdbmultipleopen \\\n"
"isdbrlock isdigit isfunction isguimode islower isobjclass isobjequiv isobjproperty isprinter isupper \\\n"
"l2bin lastkey lastrec left len listbox lock log lower ltrim lupdate \\\n"
"macroeval macrosubst max max_col max_row maxcol maxrow mcol mdblck mdiclose mdiopen mdiselect memocode memodecode \\\n"
"memoedit memoencode memoline memoread memory memotran memowrit memvarblock mhide min minmax mlcount mlctopos mleftdown \\\n"
"mlpos mod month mpostolc mpresent mreststate mrightdown mrow msavestate msetcursor msetpos mshow mstate \\\n"
"neterr netname nextkey num2hex num2int \\\n"
"objclone oem2ansi onkey ordbagext ordbagname ordcond ordcondset ordcreate orddescend orddestroy ordfor ordisinique \\\n"
"ordkey ordkeyadd ordkeycount ordkeydel ordkeygoto ordkeyno ordkeyval ordlistadd ordlistclear ordlistrebui ordname \\\n"
"ordnumber ordscope ordsetfocu ordsetrelat ordskipunique os outerr outstd \\\n"
"padc padl padr param parameters pcalls pcol pcount pixel2col pixel2row printstatus procfile procline procname procstack proper prow \\\n"
"qout qout2 qqout qqout2 \\\n"
"rat rddlist rddname rddsetdefault readexit readinsert readkey readkill readmodal readsave readupdated readvar reccount recno recsize \\\n"
"replicate restscreen right rlock rlockverify round row row2pixel rowadapt rowvisible rtrim \\\n"
"savescreen scrdos2unix screen2chr scroll scrunix2dos seconds secondscpu select serial set setansi setblink setcancel setcol2get \\\n"
"setcolor setcolorba setcursor setevent setguicursor setkey setmode setpos setprc setvarempty sleep sleepms soundex space \\\n"
"sqrt statbarmsg statusmessage stod str strlen strlen2col strlen2pix strlen2space strpeek strpoke strtran strzero stuff substr \\\n"
"tbcolumnnew tbmouse tbrowsearr tbrowsedb tbrowsenew tempfilename time tone transform trim truepath type \\\n"
"updated upper used usersactive usersdbf usersmax \\\n"
"val valtype version \\\n"
"webdate weberrorhandler webgetenvir webgetformdata webhtmlbegin webhtmlend weblogerr webmaildomain weboutdata websendmail word \\\n"
"year\n"
"\n"
"keywordclass.fs6funcproc=\\\n"
"function procedure return exit\n"
"\n"
"keywordclass.fs6class=\\\n"
"class instance export hidden protect prototype\n"
"\n"
"keywordclass.fs6doxygen=a addindex addtogroup anchor arg attention \\\n"
"author b brief bug c class code date def defgroup deprecated dontinclude \\\n"
"e em endcode endhtmlonly endif endlatexonly endlink endverbatim enum example exception \\\n"
"f$ f[ f] file fn hideinitializer htmlinclude htmlonly \\\n"
"if image include ingroup internal invariant interface latexonly li line link \\\n"
"mainpage name namespace nosubgrouping note overload \\\n"
"p page par param param[in] param[out] \\\n"
"post pre ref relates remarks return retval \\\n"
"sa section see showinitializer since skip skipline struct subsection \\\n"
"test throw throws todo typedef union until \\\n"
"var verbatim verbinclude version warning weakgroup $ @ \\ & < > # { }\n"
"\n"
"keywords.$(file.patterns.flagship)=$(keywordclass.fs6commands)\n"
"keywords2.$(file.patterns.flagship)=$(keywordclass.fs6libfunc)\n"
"keywords3.$(file.patterns.flagship)=$(keywordclass.fs6funcproc)\n"
"keywords4.$(file.patterns.flagship)=$(keywordclass.fs6class)\n"
"keywords5.$(file.patterns.flagship)=$(keywordclass.fs6doxygen)\n"
"\n"
"comment.block.flagship=//~\n"
"comment.stream.start.flagship=/*\n"
"comment.stream.end.flagship=*/\n"
"comment.box.start.flagship=/*\n"
"comment.box.middle.flagship= *\n"
"comment.box.end.flagship= */\n"
"\n"
"\n"
"\n"
"style.flagship.32=$(font.base)\n"
"style.flagship.0=\n"
"style.flagship.1=$(colour.code.comment.line),$(font.code.comment.line)\n"
"style.flagship.2=$(colour.code.comment.line),$(font.code.comment.line)\n"
"style.flagship.3=$(colour.code.comment.doc),$(font.code.comment.doc)\n"
"style.flagship.4=$(colour.code.comment.line),$(font.code.comment.line)\n"
"style.flagship.5=fore:#3060A0,$(font.code.comment.doc)\n"
"style.flagship.6=fore:#804020,$(font.code.comment.doc)\n"
"\n"
"style.flagship.7=$(colour.keyword)\n"
"style.flagship.8=$(colour.keyword)\n"
"style.flagship.9=$(colour.keyword),bold\n"
"style.flagship.10=$(colour.keyword),bold\n"
"\n"
"style.flagship.11=$(colour.number)\n"
"style.flagship.12=$(colour.string)\n"
"style.flagship.13=$(colour.preproc)\n"
"style.flagship.14=$(colour.operator)\n"
"style.flagship.15=\n"
"style.flagship.16=$(colour.number)\n"
"style.flagship.17=$(style.stringeol)\n"
"style.flagship.18=$(colour.number)\n"
"style.flagship.19=$(colour.operator)\n"
"style.flagship.20=\n"
"style.flagship.21=\n"
"style.flagship.22=$(colour.code.comment.doc),$(font.code.comment.doc)\n"
"style.flagship.23=$(colour.code.comment.line),$(font.code.comment.line)\n"
"style.flagship.24=$(colour.keyword)\n"
"style.flagship.25=$(colour.keyword)\n"
"style.flagship.26=$(colour.number)\n"
"style.flagship.27=$(colour.string)\n"
"style.flagship.28=$(colour.preproc)\n"
"style.flagship.29=$(colour.operator)\n"
"style.flagship.30=\n"
"style.flagship.31=$(style.stringeol)\n"
"\n"
"fsOptObj=-c -q -w1 -w2 -w3\n"
"fsOptExe=-q -w1 -w2 -w3\n"
"\n"
"fsObj=FlagShip $(fsOptObj) $(FileNameExt) -o $(FileName).o\n"
"\n"
"fsExe=FlagShip $(fsOptExe) $(FileNameExt) -o $(FileName)\n"
"\n"
"command.compile.*.prg=$(fsObj)\n"
"command.build.*.prg=$(fsExe)\n"
"command.go.*.prg=$(FileName)\n"
"\n"
"\n"
"command.help.$(file.patterns.flagship)=fsman\n"
"\n"
"file.patterns.forth=*.forth\n"
"\n"
"\n"
"lexer.$(file.patterns.forth)=forth\n"
"\n"
"filter.forth=Forth files (f spf)|$(file.patterns.forth)|\n"
"\n"
"word.characters.$(file.patterns.forth)=$(chars.alpha)$(chars.numeric)%-\n"
"\n"
"comment.block.forth=\\\n"
"comment.stream.start.forth=(\n"
"comment.stream.end.forth=)\n"
"comment.box.start.forth=\\\n"
"comment.box.middle.forth=\\\n"
"comment.box.end.forth=\\\n"
"\n"
"\n"
"keywords.$(file.patterns.forth)=\\\n"
"AGAIN BEGIN CASE DO ELSE ENDCASE ENDOF IF LOOP OF REPEAT THEN UNTIL  WHILE \\\n"
"[IF] [ELSE] [THEN] ?DO\n"
"\n"
"keywords2.$(file.patterns.forth)=\\\n"
"DUP DROP ROT SWAP OVER @ ! 2@ 2! 2DUP 2DROP 2SWAP 2OVER NIP R@ >R R> 2R@ 2>R 2R> \\\n"
"0= 0< SP@ SP! W@ W! C@ C! < > = <> 0<>\\\n"
"SPACE SPACES KEY? KEY THROW CATCH ABORT */ 2* /MOD CELL+ CELLS CHAR+ \\\n"
"CHARS MOVE ERASE DABS TITLE HEX DECIMAL HOLD <# # #S #> SIGN \\\n"
"D. . U. DUMP (.\") >NUMBER ' IMMEDIATE EXIT RECURSE UNLOOP LEAVE HERE ALLOT , \\\n"
"C, W, COMPILE, BRANCH, RET, LIT, DLIT, ?BRANCH, \", >MARK >RESOLVE1 <MARK >RESOLVE \\\n"
"ALIGN ALIGNED USER-ALLOT USER-HERE HEADER DOES> SMUDGE HIDE :NONAME LAST-WORD \\\n"
"?ERROR ERROR2 FIND1 SFIND SET-CURRENT GET-CURRENT DEFINITIONS GET-ORDER FORTH \\\n"
"ONLY SET-ORDER ALSO PREVIOUS VOC-NAME. ORDER LATEST LITERAL 2LITERAL SLITERAL \\\n"
"CLITERAL ?LITERAL1 ?SLITERAL1 HEX-LITERAL HEX-SLITERAL ?LITERAL2 ?SLITERAL2 SOURCE \\\n"
"EndOfChunk CharAddr PeekChar IsDelimiter GetChar OnDelimiter SkipDelimiters OnNotDelimiter \\\n"
"SkipWord SkipUpTo ParseWord NextWord PARSE SKIP CONSOLE-HANDLES REFILL DEPTH ?STACK \\\n"
"?COMP WORD INTERPRET BYE QUIT MAIN1 EVALUATE INCLUDE-FILE INCLUDED >BODY +WORD \\\n"
"WORDLIST CLASS! CLASS@ PAR! PAR@ ID. ?IMMEDIATE ?VOC IMMEDIATE VOC WordByAddrWl \\\n"
"WordByAddr NLIST WORDS SAVE OPTIONS /notransl ANSI>OEM ACCEPT EMIT CR TYPE EKEY? \\\n"
"EKEY EKEY>CHAR EXTERNTASK ERASE-IMPORTS ModuleName ModuleDirName ENVIRONMENT? \\\n"
"DROP-EXC-HANDLER SET-EXC-HANDLER HALT ERR CLOSE-FILE CREATE-FILE CREATE-FILE-SHARED \\\n"
"OPEN-FILE-SHARED DELETE-FILE FILE-POSITION FILE-SIZE OPEN-FILE READ-FILE REPOSITION-FILE \\\n"
"DOS-LINES UNIX-LINES READ-LINE WRITE-FILE RESIZE-FILE WRITE-LINE ALLOCATE FREE RESIZE \\\n"
"START SUSPEND RESUME STOP PAUSE MIN MAX TRUE FALSE ASCIIZ> \\\n"
"R/O W/O ;CLASS ENDWITH OR AND /STRING SEARCH COMPARE EXPORT ;MODULE SPACE\n"
"\n"
"keywords3.$(file.patterns.forth)=\\\n"
"VARIABLE CREATE : VALUE CONSTANT VM: M: var dvar chars OBJ \\\n"
"CONSTR: DESTR: CLASS: OBJECT: POINTER \\\n"
"USER USER-CREATE USER-VALUE VECT \\\n"
"WNDPROC: VOCABULARY -- TASK: CEZ: MODULE:\n"
"\n"
"keywords4.$(file.patterns.forth)=\\\n"
"CHAR [CHAR] POSTPONE WITH ['] TO [COMPILE] CHAR ASCII \\'\n"
"\n"
"keywords5.$(file.patterns.forth)=\\\n"
"REQUIRE WINAPI:\n"
"\n"
"keywords6.$(file.patterns.forth)=\\\n"
"S\" ABORT\" Z\" \" .\" C\"\n"
"\n"
"style.forth.0=$(font.monospace)\n"
"style.forth.1=fore:#009933,$(font.comment),$(font.monospace)\n"
"style.forth.2=fore:#007F00,$(font.comment)\n"
"style.forth.3=fore:#000000,bold\n"
"style.forth.4=fore:#00007F,bold\n"
"style.forth.5=fore:#000000,$(font.monospace),bold\n"
"style.forth.6=fore:#FF0000,bold,$(font.monospace)\n"
"style.forth.7=fore:#CC3300,bold,$(font.monospace)\n"
"style.forth.8=fore:#996633,bold,$(font.monospace)\n"
"style.forth.9=fore:#007F7F,$(font.monospace)\n"
"style.forth.10=fore:#CC3300,$(font.monospace)\n"
"style.forth.11=fore:#0000CC,$(font.monospace)\n"
"\n"
"\n"
"filter.fortran=Fortran (f for f90 f95 f2k)|*.f;*.for;*.f90;*.f95;*.f2k|\n"
"\n"
"file.patterns.f95=*.f90;*.f95;*.f2k\n"
"file.patterns.f77=*.f;*.for\n"
"file.patterns.fortran=$(file.patterns.f95);$(file.patterns.f77)\n"
"\n"
"lexer.$(file.patterns.f95)=fortran\n"
"lexer.$(file.patterns.f77)=f77\n"
"\n"
"keywordclass.fortran=access action advance allocatable allocate \\\n"
"apostrophe assign assignment associate asynchronous backspace \\\n"
"bind blank blockdata call case character class close common \\\n"
"complex contains continue cycle data deallocate decimal delim \\\n"
"default dimension direct do dowhile double doubleprecision else \\\n"
"elseif elsewhere encoding end endassociate endblockdata enddo \\\n"
"endfile endforall endfunction endif endinterface endmodule endprogram \\\n"
"endselect endsubroutine endtype endwhere entry eor equivalence \\\n"
"err errmsg exist exit external file flush fmt forall form format \\\n"
"formatted function go goto id if implicit in include inout \\\n"
"integer inquire intent interface intrinsic iomsg iolength \\\n"
"iostat kind len logical module name named namelist nextrec nml \\\n"
"none nullify number only open opened operator optional out pad \\\n"
"parameter pass pause pending pointer pos position precision \\\n"
"print private procedure program protected public quote read readwrite \\\n"
"real rec recl recursive result return rewind save select \\\n"
"selectcase selecttype sequential sign size stat status stop stream \\\n"
"subroutine target then to type unformatted unit use value \\\n"
"volatile wait where while write\n"
"\n"
"keywords.$(file.patterns.f95)=$(keywordclass.fortran)\n"
"keywords.$(file.patterns.f77)=$(keywordclass.fortran)\n"
"\n"
"keywords2.$(file.patterns.fortran)=abs achar acos acosd adjustl adjustr \\\n"
"aimag aimax0 aimin0 aint ajmax0 ajmin0 akmax0 akmin0 all allocated alog \\\n"
"alog10 amax0 amax1 amin0 amin1 amod anint any asin asind associated \\\n"
"atan atan2 atan2d atand bitest bitl bitlr bitrl bjtest bit_size bktest break \\\n"
"btest cabs ccos cdabs cdcos cdexp cdlog cdsin cdsqrt ceiling cexp char \\\n"
"clog cmplx conjg cos cosd cosh count cpu_time cshift csin csqrt dabs \\\n"
"dacos dacosd dasin dasind datan datan2 datan2d datand date \\\n"
"date_and_time dble dcmplx dconjg dcos dcosd dcosh dcotan ddim dexp \\\n"
"dfloat dflotk dfloti dflotj digits dim dimag dint dlog dlog10 dmax1 dmin1 \\\n"
"dmod dnint dot_product dprod dreal dsign dsin dsind dsinh dsqrt dtan dtand \\\n"
"dtanh eoshift epsilon errsns exp exponent float floati floatj floatk floor fraction \\\n"
"free huge iabs iachar iand ibclr ibits ibset ichar idate idim idint idnint ieor ifix \\\n"
"iiabs iiand iibclr iibits iibset iidim iidint iidnnt iieor iifix iint iior iiqint iiqnnt iishft \\\n"
"iishftc iisign ilen imax0 imax1 imin0 imin1 imod index inint inot int int1 int2 int4 \\\n"
"int8 iqint iqnint ior ishft ishftc isign isnan izext jiand jibclr jibits jibset jidim jidint \\\n"
"jidnnt jieor jifix jint jior jiqint jiqnnt jishft jishftc jisign jmax0 jmax1 jmin0 jmin1 \\\n"
"jmod jnint jnot jzext kiabs kiand kibclr kibits kibset kidim kidint kidnnt kieor kifix \\\n"
"kind kint kior kishft kishftc kisign kmax0 kmax1 kmin0 kmin1 kmod knint knot kzext \\\n"
"lbound leadz len len_trim lenlge lge lgt lle llt log log10 logical lshift malloc matmul \\\n"
"max max0 max1 maxexponent maxloc maxval merge min min0 min1 minexponent minloc \\\n"
"minval mod modulo mvbits nearest nint not nworkers number_of_processors pack popcnt \\\n"
"poppar precision present product radix random random_number random_seed range real \\\n"
"repeat reshape rrspacing rshift scale scan secnds selected_int_kind \\\n"
"selected_real_kind set_exponent shape sign sin sind sinh size sizeof sngl snglq spacing \\\n"
"spread sqrt sum system_clock tan tand tanh tiny transfer transpose trim ubound unpack verify\n"
"\n"
"keywords3.$(file.patterns.fortran)=cdabs cdcos cdexp cdlog cdsin cdsqrt cotan cotand \\\n"
"dcmplx dconjg dcotan dcotand decode dimag dll_export dll_import doublecomplex dreal \\\n"
"dvchk encode find flen flush getarg getcharqq getcl getdat getenv gettim hfix ibchng \\\n"
"identifier imag int1 int2 int4 intc intrup invalop iostat_msg isha ishc ishl jfix \\\n"
"lacfar locking locnear map nargs nbreak ndperr ndpexc offset ovefl peekcharqq precfill \\\n"
"prompt qabs qacos qacosd qasin qasind qatan qatand qatan2 qcmplx qconjg qcos qcosd \\\n"
"qcosh qdim qexp qext qextd qfloat qimag qlog qlog10 qmax1 qmin1 qmod qreal qsign qsin \\\n"
"qsind qsinh qsqrt qtan qtand qtanh ran rand randu rewrite segment setdat settim system \\\n"
"timer undfl unlock union val virtual volatile zabs zcos zexp zlog zsin zsqrt\n"
"\n"
"\n"
"comment.block.fortran=!~\n"
"\n"
"\n"
"style.fortran.0=fore:#808080\n"
"style.f77.0=fore:#808080\n"
"style.fortran.32=\n"
"style.f77.32=\n"
"style.fortran.1=$(colour.code.comment.line),$(font.code.comment.line)\n"
"style.f77.1=$(colour.code.comment.line),$(font.code.comment.line)\n"
"style.fortran.2=$(colour.number)\n"
"style.f77.2=$(colour.number)\n"
"style.fortran.3=$(colour.string)\n"
"style.f77.3=$(colour.string)\n"
"style.fortran.4=$(colour.string)\n"
"style.f77.4=$(colour.string)\n"
"style.fortran.5=fore:#000000,back:#E0C0E0,eolfilled\n"
"style.f77.5=fore:#000000,back:#E0C0E0,eolfilled\n"
"style.fortran.6=$(colour.operator),bold\n"
"style.f77.6=$(colour.operator),bold\n"
"style.fortran.7=\n"
"style.f77.7=\n"
"style.fortran.8=$(colour.keyword),case:u\n"
"style.f77.8=$(colour.keyword),case:u\n"
"style.fortran.9=fore:#B00040\n"
"style.f77.9=fore:#B00040\n"
"style.fortran.10=fore:#B04080\n"
"style.f77.10=fore:#B04080\n"
"style.fortran.11=$(colour.preproc)\n"
"style.f77.11=$(colour.preproc)\n"
"style.fortran.12=$(colour.operator),bold\n"
"style.f77.12=$(colour.operator),bold\n"
"style.fortran.13=fore:#E0C0E0\n"
"style.f77.13=fore:#E0C0E0\n"
"style.fortran.14=fore:#000000,back:#F0E080\n"
"style.f77.14=fore:#000000,back:#F0E080\n"
"braces.fortran.style=0\n"
"\n"
"if PLAT_WIN\n"
"	fc77=lf95 $(FileNameExt) -c -fix\n"
"	fc90=lf95 $(FileNameExt) -c\n"
"if PLAT_GTK\n"
"	fc77=f77 -c -o $(FileName).o $(FileNameExt)\n"
"	fc90=f90 -c -o $(FileName).o $(FileNameExt)\n"
"\n"
"command.compile.*.f=$(fc77)\n"
"command.build.*.f=make\n"
"command.go.*.f=$(FileName)\n"
"\n"
"command.compile.*.for=$(fc77)\n"
"command.build.*.for=make\n"
"command.go.*.for=$(FileName)\n"
"\n"
"command.compile.*.f90=$(fc90)\n"
"command.build.*.f90=make\n"
"command.go.*.f90=$(FileName)\n"
"\n"
"command.compile.*.f95=$(fc90)\n"
"command.build.*.f95=make\n"
"command.go.*.f95=$(FileName)\n"
"\n"
"if PLAT_WIN\n"
"    api.$(file.patterns.fortran)=$(SciteDefaultHome)\\fortran.api\n"
"\n"
"autocomplete.fortran.ignorecase=1\n"
"autocomplete.f77.ignorecase=1\n"
"calltip.fortran.ignorecase=1\n"
"calltip.f77.ignorecase=1\n"
"\n"
"file.patterns.freebasic=*.bas;*.bi\n"
"\n"
"filter.freebasic=FreeBasic (bb bi)|$(file.patterns.freebasic)|\n"
"\n"
"lexer.$(file.patterns.freebasic)=freebasic\n"
"\n"
"\n"
"keywordclass.freebasic=\\\n"
"append as asc asin asm atan2 atn beep bin binary bit bitreset bitset bload \\\n"
"bsave byref byte byval call callocate case cbyte cdbl cdecl chain chdir chr \\\n"
"cint circle clear clng clngint close cls color command common cons const \\\n"
"continue cos cshort csign csng csrlin cubyte cuint culngint cunsg curdir \\\n"
"cushort custom cvd cvi cvl cvlongint cvs cvshort data date deallocate declare \\\n"
"defbyte defdbl defined defint deflng deflngint defshort defsng defstr defubyte \\\n"
"defuint defulngint defushort dim dir do double draw dylibload dylibsymbol else \\\n"
"elseif end enum environ environ$ eof eqv erase err error exec exepath exit exp \\\n"
"export extern field fix flip for fre freefile function get getjoystick getkey \\\n"
"getmouse gosub goto hex hibyte hiword if iif imagecreate imagedestroy imp \\\n"
"inkey inp input instr int integer is kill lbound lcase left len let lib line \\\n"
"lobyte loc local locate lock lof log long longint loop loword lset ltrim \\\n"
"mid mkd mkdir mki mkl mklongint mks mkshort mod multikey mutexcreate \\\n"
"mutexdestroy mutexlock mutexunlock name next not oct on once open option or out \\\n"
"output overload paint palette pascal pcopy peek peeki peeks pipe pmap point \\\n"
"pointer poke pokei pokes pos preserve preset print private procptr pset ptr \\\n"
"public put random randomize read reallocate redim rem reset restore resume \\\n"
"resume next return rgb rgba right rmdir rnd rset rtrim run sadd screen \\\n"
"screencopy screeninfo screenlock screenptr screenres screenset screensync \\\n"
"screenunlock seek statement seek function selectcase setdate setenviron \\\n"
"setmouse settime sgn shared shell shl short shr sin single sizeof sleep space \\\n"
"spc sqr static stdcall step stop str string string strptr sub swap system tab \\\n"
"tan then threadcreate threadwait time time timer to trans trim type ubound \\\n"
"ubyte ucase uinteger ulongint union unlock unsigned until ushort using va_arg \\\n"
"va_first va_next val val64 valint varptr view viewprint wait wend while width \\\n"
"window windowtitle with write xor zstring\n"
"\n"
"keywordclass.preprocessor=\\\n"
"\n"
"keywords.$(file.patterns.freebasic)=$(keywordclass.freebasic)\n"
"keywords2.$(file.patterns.freebasic)=$(keywordclass.preprocessor)\n"
"\n"
"style.freebasic.0=fore:#000000\n"
"style.freebasic.1=$(colour.code.comment.line),$(font.code.comment.line)\n"
"style.freebasic.2=$(colour.number)\n"
"style.freebasic.3=$(colour.keyword),bold\n"
"style.freebasic.4=$(colour.string)\n"
"style.freebasic.5=$(colour.preproc)\n"
"style.freebasic.6=$(colour.operator)\n"
"style.freebasic.7=$(style.freebasic.0)\n"
"style.freebasic.10=$(colour.keyword)\n"
"style.freebasic.11=$(colour.keyword)\n"
"style.freebasic.12=$(colour.keyword)\n"
"style.freebasic.15=$(colour.preproc)\n"
"style.freebasic.16=$(colour.error)\n"
"style.freebasic.17=$(colour.number)\n"
"style.freebasic.18=$(colour.number)\n"
"\n"
"\n"
"file.patterns.gap=*.g;*.gd;*.gi\n"
"\n"
"filter.gap=Gap (g gi gd)|$(file.patterns.gap)|\n"
"\n"
"lexer.$(file.patterns.gap)=gap\n"
"\n"
"keywords.$(file.patterns.gap)=and break continue do elif else end fi for function \\\n"
"if in local mod not od or quit rec repeat return then until while QUIT\n"
"\n"
"keywords2.$(file.patterns.gap)=false true IsBound Unbind TryNextMethod \\\n"
"Info Assert SaveWorkspace fail\n"
"\n"
"\n"
"comment.block.gap=#~\n"
"\n"
"style.gap.0=fore:#808080\n"
"style.gap.1=\n"
"style.gap.2=$(colour.keyword),bold\n"
"style.gap.3=$(colour.keyword)\n"
"style.gap.4=$(colour.keyword)\n"
"style.gap.5=$(colour.keyword)\n"
"style.gap.6=$(colour.string)\n"
"style.gap.7=$(colour.char)\n"
"style.gap.8=$(colour.operator),bold\n"
"style.gap.9=$(colour.code.comment.line)\n"
"style.gap.10=$(colour.number)\n"
"style.gap.11=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled\n"
"\n"
"braces.gap.style=8\n"
"\n"
"lexer.*.hs=haskell\n"
"filter.hs=Haskell (hs)|*.hs|\n"
"\n"
"style.haskell.0=fore:#808080\n"
"style.haskell.1=\n"
"style.haskell.2=$(colour.keyword),bold\n"
"style.haskell.3=$(colour.number)\n"
"style.haskell.4=$(colour.string)\n"
"style.haskell.5=$(colour.char)\n"
"style.haskell.7=\n"
"style.haskell.8=\n"
"style.haskell.11=$(colour.operator),bold\n"
"style.haskell.13=$(colour.code.comment.line),$(font.code.comment.line)\n"
"style.haskell.14=$(colour.code.comment.box),$(font.code.comment.box)\n"
"\n"
"keywordclass.haskell98=case class data default deriving do else hiding if \\\n"
"import in infix infixl infixr instance let module \\\n"
"newtype of then type where forall foreign\n"
"\n"
"keywordclass.ffi=export label dynamic safe threadsafe \\\n"
"unsafe stdcall ccall prim\n"
"\n"
"keywords.*.hs=$(keywordclass.haskell98)\n"
"\n"
"keywords2.*.hs=$(keywordclass.ffi)\n"
"\n"
"\n"
"file.patterns.web=*.html;*.htm;*.asp;*.shtml;*.htd;*.jsp\n"
"file.patterns.php=*.php3;*.phtml;*.php\n"
"file.patterns.html=$(file.patterns.web);$(file.patterns.php);*.htt;*.cfm;*.tpl;*.dtd;*.hta\n"
"file.patterns.vxml=*.vxml\n"
"file.patterns.xml=*.xml;*.xsl;*.svg;*.xul;*.xsd;*.dtd;*.xslt;*.axl;*.xrc;*.rdf\n"
"file.patterns.docbook=*.docbook\n"
"file.patterns.mako=*.mak;*.mako\n"
"\n"
"lexer.$(file.patterns.html)=hypertext\n"
"lexer.$(file.patterns.vxml)=hypertext\n"
"lexer.$(file.patterns.xml)=xml\n"
"lexer.$(file.patterns.docbook)=hypertext\n"
"lexer.$(file.patterns.mako)=hypertext\n"
"\n"
"filter.web=Web (html htm asp shtml css xml docbook jsp)|$(file.patterns.web);*.css;*.xml;*.docbook|\n"
"filter.php=PHP (php php3 phtml)|$(file.patterns.php)|\n"
"\n"
"fold.html=1\n"
"\n"
"\n"
"\n"
"\n"
"hypertext.elements=\\\n"
"a abbr acronym address applet area b base basefont \\\n"
"bdo big blockquote body br button caption center \\\n"
"cite code col colgroup dd del dfn dir div dl dt em \\\n"
"fieldset font form frame frameset h1 h2 h3 h4 h5 h6 \\\n"
"head hr html i iframe img input ins isindex kbd label \\\n"
"legend li link map menu meta noframes noscript \\\n"
"object ol optgroup option p param pre q s samp \\\n"
"script select small span strike strong style sub sup \\\n"
"table tbody td textarea tfoot th thead title tr tt u ul \\\n"
"var xml xmlns\n"
"\n"
"hypertext.attributes=\\\n"
"abbr accept-charset accept accesskey action align alink \\\n"
"alt archive axis background bgcolor border \\\n"
"cellpadding cellspacing char charoff charset checked cite \\\n"
"class classid clear codebase codetype color cols colspan \\\n"
"compact content coords \\\n"
"data datafld dataformatas datapagesize datasrc datetime \\\n"
"declare defer dir disabled enctype event \\\n"
"face for frame frameborder \\\n"
"headers height href hreflang hspace http-equiv \\\n"
"id ismap label lang language leftmargin link longdesc \\\n"
"marginwidth marginheight maxlength media method multiple \\\n"
"name nohref noresize noshade nowrap \\\n"
"object onblur onchange onclick ondblclick onfocus \\\n"
"onkeydown onkeypress onkeyup onload onmousedown \\\n"
"onmousemove onmouseover onmouseout onmouseup \\\n"
"onreset onselect onsubmit onunload \\\n"
"profile prompt readonly rel rev rows rowspan rules \\\n"
"scheme scope selected shape size span src standby start style \\\n"
"summary tabindex target text title topmargin type usemap \\\n"
"valign value valuetype version vlink vspace width \\\n"
"text password checkbox radio submit reset \\\n"
"file hidden image \\\n"
"^data-\n"
"\n"
"html5.elements=\\\n"
"address article aside audio base canvas command details datalist embed \\\n"
"figure figcaption footer header hgroup keygen mark menu meter nav output \\\n"
"progress ruby rt rp section source time video wbr\n"
"\n"
"html5.attributes=\\\n"
"async autocomplete autofocus contenteditable contextmenu draggable \\\n"
"form formaction formenctype formmethod formnovalidate formtarget \\\n"
"list manifest max min novalidate pattern placeholder \\\n"
"required reversed role sandbox scoped seamless sizes spellcheck srcdoc step\n"
"\n"
"keywordclass.hypertext=\\\n"
"$(hypertext.elements) $(hypertext.attributes) $(html5.elements) $(html5.attributes) public !doctype\n"
"\n"
"vxml.elements=\\\n"
"assign audio block break catch choice clear disconnect else elseif \\\n"
"emphasis enumerate error exit field filled form goto grammar help \\\n"
"if initial link log menu meta noinput nomatch object option p paragraph \\\n"
"param phoneme prompt property prosody record reprompt return s say-as \\\n"
"script sentence subdialog submit throw transfer value var voice vxml\n"
"\n"
"vxml.attributes=\\\n"
"accept age alphabet anchor application base beep bridge category charset \\\n"
"classid cond connecttimeout content contour count dest destexpr dtmf dtmfterm \\\n"
"duration enctype event eventexpr expr expritem fetchtimeout finalsilence \\\n"
"gender http-equiv id level maxage maxstale maxtime message messageexpr \\\n"
"method mime modal mode name namelist next nextitem ph pitch range rate \\\n"
"scope size sizeexpr skiplist slot src srcexpr sub time timeexpr timeout \\\n"
"transferaudio type value variant version volume xml:lang\n"
"\n"
"keywordclass.vxml=\\\n"
"$(vxml.elements) $(vxml.attributes) public !doctype\n"
"\n"
"keywordclass.php=\\\n"
"and array as bool boolean break case cfunction class const continue declare \\\n"
"default die directory do double echo else elseif empty enddeclare endfor \\\n"
"endforeach endif endswitch endwhile eval exit extends false float for \\\n"
"foreach function global goto if include include_once int integer isset list namespace \\\n"
"new null object old_function or parent print real require require_once resource \\\n"
"return static stdclass string switch true unset use var while xor \\\n"
"abstract catch clone exception final implements interface php_user_filter \\\n"
"private protected public this throw try \\\n"
"__class__ __dir__ __file__ __function__ __line__ __method__ \\\n"
"__namespace__ __sleep __wakeup\n"
"\n"
"import phpfunctions\n"
"\n"
"keywords.$(file.patterns.html)=$(keywordclass.hypertext)\n"
"keywords2.$(file.patterns.html)=$(keywordclass.javascript)\n"
"keywords3.$(file.patterns.html)=$(keywordclass.vb)\n"
"keywords4.$(file.patterns.html)=$(keywordclass.python)\n"
"keywords5.$(file.patterns.html)=$(keywordclass.php)\n"
"keywords6.$(file.patterns.html)=ELEMENT DOCTYPE ATTLIST ENTITY NOTATION\n"
"\n"
"docbook.elements42=\\\n"
"abbrev abstract accel ackno acronym action address affiliation alt anchor \\\n"
"answer appendix appendixinfo application area areaset areaspec arg article \\\n"
"articleinfo artpagenums attribution audiodata audioobject author authorblurb \\\n"
"authorgroup authorinitials beginpage bibliocoverage bibliodiv biblioentry \\\n"
"bibliography bibliographyinfo biblioid bibliomisc bibliomixed bibliomset \\\n"
"bibliorelation biblioset bibliosource blockinfo blockquote book bookinfo \\\n"
"bridgehead callout calloutlist caption caution chapter chapterinfo citation \\\n"
"citebiblioid citerefentry citetitle city classname classsynopsis classsynopsisinfo \\\n"
"cmdsynopsis co collab collabname colophon colspec command computeroutput \\\n"
"confdates confgroup confnum confsponsor conftitle constant constraint \\\n"
"constraintdef constructorsynopsis contractnum contractsponsor contrib \\\n"
"copyright coref corpauthor corpname country database date dedication \\\n"
"destructorsynopsis edition editor email emphasis entry entrytbl envar \\\n"
"epigraph equation errorcode errorname errortext errortype example \\\n"
"exceptionname fax fieldsynopsis figure filename firstname firstterm \\\n"
"footnote footnoteref foreignphrase formalpara funcdef funcparams \\\n"
"funcprototype funcsynopsis funcsynopsisinfo function glossary glossaryinfo \\\n"
"glossdef glossdiv glossentry glosslist glosssee glossseealso glossterm \\\n"
"graphic graphicco group guibutton guiicon guilabel guimenu guimenuitem \\\n"
"guisubmenu hardware highlights holder honorific htm imagedata imageobject \\\n"
"imageobjectco important index indexdiv indexentry indexinfo indexterm \\\n"
"informalequation informalexample informalfigure informaltable initializer \\\n"
"inlineequation inlinegraphic inlinemediaobject interface interfacename \\\n"
"invpartnumber isbn issn issuenum itemizedlist itermset jobtitle keycap \\\n"
"keycode keycombo keysym keyword keywordset label legalnotice lhs lineage \\\n"
"lineannotation link listitem iteral literallayout lot lotentry manvolnum \\\n"
"markup medialabel mediaobject mediaobjectco member menuchoice methodname \\\n"
"methodparam methodsynopsis mm modespec modifier ousebutton msg msgaud \\\n"
"msgentry msgexplan msginfo msglevel msgmain msgorig msgrel msgset msgsub \\\n"
"msgtext nonterminal note objectinfo olink ooclass ooexception oointerface \\\n"
"option optional orderedlist orgdiv orgname otheraddr othercredit othername \\\n"
"pagenums para paramdef parameter part partinfo partintro personblurb \\\n"
"personname phone phrase pob postcode preface prefaceinfo primary primaryie \\\n"
"printhistory procedure production productionrecap productionset productname \\\n"
"productnumber programlisting programlistingco prompt property pubdate publisher \\\n"
"publishername pubsnumber qandadiv qandaentry qandaset question quote refclass \\\n"
"refdescriptor refentry refentryinfo refentrytitle reference referenceinfo \\\n"
"refmeta refmiscinfo refname refnamediv refpurpose refsect1 refsect1info refsect2 \\\n"
"refsect2info refsect3 refsect3info refsection refsectioninfo refsynopsisdiv \\\n"
"refsynopsisdivinfo releaseinfo remark replaceable returnvalue revdescription \\\n"
"revhistory revision revnumber revremark rhs row sbr screen screenco screeninfo \\\n"
"screenshot secondary secondaryie sect1 sect1info sect2 sect2info sect3 sect3info \\\n"
"sect4 sect4info sect5 sect5info section sectioninfo see seealso seealsoie \\\n"
"seeie seg seglistitem segmentedlist segtitle seriesvolnums set setindex \\\n"
"setindexinfo setinfo sgmltag shortaffil shortcut sidebar sidebarinfo simpara \\\n"
"simplelist simplemsgentry simplesect spanspec state step street structfield \\\n"
"structname subject subjectset subjectterm subscript substeps subtitle \\\n"
"superscript surname sv symbol synopfragment synopfragmentref synopsis \\\n"
"systemitem table tbody term tertiary tertiaryie textdata textobject tfoot \\\n"
"tgroup thead tip title titleabbrev toc tocback tocchap tocentry tocfront \\\n"
"toclevel1 toclevel2 toclevel3 toclevel4 toclevel5 tocpart token trademark \\\n"
"type ulink userinput varargs variablelist varlistentry varname videodata \\\n"
"videoobject void volumenum warning wordasword xref year\n"
"\n"
"docbook.attributes=\\\n"
"arch condition conformance id lang os remap role revision revisionflag security \\\n"
"userlevel vendor xreflabel \\\n"
"status label endterm linkend space width\n"
"\n"
"keywordclass.docbook=\\\n"
"$(docbook.elements42) $(docbook.attributes)\n"
"\n"
"keywordclass.mako=$(keywordclass.hypertext)\n"
"keywords.$(file.patterns.mako)=$(keywordclass.hypertext)\n"
"keywords2.$(file.patterns.mako)=$(keywordclass.javascript)\n"
"keywords3.$(file.patterns.mako)=$(keywordclass.vb)\n"
"keywords4.$(file.patterns.mako)=$(keywordclass.python) include namespace inherit \\\n"
"call doc text page endclass endexcept endfinally endfor endif endtry endwhile\n"
"keywords5.$(file.patterns.mako)=$(keywordclass.php)\n"
"keywords6.$(file.patterns.mako)=ELEMENT DOCTYPE ATTLIST ENTITY NOTATION\n"
"\n"
"keywordclass.django= not in autoescape with \\\n"
"csrf_token cycle empty block endblock filter endfilter for endfor firstof \\\n"
"if endif ifchanged endifchanged ifequal endifequal include load now regroup spaceless \\\n"
"endspaceless ssi url widthratio add addslashes capfirst center cut date \\\n"
"default default_if_none dictsort dictsortreversed divisibleby escape escapejs \\\n"
"filesizeformat first fix_ampersands float_format force_escape get_digit \\\n"
"iriencode join last length length_is linebreaks linebreaksbr linenumbers ljust \\\n"
"lower make_list phone2numeric pluralize pprint random removetags rjust safe \\\n"
"safeseq slice slugify stringformat striptags time timesince timeuntil title \\\n"
"truncatewords truncatewords_html unordered_list upper urlencode urlize \\\n"
"urlizetrunc wordcount wordwrap yesno apnumber intcomma intword ordinal \\\n"
"naturalday lorem\n"
"\n"
"keywords.$(file.patterns.docbook)=$(keywordclass.docbook)\n"
"keywords6.$(file.patterns.docbook)=ELEMENT DOCTYPE ATTLIST ENTITY NOTATION\n"
"\n"
"word.characters.$(file.patterns.html)=$(chars.alpha)$(chars.numeric)_-\n"
"comment.stream.start.hypertext=<!--\n"
"comment.stream.end.hypertext=-->\n"
"comment.block.hypertext=//~\n"
"\n"
"keywords.$(file.patterns.xml)=\n"
"keywords6.$(file.patterns.xml)=ELEMENT DOCTYPE ATTLIST ENTITY NOTATION\n"
"\n"
"word.characters.$(file.patterns.xml)=$(chars.alpha)$(chars.numeric)_-\n"
"\n"
"keywords.$(file.patterns.vxml)=$(keywordclass.vxml)\n"
"keywords2.$(file.patterns.vxml)=$(keywordclass.javascript)\n"
"\n"
"\n"
"\n"
"word.characters.$(file.patterns.vxml)=$(chars.alpha)$(chars.numeric)_-\n"
"\n"
"\n"
"style.hypertext.0=fore:#000000,$(font.text)\n"
"style.hypertext.1=fore:#000080\n"
"style.hypertext.2=fore:#FF0000\n"
"style.hypertext.3=fore:#008080\n"
"style.hypertext.4=fore:#FF0000\n"
"style.hypertext.5=$(colour.number)\n"
"style.hypertext.6=$(colour.string)\n"
"style.hypertext.7=$(colour.string)\n"
"style.hypertext.8=fore:#800080\n"
"style.hypertext.9=fore:#808000,$(font.text.comment)\n"
"style.hypertext.10=fore:#800080,$(font.text)\n"
"style.hypertext.11=fore:#000080\n"
"style.hypertext.12=fore:#0000FF\n"
"style.hypertext.13=fore:#0000FF\n"
"style.hypertext.14=fore:#000080\n"
"style.hypertext.15=back:#FFFF00\n"
"style.hypertext.16=back:#FFDF00\n"
"style.hypertext.17=back:#FFDF00\n"
"style.hypertext.18=fore:#0000FF,back:#FFEFBF\n"
"style.hypertext.19=fore:#FF00FF,back:#FFEFFF\n"
"style.hypertext.20=fore:#000000,back:#FFFFD0\n"
"style.hypertext.21=fore:#000080,back:#EFEFFF\n"
"style.hypertext.22=fore:#000080,back:#EFEFFF,bold\n"
"style.hypertext.23=fore:#006600,back:#EFEFFF\n"
"style.hypertext.24=fore:#800000,back:#EFEFFF\n"
"style.hypertext.25=fore:#993300,back:#EFEFFF\n"
"style.hypertext.26=fore:#800000,back:#FF6666\n"
"style.hypertext.27=fore:#3366FF,back:#EFEFFF\n"
"style.hypertext.28=fore:#333333,back:#EFEFFF\n"
"style.hypertext.29=fore:#808000,back:#EFEFFF\n"
"style.hypertext.31=fore:#000066,back:#CCCCE0\n"
"style.hypertext.34=fore:#0000FF,notbold,$(font.text)\n"
"style.hypertext.35=fore:#FF0000,notbold,$(font.text)\n"
"\n"
"fontcolour.js=$(colour.embedded.js),$(font.js)\n"
"style.hypertext.40=fore:#7F7F00\n"
"style.hypertext.41=fore:#000000,bold,$(fontcolour.js),eolfilled\n"
"style.hypertext.42=$(colour.code.comment.box),$(fontcolour.js),eolfilled\n"
"style.hypertext.43=$(colour.code.comment.line),$(fontcolour.js)\n"
"style.hypertext.44=$(colour.code.comment.doc),bold,$(fontcolour.js),eolfilled\n"
"style.hypertext.45=$(colour.number),$(fontcolour.js)\n"
"style.hypertext.46=fore:#000000,$(fontcolour.js)\n"
"style.hypertext.47=$(colour.keyword),bold,$(fontcolour.js)\n"
"style.hypertext.48=$(colour.string),$(fontcolour.js)\n"
"style.hypertext.49=$(colour.string),$(fontcolour.js)\n"
"style.hypertext.50=$(colour.operator),bold,$(fontcolour.js)\n"
"style.hypertext.51=back:#BFBBB0,eolfilled\n"
"style.hypertext.52=back:#FFBBB0\n"
"\n"
"style.hypertext.55=fore:#7F7F00\n"
"style.hypertext.56=fore:#000000,bold,$(font.js),back:#DFDF7F,eolfilled\n"
"style.hypertext.57=fore:#007F00,$(font.js),back:#DFDF7F,eolfilled\n"
"style.hypertext.58=fore:#007F00,$(font.js),back:#DFDF7F\n"
"style.hypertext.59=fore:#7F7F7F,bold,$(font.js),back:#DFDF7F,eolfilled\n"
"style.hypertext.60=fore:#007F7F,$(font.js),back:#DFDF7F\n"
"style.hypertext.61=fore:#000000,$(font.js),back:#DFDF7F\n"
"style.hypertext.62=fore:#00007F,bold,$(font.js),back:#DFDF7F\n"
"style.hypertext.63=fore:#7F007F,$(font.js),back:#DFDF7F\n"
"style.hypertext.64=fore:#7F007F,$(font.js),back:#DFDF7F\n"
"style.hypertext.65=fore:#000000,bold,$(font.js),back:#DFDF7F\n"
"style.hypertext.66=back:#BFBBB0,eolfilled\n"
"style.hypertext.67=back:#FFBBB0\n"
"\n"
"style.hypertext.70=\n"
"style.hypertext.71=$(font.vbs),back:#EFEFFF,fore:#000000,eolfilled\n"
"style.hypertext.72=$(font.comment),back:#EFEFFF,fore:#008000,eolfilled\n"
"style.hypertext.73=$(font.vbs),back:#EFEFFF,fore:#008080,eolfilled\n"
"style.hypertext.74=$(font.vbs),back:#EFEFFF,fore:#000080,bold,eolfilled\n"
"style.hypertext.75=$(font.vbs),back:#EFEFFF,fore:#800080,eolfilled\n"
"style.hypertext.76=$(font.vbs),back:#EFEFFF,fore:#000080,eolfilled\n"
"style.hypertext.77=$(font.vbs),back:#7F7FFF,fore:#000080,eolfilled\n"
"\n"
"style.hypertext.80=\n"
"style.hypertext.81=$(font.vbs),back:#CFCFEF,fore:#000000,eolfilled\n"
"style.hypertext.82=$(font.comment),back:#CFCFEF,fore:#008000,eolfilled\n"
"style.hypertext.83=$(font.vbs),back:#CFCFEF,fore:#008080,eolfilled\n"
"style.hypertext.84=$(font.vbs),back:#CFCFEF,fore:#000080,bold,eolfilled\n"
"style.hypertext.85=$(font.vbs),back:#CFCFEF,fore:#800080,eolfilled\n"
"style.hypertext.86=$(font.vbs),back:#CFCFEF,fore:#000080,eolfilled\n"
"style.hypertext.87=$(font.vbs),back:#7F7FBF,fore:#000080,eolfilled\n"
"\n"
"style.hypertext.90=fore:#808080\n"
"style.hypertext.91=fore:#808080,back:#EFFFEF,eolfilled\n"
"style.hypertext.92=fore:#007F00,$(font.comment),back:#EFFFEF,eolfilled\n"
"style.hypertext.93=fore:#007F7F,back:#EFFFEF,eolfilled\n"
"style.hypertext.94=fore:#7F007F,$(font.monospace),back:#EFFFEF,eolfilled\n"
"style.hypertext.95=fore:#7F007F,$(font.monospace),back:#EFFFEF,eolfilled\n"
"style.hypertext.96=fore:#00007F,bold,back:#EFFFEF,eolfilled\n"
"style.hypertext.97=fore:#7F0000,back:#EFFFEF,eolfilled\n"
"style.hypertext.98=fore:#7F0000,back:#EFFFEF,eolfilled\n"
"style.hypertext.99=fore:#0000FF,bold,back:#EFFFEF,eolfilled\n"
"style.hypertext.100=fore:#007F7F,bold,back:#EFFFEF,eolfilled\n"
"style.hypertext.101=bold,back:#EFFFEF,eolfilled\n"
"style.hypertext.102=back:#EFFFEF,eolfilled\n"
"\n"
"style.hypertext.104=fore:#007F00,italics,back:#FFF8F8\n"
"\n"
"style.hypertext.105=fore:#808080\n"
"style.hypertext.106=fore:#808080,back:#CFEFCF,eolfilled\n"
"style.hypertext.107=fore:#007F00,$(font.comment),back:#CFEFCF,eolfilled\n"
"style.hypertext.108=fore:#007F7F,back:#CFEFCF,eolfilled\n"
"style.hypertext.109=fore:#7F007F,$(font.monospace),back:#CFEFCF,eolfilled\n"
"style.hypertext.110=fore:#7F007F,$(font.monospace),back:#CFEFCF,eolfilled\n"
"style.hypertext.111=fore:#00007F,bold,back:#CFEFCF,eolfilled\n"
"style.hypertext.112=fore:#7F0000,back:#CFEFCF,eolfilled\n"
"style.hypertext.113=fore:#7F0000,back:#CFEFCF,eolfilled\n"
"style.hypertext.114=fore:#0000FF,bold,back:#CFEFCF,eolfilled\n"
"style.hypertext.115=fore:#007F7F,bold,back:#CFEFCF,eolfilled\n"
"style.hypertext.116=bold,back:#CFEFCF,eolfilled\n"
"style.hypertext.117=back:#CFEFCF,eolfilled\n"
"\n"
"style.hypertext.118=fore:#000033,back:#FFF8F8,eolfilled\n"
"style.hypertext.119=fore:#007F00,back:#FFF8F8\n"
"style.hypertext.120=fore:#009F00,back:#FFF8F8\n"
"style.hypertext.121=fore:#7F007F,italics,back:#FFF8F8\n"
"style.hypertext.122=fore:#CC9900,back:#FFF8F8\n"
"style.hypertext.123=fore:#00007F,italics,back:#FFF8F8\n"
"style.hypertext.124=fore:#999999,$(font.comment),back:#FFF8F8\n"
"style.hypertext.125=fore:#666666,italics,$(font.comment),back:#FFF8F8\n"
"style.hypertext.126=fore:#007F00,italics,back:#FFF8F8\n"
"style.hypertext.127=fore:#000000,back:#FFF8F8\n"
"\n"
"\n"
"style.xml.0=fore:#000000,$(font.text)\n"
"style.xml.1=fore:#000080\n"
"style.xml.2=fore:#000080\n"
"style.xml.3=fore:#008080\n"
"style.xml.4=fore:#008080\n"
"style.xml.5=$(colour.number)\n"
"style.xml.6=$(colour.string)\n"
"style.xml.7=$(colour.string)\n"
"style.xml.8=fore:#800080\n"
"style.xml.9=fore:#808000\n"
"style.xml.10=fore:#800080,$(font.text)\n"
"style.xml.11=fore:#000080\n"
"style.xml.12=fore:#800080,bold\n"
"style.xml.13=fore:#800080,bold\n"
"style.xml.17=fore:#800000,back:#FFF0F0,$(font.text),eolfilled\n"
"style.xml.18=fore:#800000\n"
"style.xml.19=fore:#608060\n"
"style.xml.21=fore:#000080,back:#EFEFFF\n"
;
const char *props4 = 
"style.xml.22=fore:#000080,back:#EFEFFF,bold\n"
"style.xml.23=fore:#006600,back:#EFEFFF\n"
"style.xml.24=fore:#800000,back:#EFEFFF\n"
"style.xml.25=fore:#993300,back:#EFEFFF\n"
"style.xml.26=fore:#800000,back:#FF6666\n"
"style.xml.27=fore:#3366FF,back:#EFEFFF\n"
"style.xml.28=fore:#333333,back:#EFEFFF\n"
"style.xml.29=fore:#808000,back:#EFEFFF\n"
"style.xml.31=fore:#000066,back:#CCCCE0\n"
"braces.xml.style=31\n"
"\n"
"if PLAT_WIN\n"
"	command.go.$(file.patterns.web)=\"file://$(FilePath)\"\n"
"	command.go.subsystem.$(file.patterns.web)=2\n"
"if PLAT_GTK\n"
"	command.go.$(file.patterns.web)=firefox \"file://$(FilePath)\"\n"
"if PLAT_MAC\n"
"	command.go.$(file.patterns.web)=open \"file://$(FilePath)\"\n"
"	command.go.subsystem.$(file.patterns.web)=2\n"
"\n"
"command.go.$(file.patterns.php)=php -f \"$(FileNameExt)\"\n"
"command.compile.$(file.patterns.php)=php -l \"$(FileNameExt)\"\n"
"\n"
"file.patterns.inno=*.iss;*.isl\n"
"\n"
"filter.inno=Inno Setup (iss isl)|$(file.patterns.inno)|\n"
"\n"
"lexer.$(file.patterns.inno)=inno\n"
"\n"
"comment.block.inno=;~\n"
"\n"
"keywords.$(file.patterns.inno)=\\\n"
" code components custommessages dirs files icons ini installdelete \\\n"
" langoptions languages messages registry run setup types tasks \\\n"
" uninstalldelete uninstallrun _istool\n"
"\n"
"keywords2.$(file.patterns.inno)=\\\n"
" allowcancelduringinstall allownoicons allowrootdirectory allowuncpath \\\n"
" alwaysrestart alwaysshowcomponentslist alwaysshowdironreadypage \\\n"
" alwaysshowgrouponreadypage alwaysusepersonalgroup appcomments appcontact \\\n"
" appcopyright appid appmodifypath appmutex appname apppublisher \\\n"
" apppublisherurl appreadmefile appsupportphone appsupporturl appupdatesurl \\\n"
" appvername appversion appenddefaultdirname appenddefaultgroupname \\\n"
" architecturesallowed architecturesinstallin64bitmode backcolor backcolor2 \\\n"
" backcolordirection backsolid changesassociations changesenvironment \\\n"
" compression compressionthreads copyrightfontname copyrightfontsize \\\n"
" createappdir createuninstallregkey defaultdirname defaultgroupname \\\n"
" defaultuserinfoname defaultuserinfoorg defaultuserinfoserial dialogfontname \\\n"
" dialogfontsize dialogfontstandardheight direxistswarning disabledirpage \\\n"
" disablefinishedpage disableprogramgrouppage disablereadymemo \\\n"
" disablereadypage disablestartupprompt diskclustersize diskslicesize \\\n"
" diskspanning dontmergeduplicatefiles enabledirdoesntexistwarning encryption \\\n"
" extradiskspacerequired flatcomponentslist infoafterfile infobeforefile \\\n"
" internalcompresslevel languagecodepage languagedetectionmethod languageid \\\n"
" languagename licensefile mergeduplicatefiles messagesfile minversion \\\n"
" onlybelowversion outputbasefilename outputdir outputmanifestfile password \\\n"
" privilegesrequired reservebytes restartifneededbyrun righttoleft \\\n"
" setupiconfile setuplogging showcomponentsizes showlanguagedialog \\\n"
" showtaskstreelines showundisplayablelanguages signtool signeduninstaller \\\n"
" signeduninstallerdir slicesperdisk solidcompression sourcedir \\\n"
" terminalservicesaware timestamprounding timestampsinutc titlefontname \\\n"
" titlefontsize touchdate touchtime uninstalldisplayicon uninstalldisplayname \\\n"
" uninstallfilesdir uninstalliconfile uninstalllogmode \\\n"
" uninstallrestartcomputer uninstallstyle uninstallable \\\n"
" updateuninstalllogappname usepreviousappdir usepreviousgroup \\\n"
" useprevioussetuptype useprevioustasks useprevioususerinfo usesetupldr \\\n"
" userinfopage versioninfocompany versioninfocopyright versioninfodescription \\\n"
" versioninfoproductname versioninfoproductversion versioninfotextversion \\\n"
" versioninfoversion welcomefontname welcomefontsize windowresizable \\\n"
" windowshowcaption windowstartmaximized windowvisible wizardimagebackcolor \\\n"
" wizardimagefile wizardimagestretch wizardsmallimagebackcolor \\\n"
" wizardsmallimagefile wizardstyle\n"
"\n"
"keywords3.$(file.patterns.inno)=\\\n"
" afterinstall attribs beforeinstall check comment components copymode \\\n"
" description destdir destname excludes externalsize extradiskspacerequired \\\n"
" filename flags fontinstall groupdescription hotkey iconfilename iconindex \\\n"
" key languages minversion name onlybelowversion parameters permissions root \\\n"
" runonceid section source statusmsg string subkey tasks type types valuedata \\\n"
" valuename valuetype verb workingdir\n"
"\n"
"keywords4.$(file.patterns.inno)=\\\n"
" append define dim elif else emit endif endsub error expr file for if ifdef \\\n"
" ifexist ifndef ifnexist include insert pragma sub undef\n"
"\n"
"keywords5.$(file.patterns.inno)=\\\n"
" begin break case const continue do downto else end except finally for \\\n"
" function if of procedure repeat then to try until uses var while with\n"
"\n"
"keywords6.$(file.patterns.inno)=\n"
"\n"
"\n"
"style.inno.0=\n"
"style.inno.1=fore:#007F7F,$(font.comment)\n"
"style.inno.2=$(colour.keyword)\n"
"style.inno.3=$(colour.string)\n"
"style.inno.4=back:#FFFFC0\n"
"style.inno.5=$(colour.preproc)\n"
"style.inno.6=$(colour.preproc)\n"
"style.inno.7=fore:#007F7F,$(font.comment)\n"
"style.inno.8=$(colour.keyword)\n"
"style.inno.9=$(colour.keyword)\n"
"style.inno.10=$(colour.string)\n"
"style.inno.11=$(colour.char)\n"
"\n"
"\n"
"file.patterns.kix=*.kix\n"
"filter.kix=Kix-Script (kix)|$(file.patterns.kix)|\n"
"\n"
"lexer.$(file.patterns.kix)=kix\n"
"\n"
"keywords.$(file.patterns.kix)=? and beep big break call cd cls color cookie1 copy \\\n"
"	debug del dim display do until exit flushkb for each next function endfunction \\\n"
"	get gets global go gosub goto if else endif md or password play quit \\\n"
"	rd redim return run select case endselect set setl setm settime \\\n"
"	shell sleep small use while loop\n"
"\n"
"keywords2.$(file.patterns.kix)=abs addkey addprinterconnection addprogramgroup \\\n"
"	addprogramitem asc ascan at backupeventlog box cdbl chr cint cleareventlog \\\n"
"	close comparefiletimes createobject cstr dectohex delkey delprinterconnection \\\n"
"	delprogramgroup delprogramitem deltree delvalue dir enumgroup enumipinfo enumkey \\\n"
"	enumlocalgroup enumvalue execute exist existkey expandenvironmentvars fix \\\n"
"	formatnumber freefilehandle getdiskspace getfileattr getfilesize getfiletime \\\n"
"	getfileversion getobject iif ingroup instr instrrev int isdeclared join \\\n"
"	kbhit keyexist lcase left len loadhive loadkey logevent logoff ltrim \\\n"
"	memorysize messagebox open readline readprofilestring readtype readvalue \\\n"
"	redirectoutput right rnd round rtrim savekey sendkeys sendmessage setascii \\\n"
"	setconsole setdefaultprinter setfileattr setfocus setoption setsystemstate \\\n"
"	settitle setwallpaper showprogramgroup shutdown sidtoname split srnd substr \\\n"
"	trim ubound ucase unloadhive val vartype vartypename writeline \\\n"
"	writeprofilestring writevalue\n"
"\n"
"keywords3.$(file.patterns.kix)=address build color comment cpu crlf csd curdir \\\n"
"	date day domain dos error fullname homedir homedrive homeshr hostname \\\n"
"	inwin ipaddress0 ipaddress1 ipaddress2 ipaddress3 kix lanroot ldomain \\\n"
"	ldrive lm logonmode longhomedir lserver maxpwage mdayno mhz monthno \\\n"
"	month msecs pid primarygroup priv productsuite producttype pwage ras \\\n"
"	result rserver scriptdir scriptexe scriptname serror sid site startdir \\\n"
"	syslang ticks time userid userlang wdayno wksta wuserid ydayno year\n"
"\n"
"comment.block.kix=;\n"
"comment.block.at.line.start.kix=1\n"
"\n"
"style.kix.0=fore:#000000,$(font.vbs)\n"
"style.kix.1=$(colour.code.comment.line),$(font.code.comment.line)\n"
"style.kix.2=$(colour.string)\n"
"style.kix.3=$(colour.string)\n"
"style.kix.4=$(colour.number)\n"
"style.kix.5=fore:#B00040\n"
"style.kix.6=$(colour.preproc)\n"
"style.kix.7=$(colour.keyword),bold\n"
"style.kix.8=$(colour.keyword)\n"
"style.kix.9=$(colour.operator),bold\n"
"\n"
"command.go.*.kix=kix32 $(FileName)\n"
"\n"
"tab.size.$(file.patterns.kix)=6\n"
"indent.size.$(file.patterns.kix)=3\n"
"use.tabs.$(file.patterns.kix)=1\n"
"\n"
"statement.indent.$(file.patterns.kix)=7 if else for do while function case\n"
"\n"
"file.patterns.latex=*.tex;*.sty\n"
"\n"
"filter.latex=LaTeX (tex sty)|$(file.patterns.latex)|\n"
"\n"
"lexer.$(file.patterns.latex)=latex\n"
"\n"
"style.latex.0=fore:#000000\n"
"style.latex.1=fore:#AA0000,bold\n"
"style.latex.2=fore:#880088,bold\n"
"style.latex.3=fore:#0000FF\n"
"style.latex.4=fore:#00AA00\n"
"style.latex.5=fore:#880088,bold\n"
"style.latex.6=fore:#0000AA\n"
"style.latex.7=fore:#00AA00\n"
"style.latex.8=fore:#666666\n"
"style.latex.9=fore:#AA6600,bold\n"
"style.latex.10=fore:#AAAA00\n"
"style.latex.11=fore:#FF9900\n"
"style.latex.12=fore:#ffffff,back:#ff0000\n"
"\n"
"command.compile.*.tex=latex $(FileNameExt)\n"
"command.build.*.tex=dvips -f $(FileName).dvi > $(FileName).ps\n"
"command.go.*.tex=dvips $(FileName).dvi\n"
"\n"
"command.name.0.*.tex=View\n"
"command.0.*.tex=xdvi $(FileName).dvi\n"
"command.name.1.*.tex=View PS\n"
"command.1.*.tex=gv $(FileName).ps\n"
"\n"
"file.patterns.lisp=*.lsp;*.lisp\n"
"\n"
"filter.lisp=LISP (lsp lisp)|$(file.patterns.lisp)|\n"
"\n"
"file.patterns.scheme=*.scm;*.smd;*.ss\n"
"filter.scheme=Scheme (scm smd)|$(file.patterns.scheme)|\n"
"\n"
"lexer.$(file.patterns.lisp)=lisp\n"
"lexer.$(file.patterns.scheme)=lisp\n"
"\n"
"keywords.$(file.patterns.lisp)= not defun + - * / = < > <= >= princ \\\n"
"eval apply funcall quote identity function complement backquote lambda set setq setf \\\n"
"defun defmacro gensym make symbol intern symbol name symbol value symbol plist get \\\n"
"getf putprop remprop hash make array aref car cdr caar cadr cdar cddr caaar caadr cadar \\\n"
"caddr cdaar cdadr cddar cdddr caaaar caaadr caadar caaddr cadaar cadadr caddar cadddr \\\n"
"cdaaar cdaadr cdadar cdaddr cddaar cddadr cdddar cddddr cons list append reverse last nth \\\n"
"nthcdr member assoc subst sublis nsubst  nsublis remove length list length \\\n"
"mapc mapcar mapl maplist mapcan mapcon rplaca rplacd nconc delete atom symbolp numberp \\\n"
"boundp null listp consp minusp zerop plusp evenp oddp eq eql equal cond case and or let l if prog \\\n"
"prog1 prog2 progn go return do dolist dotimes catch throw error cerror break \\\n"
"continue errset baktrace evalhook truncate float rem min max abs sin cos tan expt exp sqrt \\\n"
"random logand logior logxor lognot bignums logeqv lognand lognor \\\n"
"logorc2 logtest logbitp logcount integer length nil\n"
"\n"
"word.chars.lisp=$(chars.alpha)$(chars.numeric)_-<>.#+@$%^&=*!?\n"
"word.characters.$(file.patterns.lisp)=$(word.chars.lisp)\n"
"\n"
"keywords.$(file.patterns.scheme)= + - * / = < > <= >= => \\\n"
"abs acos and angle append apply asin assoc assoc assq assv atan \\\n"
"begin boolean? \\\n"
"caar cadr call-with-current-continuation call/cc \\\n"
"call-with-input-file call-with-output-file call-with-values \\\n"
"car cdr \\\n"
"caar cadr cdar cddr \\\n"
"caaar caadr cadar caddr cdaar cdadr cddar cdddr \\\n"
"caaaar caaadr caadar caaddr cadaar cadadr caddar cadddr \\\n"
"cdaaar cdaadr cdadar cdaddr cddaar cddadr cdddar cddddr \\\n"
"case ceiling char->integer \\\n"
"char-alphabetic? char-ci<=? char-ci<? char-ci=? char-ci>=? char-ci>? \\\n"
"char-downcase char-lower-case? char-numeric? char-ready? \\\n"
"char-upcase char-upper-case? char-whitespace? \\\n"
"char<=? char<? char=? char>=? char>? char? \\\n"
"close-input-port close-output-port complex? cond cons cos \\\n"
"current-input-port current-output-port \\\n"
"define define-syntax delay denominator display do dynamic-wind \\\n"
"else eof-object? eq? equal? eqv? eval even? exact->inexact exact? \\\n"
"exp expt \\\n"
"floor for-each force \\\n"
"gcd \\\n"
"if imag-part inexact->exact inexact? input-port? integer->char integer? interaction-environment \\\n"
"lambda lcm length let let* let-syntax letrec letrec-syntax \\\n"
"list list->string list->vector list-ref list-tail list? load log \\\n"
"magnitude make-polar make-rectangular make-string make-vector \\\n"
"map max member memq memv min modulo \\\n"
"negative? newline not null-environment null? number->string number? numerator \\\n"
"odd? open-input-file open-output-file or output-port? \\\n"
"pair? peek-char input-port? output-port? positive? procedure? \\\n"
"quasiquote quote quotient \\\n"
"rational? rationalize read read-char real-part real? remainder reverse round \\\n"
"scheme-report-environment set! set-car! set-cdr! sin sqrt string \\\n"
"string->list string->number string->symbol string-append \\\n"
"string-ci<=? string-ci<? string-ci=? string-ci>=? string-ci>? \\\n"
"string-copy string-fill! string-length string-ref string-set! \\\n"
"string<=? string<? string=? string>=? string>? string? \\\n"
"substring symbol->string symbol? syntax-rules \\\n"
"transcript-off transcript-on truncate \\\n"
"unquote unquote-splicing \\\n"
"values vector vector->list vector-fill! vector-length vector-ref vector-set! vector? \\\n"
"with-input-from-file with-output-to-file write write-char \\\n"
"zero?\n"
"\n"
"word.chars.scheme=$(chars.alpha)$(chars.numeric)!$%&*/:<=>?^_~+-.@\n"
"word.characters.$(file.patterns.scheme)=$(word.chars.scheme)\n"
"\n"
"\n"
"comment.block.lisp=;\n"
"comment.box.start.lisp=;;\n"
"comment.box.middle.lisp=;;\n"
"comment.box.end.lisp=;;\n"
"\n"
"\n"
"\n"
"style.lisp.32=$(font.base)\n"
"style.lisp.0=fore:#808080\n"
"style.lisp.1=$(colour.code.comment.box),$(font.code.comment.box)\n"
"style.lisp.2=$(colour.number)\n"
"style.lisp.3=$(colour.keyword),bold\n"
"style.lisp.6=$(colour.string)\n"
"style.lisp.10=$(colour.operator),bold\n"
"style.lisp.9=\n"
"style.lisp.8=fore:#000000,font:Verdana,size:9,back:#fefecc,eolfilled\n"
"style.lisp.34=fore:#0000FF,bold\n"
"style.lisp.35=fore:#FF0000,bold\n"
"braces.lisp.style=10\n"
"\n"
"command.go.$(file.patterns.scheme)=c:\\tools\\gambit\\gsi.exe -f $(FilePath)\n"
"command.go.subsystem.$(file.patterns.scheme)=0\n"
"file.patterns.lot=*.lot\n"
"\n"
"filter.lot=Lot (lot)|$(file.patterns.lot)|\n"
"\n"
"lexer.$(file.patterns.lot)=lot\n"
"\n"
"word.characters.$(file.patterns.lot)=$(chars.alpha)$(chars.numeric)\n"
"\n"
"style.lot.0=fore:#000000\n"
"style.lot.1=back:#00F0FF,eolfilled\n"
"style.lot.2=back:#FFFF00,eolfilled\n"
" style.lot.3=fore:#FFFFFF,back:#0000FF,bold,eolfilled\n"
" style.lot.4=back:#00FF00,eolfilled\n"
"style.lot.5=back:#FF0000,eolfilled,bold\n"
"style.lot.6=back:#0000FF,bold,eolfilled\n"
"\n"
"file.patterns.lout=*.lt\n"
"\n"
"filter.lout=Lout (lt)|*.lt|\n"
"\n"
"lexer.$(file.patterns.lout)=lout\n"
"\n"
"keywords.$(file.patterns.lout)= \\\n"
"@OptGall @FontDef @Family @Face @Name @Metrics @ExtraMetrics \\\n"
"@Mapping @Recode @Filter @FilterIn @FilterOut @FilterErr \\\n"
"@Common @Rump @Meld @Insert @OneOf @Next @Plus @Minus @Wide \\\n"
"@High @HShift @VShift @BeginHeaderComponent @EndHeaderComponent \\\n"
"@SetHeaderComponent @ClearHeaderComponent @OneCol @OneRow \\\n"
"@HMirror @VMirror @HScale @VScale @HCover @VCover @Scale \\\n"
"@KernShrink @HContract @VContract @HLimited @VLimited @HExpand \\\n"
"@VExpand @StartHVSpan @StartHSpan @StartVSpan @HSpan @VSpan \\\n"
"@PAdjust @HAdjust @VAdjust @Rotate @Background @IncludeGraphic \\\n"
"@SysIncludeGraphic @Graphic @LinkSource @LinkDest @URLLink \\\n"
"@PlainGraphic @Verbatim @RawVerbatim @Case @Yield @BackEnd \\\n"
"@Char @Font @Space @YUnit @ZUnit @Break @Underline @SetColour \\\n"
"@SetColor @SetUnderlineColour @SetUnderlineColor @SetTexture \\\n"
"@Outline @Language @CurrLang @CurrFamily @CurrFace @CurrYUnit \\\n"
"@CurrZUnit @LEnv @@A @@B @@C @@D @@E @LClos @@V @LUse @LEO \\\n"
"@Open @Use @NotRevealed @Tagged @Database @SysDatabase \\\n"
"@Include @SysInclude @IncludeGraphicRepeated \\\n"
"@SysIncludeGraphicRepeated @PrependGraphic @SysPrependGraphic \\\n"
"@Target @Null @PageLabel @Galley @ForceGalley @LInput @Split \\\n"
"@Tag @Key @Optimize @Merge @Enclose @Begin @End @Moment \\\n"
"@Second @Minute @Hour @Day @Month @Year @Century @WeekDay \\\n"
"@YearDay @DaylightSaving @SetContext @GetContext\n"
"\n"
"keywords2.$(file.patterns.lout)= &&& && & ^// ^/ ^|| ^| ^& // / || |\n"
"\n"
"keywords3.$(file.patterns.lout)= def langdef force horizontally into \\\n"
"extend import export precedence associativity left right body macro \\\n"
"named compulsory following preceding foll_or_prec now\n"
"\n"
"comment.block.lout=#~\n"
"\n"
"indent.maintain.$(file.patterns.lout)=1\n"
"\n"
"\n"
"style.lout.32=$(font.base)\n"
"style.lout.0=fore:#808080\n"
"style.lout.1=$(colour.code.comment.line),$(font.code.comment.line)\n"
"style.lout.2=$(colour.number)\n"
"style.lout.3=$(colour.keyword),bold\n"
"style.lout.4=$(colour.keyword),bold\n"
"style.lout.5=$(colour.keyword),bold\n"
"style.lout.6=$(colour.keyword)\n"
"style.lout.7=$(colour.string)\n"
"style.lout.8=$(colour.operator),bold\n"
"style.lout.9=\n"
"style.lout.10=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled\n"
"braces.lout.style=8\n"
"\n"
"command.compile.$(file.patterns.lout)=lout \"$(FileNameExt)\" > \"$(FileName).ps\"\n"
"command.build.$(file.patterns.lout)=make\n"
"\n"
"if PLAT_WIN\n"
"	command.go.$(file.patterns.lout)=gview \"$(FileName).ps\"\n"
"\n"
"if PLAT_GTK\n"
"	command.go.$(file.patterns.lout)=gview32 \"$(FileName).ps\"\n"
"\n"
"\n"
"file.patterns.lua=*.lua\n"
"\n"
"shbang.lua=lua\n"
"\n"
"filter.lua=Lua (lua)|$(file.patterns.lua)|\n"
"\n"
"lexer.$(file.patterns.lua)=lua\n"
"\n"
"word.chars.lua=$(chars.alpha)$(chars.numeric)$(chars.accented)_%\n"
"word.characters.$(file.patterns.lua)=$(word.chars.lua)\n"
"\n"
"\n"
"keywordclass.lua4=\\\n"
"and break do else elseif \\\n"
"end for function if in \\\n"
"local nil not or repeat \\\n"
"return then until while\n"
"\n"
"keywordclass2.lua4=\\\n"
"_ALERT assert call collectgarbage copytagmethods \\\n"
"dofile dostring error foreach foreachi \\\n"
"gcinfo getglobal getn gettagmethod globals \\\n"
"newtag next print rawget rawset \\\n"
"setglobal settag settagmethod sort tag \\\n"
"tonumber tostring tinsert tremove type \\\n"
"_VERSION _ERRORMESSAGE\n"
"\n"
"keywordclass3.lua4=\\\n"
"strbyte strchar strfind strlen strlower \\\n"
"strrep strsub strupper format gsub \\\n"
"abs acos asin atan atan2 \\\n"
"ceil cos deg exp floor \\\n"
"log log10 max min mod \\\n"
"rad sin sqrt tan frexp \\\n"
"ldexp random randomseed PI\n"
"\n"
"keywordclass4.lua4=\\\n"
"openfile closefile readfrom writeto appendto \\\n"
"remove rename flush seek tmpname read write \\\n"
"clock date execute exit getenv setlocale \\\n"
"_INPUT _OUTPUT _STDIN _STDOUT _STDERR -- file descriptors\n"
"\n"
"keywordclass5.lua4=\\\n"
"getinfo getlocal setlocal setcallhook setlinehook\n"
"\n"
"\n"
"keywordclass.lua50=$(keywordclass.lua4) false true\n"
"\n"
"keywordclass2.lua5=\\\n"
"assert collectgarbage dofile error _G \\\n"
"getmetatable ipairs loadfile next pairs \\\n"
"pcall print rawequal rawget rawset \\\n"
"setmetatable tonumber tostring type _VERSION \\\n"
"xpcall string table math coroutine io os debug\n"
"\n"
"keywordclass2.lua50=$(keywordclass2.lua5) \\\n"
"getfenv gcinfo loadlib loadstring require \\\n"
"setfenv unpack _LOADED LUA_PATH _REQUIREDNAME\n"
"\n"
"keywordclass3.lua5=\\\n"
"string.byte string.char string.dump string.find string.format \\\n"
"string.gsub string.len string.lower string.rep string.sub string.upper \\\n"
"table.concat table.insert table.remove table.sort \\\n"
"math.abs math.acos math.asin math.atan math.atan2 \\\n"
"math.ceil math.cos math.deg math.exp math.floor \\\n"
"math.frexp math.ldexp math.log math.max math.min \\\n"
"math.pi math.pow math.rad math.random math.randomseed \\\n"
"math.sin math.sqrt math.tan\n"
"\n"
"keywordclass3.lua50=$(keywordclass3.lua5) \\\n"
"string.gfind \\\n"
"table.foreach table.foreachi table.getn table.setn \\\n"
"math.mod math.log10\n"
"\n"
"keywordclass4.lua50=\\\n"
"coroutine.create coroutine.resume coroutine.status coroutine.wrap coroutine.yield \\\n"
"io.close io.flush io.input io.lines io.open \\\n"
"io.output io.read io.tmpfile io.type io.write \\\n"
"io.stdin io.stdout io.stderr \\\n"
"os.clock os.date os.difftime os.execute os.exit \\\n"
"os.getenv os.remove os.rename os.setlocale os.time \\\n"
"os.tmpname\n"
"\n"
"keywordclass5.lua50=\\\n"
"debug.debug debug.gethook debug.getinfo debug.getlocal debug.getupvalue \\\n"
"debug.setlocal debug.setupvalue debug.sethook debug.traceback\n"
"\n"
"\n"
"keywordclass.lua51=$(keywordclass.lua50)\n"
"\n"
"keywordclass2.lua51=$(keywordclass2.lua5) \\\n"
"getfenv load loadstring select \\\n"
"setfenv unpack package\n"
"\n"
"keywordclass3.lua51=$(keywordclass3.lua5) \\\n"
"string.gmatch string.match string.reverse \\\n"
"table.maxn \\\n"
"math.cosh math.fmod math.huge math.log10 math.modf \\\n"
"math.sinh math.tanh\n"
"\n"
"keywordclass4.package=\\\n"
"require package.cpath package.loaded \\\n"
"package.loadlib package.path package.preload\n"
"\n"
"keywordclass4.lua51=$(keywordclass4.lua50) \\\n"
"coroutine.running io.popen \\\n"
"module package.loaders package.seeall \\\n"
"$(keywordclass4.package)\n"
"\n"
"keywordclass5.lua51=$(keywordclass5.lua50) \\\n"
"debug.getfenv debug.getmetatable debug.getregistry debug.setfenv debug.setmetatable\n"
"\n"
"\n"
"keywordclass.lua52=$(keywordclass.lua50) goto\n"
"\n"
"keywordclass2.lua52=$(keywordclass2.lua5) \\\n"
"load rawlen select package bit32 _ENV\n"
"\n"
"keywordclass3.bit32=\\\n"
"bit32.arshift bit32.band bit32.bnot bit32.bor bit32.btest \\\n"
"bit32.bxor bit32.extract bit32.replace bit32.lrotate bit32.lshift \\\n"
"bit32.rrotate bit32.rshift\n"
"\n"
"keywordclass3.lua52=$(keywordclass3.lua5) \\\n"
"string.gmatch string.match string.reverse \\\n"
"table.pack table.unpack \\\n"
"math.cosh math.fmod math.huge math.modf math.sinh math.tanh \\\n"
"$(keywordclass3.bit32)\n"
"\n"
"keywordclass4.lua52=$(keywordclass4.lua50) \\\n"
"coroutine.running io.popen \\\n"
"package.config package.searchers package.searchpath \\\n"
"$(keywordclass4.package)\n"
"\n"
"keywordclass5.lua52=$(keywordclass5.lua50) \\\n"
"debug.getmetatable debug.getregistry debug.setmetatable \\\n"
"debug.getuservalue debug.setuservalue debug.upvalueid debug.upvaluejoin\n"
"\n"
"\n"
"keywordclass.lua5x=$(keywordclass.lua52)\n"
"\n"
"keywordclass2.lua5x=$(keywordclass2.lua5) \\\n"
"getfenv gcinfo load loadlib loadstring \\\n"
"require select setfenv unpack \\\n"
"_LOADED LUA_PATH _REQUIREDNAME \\\n"
"package rawlen package bit32 _ENV\n"
"\n"
"keywordclass3.lua5x=$(keywordclass3.lua5) \\\n"
"string.gfind string.gmatch string.match string.reverse \\\n"
"table.foreach table.foreachi table.getn table.setn \\\n"
"table.maxn table.pack table.unpack \\\n"
"math.cosh math.fmod math.huge math.log10 math.modf \\\n"
"math.mod math.sinh math.tanh \\\n"
"$(keywordclass3.bit32)\n"
"\n"
"keywordclass4.lua5x=$(keywordclass4.lua50) \\\n"
"coroutine.running io.popen \\\n"
"module package.loaders package.seeall \\\n"
"package.config package.searchers package.searchpath \\\n"
"$(keywordclass4.package)\n"
"\n"
"keywordclass5.lua5x=$(keywordclass5.lua50) \\\n"
"debug.getfenv debug.getmetatable debug.getregistry debug.setfenv debug.setmetatable \\\n"
"debug.getuservalue debug.setuservalue debug.upvalueid debug.upvaluejoin\n"
"\n"
"keywords.$(file.patterns.lua)=$(keywordclass.lua5x)\n"
"keywords2.$(file.patterns.lua)=$(keywordclass2.lua5x)\n"
"keywords3.$(file.patterns.lua)=$(keywordclass3.lua5x)\n"
"keywords4.$(file.patterns.lua)=$(keywordclass4.lua5x)\n"
"\n"
"\n"
"indent.maintain.$(file.patterns.lua)=1\n"
"\n"
"comment.block.lua=--~\n"
"comment.block.at.line.start.lua=1\n"
"\n"
"\n"
"style.lua.32=$(font.code.base),fore:#000000\n"
"style.lua.0=fore:#FF0000\n"
"style.lua.1=$(colour.code.comment.box),$(font.code.comment.box),back:#D0F0F0,eolfilled\n"
"style.lua.2=$(colour.code.comment.line),$(font.code.comment.line)\n"
"style.lua.3=$(colour.notused),$(font.notused)\n"
"style.lua.4=$(colour.number)\n"
"style.lua.5=$(colour.keyword)\n"
"style.lua.6=$(colour.string)\n"
"style.lua.7=$(colour.char)\n"
"style.lua.8=$(colour.string),$(font.code.comment.box),back:#E0FFFF\n"
"style.lua.9=$(colour.preproc)\n"
"style.lua.10=$(colour.operator)\n"
"style.lua.11=\n"
"style.lua.12=back:#E0C0E0,eolfilled\n"
"style.lua.13=$(style.lua.5),back:#F5FFF5\n"
"style.lua.14=$(style.lua.5),back:#F5F5FF\n"
"style.lua.15=$(style.lua.5),back:#FFF5F5\n"
"style.lua.16=$(style.lua.5),back:#FFF5FF\n"
"style.lua.17=$(style.lua.5),back:#FFFFF5\n"
"style.lua.18=$(style.lua.5),back:#FFA0A0\n"
"style.lua.19=$(style.lua.5),back:#FFF5F5\n"
"style.lua.20=fore:#7F7F00\n"
"braces.lua.style=10\n"
"\n"
"command.compile.*.lua=luac5.1 -o \"$(FileName).luc\" \"$(FileNameExt)\"\n"
"command.go.*.lua=lua5.1 \"$(FileNameExt)\"\n"
"\n"
"DEFAULT_M_LEXER_OCTAVE=1\n"
"DEFAULT_M_LEXER_MATLAB=0\n"
"\n"
"\n"
"file.patterns.octave=*.m.octave\n"
"	#~ file.patterns.octave=*.m;$(file.patterns.octave)\n"
"file.patterns.matlab=*.m;*.m.octave\n"
"\n"
"filter.octave=Octave (m)|$(file.patterns.octave)|\n"
"\n"
"lexer.$(file.patterns.octave)=octave\n"
"\n"
"keywordclass.octave=\\\n"
"break \\\n"
"case \\\n"
"catch \\\n"
"continue \\\n"
"do \\\n"
"else \\\n"
"elseif \\\n"
"end \\\n"
"end_unwind_protect \\\n"
"endfor \\\n"
"endif \\\n"
"endswitch \\\n"
"endwhile \\\n"
"for \\\n"
"function endfunction \\\n"
"global \\\n"
"if \\\n"
"otherwise \\\n"
"persistent \\\n"
"return \\\n"
"switch \\\n"
"try \\\n"
"until \\\n"
"unwind_protect \\\n"
"unwind_protect_cleanup \\\n"
"while\n"
"\n"
"keywords.$(file.patterns.octave)=$(keywordclass.octave)\n"
"\n"
"comment.block.octave=#\n"
"\n"
"style.octave.0=fore:#000000\n"
"style.octave.1=$(colour.code.comment.line),$(font.code.comment.line)\n"
"style.octave.2=$(colour.preproc)\n"
"style.octave.3=$(colour.number)\n"
"style.octave.4=$(colour.keyword),bold\n"
"style.octave.5=$(colour.string)\n"
"style.octave.8=$(colour.string)\n"
"style.octave.6=$(colour.operator),bold\n"
"style.octave.7=\n"
"\n"
"\n"
"file.patterns.matlab=*.m.matlab\n"
"	#~ file.patterns.matlab=*.m;$(file.patterns.matlab)\n"
"filter.matlab=Matlab (m)|$(file.patterns.matlab)|\n"
"\n"
"lexer.$(file.patterns.matlab)=matlab\n"
"\n"
"keywordclass.matlab=break case catch continue else elseif end for function \\\n"
"global if otherwise persistent return switch try while\n"
"\n"
"keywords.$(file.patterns.matlab)=$(keywordclass.matlab)\n"
"\n"
"comment.block.matlab=%~\n"
"\n"
"style.matlab.0=fore:#000000\n"
"style.matlab.1=$(colour.code.comment.line),$(font.code.comment.line)\n"
"style.matlab.2=$(colour.preproc)\n"
"style.matlab.3=$(colour.number)\n"
"style.matlab.4=$(colour.keyword),bold\n"
"style.matlab.5=$(colour.string)\n"
"style.matlab.8=$(colour.string)\n"
"style.matlab.6=$(colour.operator),bold\n"
"style.matlab.7=\n"
"\n"
"\n"
"\n"
"file.patterns.metapost=*.mp;*.mpx\n"
"file.patterns.metafun=*.mp;*.mpx;*.mpy\n"
"\n"
"filter.metapost=MetaPost|$(file.patterns.metapost)|\n"
"filter.metafun=MetaFun|$(file.patterns.metafun)|\n"
"\n"
"lexer.$(file.patterns.metapost)=metapost\n"
"lexer.$(file.patterns.metafun)=metapost\n"
"\n"
"\n"
"command.compile.$(file.patterns.metapost)=\n"
"command.build.$(file.patterns.metapost)=mpost $(FileNameExt)\n"
"command.go.$(file.patterns.metapost)=gv $(FileName).1\n"
"\n"
"command.compile.$(file.patterns.metafun)=\n"
"command.build.$(file.patterns.metafun)=texexec --mptex $(FileNameExt)\n"
"command.go.$(file.patterns.metafun)=gv $(FileName).1\n"
"\n"
"command.0.$(file.patterns.metapost)=\n"
"command.1.$(file.patterns.metapost)=\n"
"command.2.$(file.patterns.metapost)=\n"
"command.3.$(file.patterns.metapost)=\n"
"command.4.$(file.patterns.metapost)=\n"
"command.5.$(file.patterns.metapost)=\n"
"command.6.$(file.patterns.metapost)=\n"
"command.7.$(file.patterns.metapost)=\n"
"command.8.$(file.patterns.metapost)=\n"
"command.9.$(file.patterns.metapost)=\n"
"\n"
"command.0.$(file.patterns.metafun)=\n"
"command.1.$(file.patterns.metafun)=\n"
"command.2.$(file.patterns.metafun)=\n"
"command.3.$(file.patterns.metafun)=\n"
"command.4.$(file.patterns.metafun)=\n"
"command.5.$(file.patterns.metafun)=\n"
"command.6.$(file.patterns.metafun)=\n"
"command.7.$(file.patterns.metafun)=\n"
"command.8.$(file.patterns.metafun)=\n"
"command.9.$(file.patterns.metafun)=\n"
"\n"
"\n"
"style.metapost.0=fore:#3F3F3F\n"
"style.metapost.1=fore:#007F7F\n"
"style.metapost.2=fore:#7F0000\n"
"style.metapost.3=fore:#7F7F00\n"
"style.metapost.4=fore:#007F00\n"
"style.metapost.5=fore:#000000\n"
"style.metapost.6=fore:#007F00,italics\n"
"\n"
"style.metapost.34=fore:#00007F\n"
"style.metapost.35=fore:#7F007F\n"
"\n"
"\n"
"comment.block.metapost=%\n"
"comment.block.at.line.start.metapost=1\n"
"\n"
"\n"
"lexer.metapost.interface.default=1\n"
"\n"
"\n"
"lexer.metapost.comment.process=0\n"
"\n"
"\n"
"keywordclass.metapost.tex=\\\n"
"    btex verbatimtex etex\n"
"\n"
"keywordclass.metapost.primitives=\\\n"
"    charcode day linecap linejoin miterlimit month pausing \\\n"
"    prologues showstopping time tracingcapsules tracingchoices \\\n"
"    tracingcommands tracingequations tracinglostchars \\\n"
"    tracingmacros tracingonline tracingoutput tracingrestores \\\n"
"    tracingspecs tracingstats tracingtitles truecorners \\\n"
"    warningcheck year \\\n"
"    false nullpicture pencircle true \\\n"
"    and angle arclength arctime ASCII bluepart boolean bot \\\n"
"    char color cosd cycle decimal directiontime floor fontsize \\\n"
"    greenpart hex infont intersectiontimes known length llcorner \\\n"
"    lrcorner makepath makepen mexp mlog normaldeviate not \\\n"
"    numeric oct odd or path pair pen penoffset picture point \\\n"
"    postcontrol precontrol redpart reverse rotated scaled \\\n"
"    shifted sind slanted sqrt str string subpath substring \\\n"
"    transform transformed ulcorner uniformdeviate unknown \\\n"
"    urcorner xpart xscaled xxpart xypart ypart yscaled yxpart \\\n"
"    yypart zscaled \\\n"
"    addto clip input interim let newinternal save setbounds \\\n"
"    shipout show showdependencies showtoken showvariable \\\n"
"    special \\\n"
"    begingroup endgroup of curl tension and controls \\\n"
"    reflectedabout rotatedaround interpath on off beginfig \\\n"
"    endfig def vardef enddef epxr suffix text primary secondary \\\n"
"    tertiary primarydef secondarydef tertiarydef top bottom \\\n"
"    ulft urt llft lrt randomseed also contour doublepath \\\n"
"    withcolor withpen dashed if else elseif fi for endfor forever exitif \\\n"
"    forsuffixes downto upto step until \\\n"
"    charlist extensible fontdimen headerbyte kern ligtable \\\n"
"    boundarychar chardp charext charht charic charwd designsize \\\n"
"    fontmaking charexists \\\n"
"    cullit currenttransform gfcorners grayfont hround \\\n"
"    imagerules lowres_fix nodisplays notransforms openit \\\n"
"    displaying currentwindow screen_rows screen_cols \\\n"
"    pixels_per_inch cull display openwindow numspecial \\\n"
"    totalweight autorounding fillin proofing tracingpens \\\n"
"    xoffset chardx granularity smoothing turningcheck yoffset \\\n"
"    chardy hppp tracingedges vppp \\\n"
"    extra_beginfig extra_endfig mpxbreak \\\n"
"    end\n"
"\n"
"keywordclass.metapost.plain=\\\n"
"    ahangle ahlength bboxmargin defaultpen defaultscale \\\n"
"    labeloffset background currentpen currentpicture cuttings \\\n"
"    defaultfont extra_beginfig extra_endfig \\\n"
"    beveled black blue bp butt cc cm dd ditto down epsilon \\\n"
"    evenly fullcircle green halfcircle identity in infinity left \\\n"
"    mitered mm origin pensquare pt quartercircle red right \\\n"
"    rounded squared unitsquare up white withdots \\\n"
"    abs bbox ceiling center cutafter cutbefore dir \\\n"
"    directionpoint div dotprod intersectionpoint inverse mod lft \\\n"
"    round rt unitvector whatever \\\n"
"    cutdraw draw drawarrow drawdblarrow fill filldraw drawdot \\\n"
"    loggingall pickup tracingall tracingnone undraw unfill \\\n"
"    unfilldraw \\\n"
"    buildcycle dashpattern decr dotlabel dotlabels drawoptions \\\n"
"    incr label labels max min thelabel z \\\n"
"    beginchar blacker capsule_end change_width \\\n"
"    define_blacker_pixels define_corrected_pixels \\\n"
"    define_good_x_pixels define_good_y_pixels \\\n"
"    define_horizontal_corrected_pixels define_pixels \\\n"
"    define_whole_blacker_pixels define_whole_pixels \\\n"
"    define_whole_vertical_blacker_pixels \\\n"
"    define_whole_vertical_pixels endchar extra_beginchar \\\n"
"    extra_endchar extra_setup font_coding_scheme\\\n"
"    font_extra_space\n"
"\n"
"keywordclass.metapost.all=\\\n"
"    $(keywordclass.metapost.tex) \\\n"
"    $(keywordclass.metapost.primitives) \\\n"
"    $(keywordclass.metapost.plain)\n"
"\n"
"keywordclass.metafun.all=\n"
"\n"
"keywords.$(file.patterns.metapost)=$(keywordclass.metapost.all)\n"
"\n"
"keywords.$(file.patterns.metafun)=$(keywordclass.metapost.all)\n"
"keywords2.$(file.patterns.metafun)=$(keywordclass.metafun.all)\n"
"\n"
"keywords4.$(file.patterns.metapost)=beginfig for verbatimtex def begingroup\n"
"if btex forsuffixes \\\n"
" vardef primarydef\n"
"keywords5.$(file.patterns.metapost)=etex fi endfig endgroup end endfor endif\n"
"enddef\n"
"\n"
"import metafun-scite.properties\n"
"\n"
"\n"
"\n"
"file.patterns.mmixal=*.mms\n"
"filter.mmixal=MMIXAL (mms)|$(file.patterns.mmixal)|\n"
"\n"
"lexer.$(file.patterns.mmixal)=mmixal\n"
"\n"
"opcodes=2ADDU 4ADDU 8ADDU 16ADDU ADD ADDU AND ANDNH ANDNL ANDNMH ANDNML \\\n"
"	BDIF BEV BN BNN BNP BNZ BOD BP BSPEC BYTE BZ CMP CMPU CSEV CSN CSNN CSNP CSNZ CSOD CSP CSWAP CSZ \\\n"
"	DIV DIVU ESPEC EXPR FADD FCMP FCMPE FDIV FEQL FEQLE FIX FIXU FLOT FLOTU FMUL FREM FSQRT FSUB FUN FUNE \\\n"
"	GET GETA GO GREG I_BIT INCH INCL INCMH INCML IS JMP LDA LDB LDBU LDHT LDO LDOU LDSF LDT LDTU LDUNC LDVTS LDW LDWU LOC LOCAL \\\n"
"	MOR MUL MULU MUX MXOR NAND NEG NEGU NNIX NOR NXOR O_BIT OCTA ODIF OR ORH ORL ORMH ORML ORN \\\n"
"	PBEV PBN PBNN PBNP PBNZ PBOD PBP PBZ POP PREFIX PREGO PRELD PREST PUSHGO PUSHJ PUT \\\n"
"	RESUME SAVE SET SETH SETL SETMH SETML SFLOT SFLOTU SL SLU SR SRU \\\n"
"	STB STBU STCO STHT STO STOU STSF STT STTU STUNC STW STWU SUB SUBU SWYM SYNC SYNCD TDIF TETRA TRAP TRIP UNSAVE \\\n"
"	WDIF WYDEXOR ZSEV ZSN ZSNN ZSNP ZSNZ ZSOD ZSP ZSZ\n"
"\n"
"special_register=rA rB rC rD rE rF rG rH rI rJ rK rL rM rN rO rP rQ rR rS rT rU rV rW rX rY rZ rBB rTT rWW rXX rYY rZZ\n"
"\n"
"predef_symbols=@ Text_Segment Data_Segment Pool_Segment Stack_Segment \\\n"
"	StdErr StdIn StdOut \\\n"
"	Fopen Fclose Fread Fwrite Fgets Fputs Fgetws Fputws Ftell Fseek \\\n"
"	TextRead TextWrite BinaryRead BinaryWrite BinaryReadWrite\n"
"\n"
"keywords.$(file.patterns.mmixal)=$(opcodes)\n"
"keywords2.$(file.patterns.mmixal)=$(special_register)\n"
"keywords3.$(file.patterns.mmixal)=$(predef_symbols)\n"
"\n"
"style.mmixal.0=\n"
"style.mmixal.1=$(colour.code.comment.line),$(font.code.comment.line)\n"
"style.mmixal.2=$(font.base)\n"
"style.mmixal.3=\n"
"style.mmixal.4=\n"
"style.mmixal.5=$(colour.keyword),bold\n"
"style.mmixal.6=$(colour.error)\n"
"style.mmixal.7=\n"
"style.mmixal.8=\n"
"style.mmixal.9=$(colour.number)\n"
"style.mmixal.10=$(font.base)\n"
"style.mmixal.11=$(colour.char)\n"
"style.mmixal.12=$(colour.string)\n"
"style.mmixal.13=fore:#7F007F\n"
"style.mmixal.14=fore:#7F0000\n"
"style.mmixal.15=bold\n"
"style.mmixal.16=fore:#FF7777\n"
"style.mmixal.17=$(colour.code.comment.line),$(font.code.comment.line)\n"
"\n"
"comment.block.mmixal=%\n"
"\n"
"tab.size.$(file.patterns.mmixal)=16\n"
"indent.size.$(file.patterns.mmixal)=16\n"
"\n"
"command.compile.$(file.patterns.mmixal)=mmixal -l $(FileName).map -b 200 $(FilePath)\n"
"command.go.$(file.patterns.mmixal)=mmix $(1) $(FileName).mmo\n"
"command.name.2.$(file.patterns.mmixal)=mmotype\n"
"command.2.$(file.patterns.mmixal)=mmotype $(FileName).mmo $(FileName).out\n"
"\n"
"file.patterns.m3=*.m3;*.mg;*.i3;*.ig\n"
"\n"
"filter.modula3=Modula-3 (m3 i3 mg ig)|$(file.patterns.m3)|\n"
"lexer.$(file.patterns.m3)=modula\n"
"\n"
"keywords.$(file.patterns.m3)=AND ANY ARRAY AS BEGIN BITS BRANDED BY CASE CONST\\\n"
"	DIV DO ELSE ELSIF END EVAL EXCEPT EXCEPTION EXIT EXPORTS FINALLY FOR FROM\\\n"
"	GENERIC IF IMPORT IN INTERFACE LOCK LOOP METHODS MOD MODULE NOT OBJECT OF\\\n"
"	OR OVERRIDES PROCEDURE RAISE RAISES READONLY RECORD REF REPEAT RETURN\\\n"
"	REVEAL ROOT SET THEN TO TRY TYPE TYPECASE UNSAFE UNTIL UNTRACED VALUE VAR\\\n"
"	WHILE WITH\n"
"\n"
"keywords2.$(file.patterns.m3)=ABS ADDRESS ADR ADRSIZE BITSIZE BOOLEAN BYTESIZE\\\n"
"	CARDINAL CEILING CHAR DEC DISPOSE EXTENDED FALSE FIRST FLOAT FLOOR INC\\\n"
"	INTEGER ISTYPE LAST LONGINT LONGREAL LOOPHOLE MAX MIN MUTEX NARROW NEW NIL\\\n"
"	NULL NUMBER ORD REAL REFANY ROUND SUBARRAY TEXT TRUE TRUNC TYPECODE VAL\\\n"
"	WIDECHAR\n"
"\n"
"keywords3.$(file.patterns.m3)= + < # = ; .. : - > { } | := <: * <= ( ) ^ , =>\\\n"
"	/ >= [ ] . &\n"
"\n"
"keywords4.$(file.patterns.m3)= EXTERNAL INLINE ASSERT TRACE FATAL UNUSED\\\n"
"	OBSOLETE NOWARN LINE PRAGMA\n"
"\n"
"keywords5.$(file.patterns.m3)= f n r t \\ \" '\n"
"\n"
"keywords6.$(file.patterns.m3)= author authors file brief date proc param result\n"
"\n"
"font.module.base=$(font.base)\n"
"font.modula.code=font:$(font.module.base),size:10\n"
"font.modula.comment=font:$(font.module.base),size:10,italics\n"
"font.modula.doxykey=font:$(font.module.base),size:10,bold,italics\n"
"font.modula.keywords=font:$(font.module.base),size:10,bold\n"
"font.modula.reserved=font:$(font.module.base),size:10\n"
"font.modula.strings=font:$(font.module.base),size:10,italics\n"
"font.modula.strspec=font:$(font.module.base),size:10,bold,italics\n"
"font.modula.char=font:$(font.module.base),size:10,italics\n"
"font.modula.charspec=font:$(font.module.base),size:10,bold,italics\n"
"font.modula.badstr=font:$(font.module.base),size:10,bold\n"
"\n"
"style.modula.0=fore:#383838,$(font.modula.code)\n"
"\n"
"style.modula.1=fore:#008000,$(font.modula.comment)\n"
"\n"
"style.modula.2=fore:#3F5FBF,$(font.modula.comment)\n"
"\n"
"style.modula.3=fore:#3F5FBF,$(font.modula.doxykey)\n"
"\n"
"style.modula.4=fore:#000080,$(font.modula.keywords)\n"
"\n"
"style.modula.5=fore:#0000C0,$(font.modula.reserved)\n"
"\n"
"style.modula.6=fore:#006600,$(font.modula.code)\n"
"\n"
"style.modula.7=fore:#3F0066,$(font.modula.code)\n"
"\n"
"style.modula.8=fore:#006665,$(font.modula.code)\n"
"\n"
"style.modula.9=fore:#FE9800,$(font.modula.strings)\n"
"\n"
"style.modula.10=fore:#E38800,$(font.modula.strspec)\n"
"\n"
"style.modula.11=fore:#FE9800,$(font.modula.char)\n"
"\n"
"style.modula.12=fore:#E38800,$(font.modula.charspec)\n"
"\n"
"style.modula.13=fore:#BF00B0,$(font.modula.code)\n"
"\n"
"style.modula.14=fore:#BF00B0,$(font.modula.code)\n"
"\n"
"style.modula.15=fore:#BF00B0,$(font.modula.keywords)\n"
"\n"
"style.modula.16=fore:#000080,$(font.modula.code)\n"
"\n"
"style.modula.17=fore:#FF0000,$(font.modula.badstr)\n"
"\n"
"\n"
"file.patterns.nimrod=*.nim\n"
"\n"
"shbang.nimrod=nim\n"
"\n"
"filter.nimrod=Nimrod (nim)|$(file.patterns.nimrod)|\n"
"\n"
"lexer.$(file.patterns.nimrod)=nimrod\n"
"\n"
"keywordclass.nimrod=addr and as asm \\\n"
"block break \\\n"
"case cast const continue converter \\\n"
"discard div \\\n"
"elif else end enum except exception \\\n"
"finally for from generic \\\n"
"if implies import in include is isnot iterator \\\n"
"lambda \\\n"
"macro method mod \\\n"
"nil not notin \\\n"
"object of or out \\\n"
"proc ptr \\\n"
"raise ref return \\\n"
"shl shr \\\n"
"template try tuple type \\\n"
"var \\\n"
"when where while with without \\\n"
"xor \\\n"
"yield\n"
"\n"
"keywords.$(file.patterns.nimrod)=$(keywordclass.nimrod)\n"
"\n"
"statement.indent.$(file.patterns.nimrod)=5 elif else except finally of \\\n"
"for if try while\n"
"\n"
"statement.lookback.$(file.patterns.nimrod)=0\n"
"block.start.$(file.patterns.nimrod)=\n"
"block.end.$(file.patterns.nimrod)=\n"
"\n"
"view.indentation.examine.*.nim=2\n"
"\n"
"\n"
"comment.block.nimrod=#~\n"
"\n"
"style.nimrod.0=fore:#808080\n"
"style.nimrod.1=fore:#007F00,$(font.comment)\n"
"style.nimrod.2=fore:#007F7F\n"
"style.nimrod.3=fore:#7F007F,$(font.monospace)\n"
"style.nimrod.4=fore:#7F007F,$(font.monospace)\n"
"style.nimrod.5=fore:#00007F,bold\n"
"style.nimrod.6=fore:#7F0000\n"
"style.nimrod.7=fore:#7F0000\n"
"style.nimrod.8=fore:#0000FF,bold\n"
"style.nimrod.9=fore:#007F7F,bold\n"
"style.nimrod.10=bold\n"
"style.nimrod.11=\n"
"style.nimrod.12=fore:#7F7F7F\n"
"style.nimrod.13=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled\n"
"style.nimrod.14=fore:#407090\n"
"style.nimrod.15=fore:#805000\n"
"style.nimrod.34=fore:#0000FF,bold\n"
"style.nimrod.35=fore:#FF0000,bold\n"
"braces.nimrod.style=10\n"
"\n"
"if PLAT_WIN\n"
"	command.go.*.nim=nimrod c -r \"$(FileNameExt)\"\n"
"	command.go.subsystem.*.nim=1\n"
"\n"
"if PLAT_GTK\n"
"	command.go.*.nim=nimrod c -r \"$(FileNameExt)\"\n"
"\n"
"command.name.1.*.nim=Syntax Check\n"
"command.1.*.nim=nimrod check $(FilePath)\n"
"\n"
"command.compile.*.nim=nimrod c \"$(FilePath)\"\n"
"\n"
"command.build.*.nim=nimrod --forcebuild \"$(FilePath)\"\n"
"command.build.subsystem.*.nim=1\n"
"\n"
"\n"
"\n"
"file.patterns.nncron=*.tab;*.spf\n"
"\n"
"lexer.$(file.patterns.nncron)=nncrontab\n"
"\n"
"filter.nncrontab=nnCron files (tab spf)|$(file.patterns.nncron)|\n"
"\n"
"word.characters.$(file.patterns.nncron)=$(chars.alpha)$(chars.numeric)%-\n"
"\n"
"comment.block.nncrontab=\\ \n"
"\n"
"\n"
"keywords.$(file.patterns.nncron)=\\\n"
"AGAIN ALLOT AND Action BEGIN CASE COMPARE CONSTANT CREATE DO Days ELSE \\\n"
"ENDCASE ENDOF EVAL-SUBST EVALUATE FALSE Hours I IF LEAVE LOOP Minutes \\\n"
"Months NOT OF OFF ON OR PAD REPEAT Rule SET THEN TRUE Time UNTIL VALUE \\\n"
"VARIABLE WHILE WeekDays Years \n"
"\n"
"keywords2.$(file.patterns.nncron)=\\\n"
"</JScript> </SCRIPT> </VBScript> <JScript> <VBScript> ACCESS-DATE BEEP \\\n"
"CALL_DIAL CALL_HANGUP CHAR CLIPBOARD CONSOLE CREATION-DATE CUR-DATE DATE- \\\n"
"DATE-INTERVAL DELAY DIAL DIR-CREATE DIR-DELETE DIR-EMPTY DIR-SIZE Day@ \\\n"
"Domain ERR-MSG EXIST FILE-ACCESS-DATE FILE-APPEND FILE-COPY FILE-CREATE \\\n"
"FILE-CREATION-DATE FILE-CROP FILE-DATE FILE-DELETE FILE-EMPTY FILE-EXIST \\\n"
"FILE-MOVE FILE-RENAME FILE-SIZE FILE-WRITE FILE-WRITE-DATE FOR-CHILD-WINDOWS \\\n"
"FOR-FILES FOR-WINDOWS FREE-SPACE GET-CUR-TIME GET-REG GET-VER GetTickCount \\\n"
"HANGUP HIDE-ICON HINT HINT-OFF HINT-POS HINT-SIZE HINTW HOST-EXIST Hour@ \\\n"
"IDLE INTERVAL IS-ARCHIVE IS-DIR IS-HIDDEN IS-READONLY IS-SYSTEM KILL LAUNCH \\\n"
"LOG LOGGEDON LOGOFF LogonBatch LogonInteractive LogonNetwork MOUSE-LBCLK \\\n"
"MOUSE-LBDCLK MOUSE-LBDN MOUSE-LBUP MOUSE-MOVE MOUSE-MOVER MOUSE-MOVEW \\\n"
"MOUSE-RBCLK MOUSE-RBDCLK MOUSE-RBDN MOUSE-RBUP MSG Min@ Mon@ \\\n"
"MonitorResponseTime NHOST-EXIST No ONLINE PAUSE PLAY-SOUND PLAY-SOUNDW \\\n"
"POP3-CHECK POWEROFF PROC-EXIST PROC-TIME PURGE-OLD PURGE-OLDA PURGE-OLDW \\\n"
"Password QSTART-APP QSTART-APPW QUERY QUIT RASDomain RASError RASPassword \\\n"
"RASPhone RASSecPassword RASUser RE-ALL RE-MATCH REBOOT REG-DELETE-KEY \\\n"
"REG-DELETE-VALUE REG-DWORD REG-SZ REMINDER RUN SEND-KEYS SEND-KEYS-DELAY \\\n"
"SHOW-ICON SHUTDOWN START-APP START-APPW START-QUIT START-TIME Sec@ \\\n"
"SecPassword THINT THINTW TimeSec@ TMSG TQUERY User WDay@ WIN-ACTIVATE \\\n"
"WIN-ACTIVE WIN-CLICK WIN-CLOSE WIN-EXIST WIN-HIDE WIN-HWND WIN-MAXIMIZE \\\n"
"WIN-MINIMIZE WIN-MOVE WIN-MOVER WIN-RESTORE WIN-SEND-KEYS WIN-SHOW \\\n"
"WIN-TERMINATE WIN-TOPMOST WIN-VER WIN-WAIT WINAPI WRITE-DATE WatchClipboard \\\n"
"WatchConnect WatchDir WatchDisconnect WatchDriveInsert WatchDriveRemove \\\n"
"WatchFile WatchProc WatchProcStop WatchWinActivate WatchWinCreate \\\n"
"WatchWinDestroy WatchWindow WinNT Year@ Yes \n"
"\n"
"keywords3.$(file.patterns.nncron)=\\\n"
"ALL AboveNormalPriority AsService BelowNormalPriority FILESONLY \\\n"
"HighPriority IdlePriority LoadProfile NoActive NoDel NoLog NoRunAs \\\n"
"NormalPriority OnceADay OnceAHour OnceAMonth OnceAWeek RECURSIVE \\\n"
"RealtimePriority RunOnce SWHide ShowMaximized ShowMinimized ShowNoActivate \\\n"
"ShowNormal StartIn StartPos StartSize TODEPTH WATCH-CHANGE-ATTRIBUTES \\\n"
"WATCH-CHANGE-DIR-NAME WATCH-CHANGE-FILE-NAME WATCH-CHANGE-LAST-WRITE \\\n"
"WATCH-CHANGE-SECURITY WATCH-CHANGE-SIZE WaitFor WatchSubtree WithoutProfile \n"
"\n"
"style.nncrontab.0=\n"
"style.nncrontab.1=fore:#007F00,$(font.comment)\n"
"style.nncrontab.2=$(colour.string),back:#606060,fore:#FFFF00\n"
"style.nncrontab.3=fore:#00007F,bold\n"
"style.nncrontab.4=fore:#000000,bold\n"
"style.nncrontab.5=fore:#00007F,italics\n"
"style.nncrontab.6=fore:#000000,bold,back:#FFE0FF\n"
"style.nncrontab.7=fore:#007F7F\n"
"style.nncrontab.8=fore:#7F007F,$(font.monospace)\n"
"style.nncrontab.9=back:#FFFFE0\n"
"\n"
"\n"
"filter.nsis=NSIS (nsi nsh)|*.nsi;*.nsh|\n"
"file.patterns.nsis=*.nsi;*.nsh\n"
"lexer.$(file.patterns.nsis)=nsis\n"
"\n"
"nsis.uservars=1\n"
"\n"
"keywords.$(file.patterns.nsis)=!addincludedir !addplugindir MakeNSIS Portions \\\n"
"Contributors: Abort AddBrandingImage AddSize AutoCloseWindow BGFont \\\n"
"BGGradient BrandingText BringToFront Call CallInstDLL Caption ChangeUI \\\n"
"ClearErrors ComponentText GetDLLVersion GetDLLVersionLocal GetFileTime \\\n"
"GetFileTimeLocal CopyFiles CRCCheck CreateDirectory CreateFont CreateShortCut \\\n"
"SetDatablockOptimize DeleteINISec DeleteINIStr DeleteRegKey DeleteRegValue \\\n"
"Delete DetailPrint DirText DirShow DirVar DirVerify GetInstDirError AllowRootDirInstall \\\n"
"CheckBitmap EnableWindow EnumRegKey EnumRegValue Exch Exec ExecWait \\\n"
"ExecShell ExpandEnvStrings FindWindow FindClose FindFirst FindNext File FileBufSize \\\n"
"FlushINI ReserveFile FileClose FileErrorText FileOpen FileRead FileWrite FileReadByte \\\n"
"FileWriteByte FileSeek Function FunctionEnd GetDlgItem GetFullPathName \\\n"
"GetTempFileName HideWindow Icon IfAbort IfErrors IfFileExists IfRebootFlag IfSilent \\\n"
"InstallDirRegKey InstallColors InstallDir InstProgressFlags InstType IntOp IntCmp \\\n"
"IntCmpU IntFmt IsWindow Goto LangString LangStringUP LicenseData \\\n"
"LicenseForceSelection LicenseLangString LicenseText LicenseBkColor \\\n"
"LoadLanguageFile LogSet LogText MessageBox Nop Name OutFile Page \\\n"
"PageCallbacks PageEx PageExEnd Pop Push Quit ReadINIStr ReadRegDWORD \\\n"
"ReadRegStr ReadEnvStr Reboot RegDLL Rename Return RMDir Section SectionEnd \\\n"
"SectionIn SubSection SectionGroup SubSectionEnd SectionGroupEnd SearchPath \\\n"
"SectionSetFlags SectionGetFlags SectionSetInstTypes SectionGetInstTypes \\\n"
"SectionGetText SectionSetText SectionGetSize SectionSetSize GetCurInstType \\\n"
"SetCurInstType InstTypeSetText InstTypeGetText SendMessage SetAutoClose \\\n"
"SetCtlColors SetBrandingImage SetCompress SetCompressor SetCompressorDictSize \\\n"
"SetCompressionLevel SetDateSave SetDetailsView SetDetailsPrint SetErrors \\\n"
"SetErrorLevel GetErrorLevel SetFileAttributes SetFont SetOutPath SetOverwrite \\\n"
"SetPluginUnload SetRebootFlag SetShellVarContext SetSilent ShowInstDetails \\\n"
"ShowUninstDetails ShowWindow SilentInstall SilentUnInstall Sleep StrCmp StrCpy \\\n"
"StrLen SubCaption UninstallExeName UninstallCaption UninstallIcon UninstPage \\\n"
"UninstallText UninstallSubCaption UnRegDLL WindowIcon WriteINIStr WriteRegBin \\\n"
"WriteRegDWORD WriteRegStr WriteRegExpandStr WriteUninstaller XPStyle !packhdr \\\n"
"!system !execute !AddIncludeDir !include !cd !ifdef !ifndef !endif !define !undef !else !echo !warning \\\n"
"!error !verbose !macro !macroend !insertmacro !ifmacrodef !ifmacrondef MiscButtonText \\\n"
"DetailsButtonText UninstallButtonText InstallButtonText SpaceTexts \\\n"
"CompletedText GetFunctionAddress GetLabelAddress GetCurrentAddress \\\n"
"!AddPluginDir InitPluginsDir AllowSkipFiles Var VIAddVersionKey VIProductVersion LockWindow\n"
"\n"
" \n"
"keywords2.$(file.patterns.nsis)=$0 $1 $2 $3 $4 $5 $6 $7 $8 $9 \\\n"
"$R0 $R1 $R2 $R3 $R4 $R5 $R6 $R7 $R8 $R9 $\\t $\\\" $\\' $\\` \\\n"
"$VARNAME $0, $INSTDIR $OUTDIR $CMDLINE $LANGUAGE $PROGRAMFILES \\\n"
"$COMMONFILES $DESKTOP $EXEDIR ${NSISDIR} $WINDIR $SYSDIR $TEMP \\\n"
"$STARTMENU $SMPROGRAMS $SMSTARTUP $QUICKLAUNCH $DOCUMENTS \\\n"
"$SENDTO $RECENT $FAVORITES $MUSIC $PICTURES $VIDEOS $NETHOOD \\\n"
"$FONTS $TEMPLATES $APPDATA $PRINTHOOD $INTERNET_CACHE $COOKIES \\\n"
"$HISTORY $PROFILE $ADMINTOOLS $RESOURCES $RESOURCES_LOCALIZED \\\n"
"$CDBURN_AREA $HWNDPARENT $PLUGINSDIR $$ $\\r $\\n\n"
"\n"
"keywords3.$(file.patterns.nsis)=ARCHIVE FILE_ATTRIBUTE_ARCHIVE FILE_ATTRIBUTE_HIDDEN \\\n"
"FILE_ATTRIBUTE_NORMAL FILE_ATTRIBUTE_OFFLINE FILE_ATTRIBUTE_READONLY \\\n"
"FILE_ATTRIBUTE_SYSTEM FILE_ATTRIBUTE_TEMPORARY HIDDEN HKCC HKCR HKCU \\\n"
"HKDD HKEY_CLASSES_ROOT HKEY_CURRENT_CONFIG HKEY_CURRENT_USER HKEY_DYN_DATA \\\n"
"HKEY_LOCAL_MACHINE HKEY_PERFORMANCE_DATA HKEY_USERS HKLM HKPD HKU IDABORT \\\n"
"IDCANCEL IDIGNORE IDNO IDOK IDRETRY IDYES MB_ABORTRETRYIGNORE MB_DEFBUTTON1 \\\n"
"MB_DEFBUTTON2 MB_DEFBUTTON3 MB_DEFBUTTON4 MB_ICONEXCLAMATION \\\n"
"MB_ICONINFORMATION MB_ICONQUESTION MB_ICONSTOP MB_OK MB_OKCANCEL \\\n"
"MB_RETRYCANCEL MB_RIGHT MB_SETFOREGROUND MB_TOPMOST MB_YESNO \\\n"
"MB_YESNOCANCEL NORMAL OFFLINE READONLY SW_SHOWMAXIMIZED SW_SHOWMINIMIZED \\\n"
"SW_SHOWNORMAL SYSTEM TEMPORARY auto colored false force hide ifnewer nevershow \\\n"
"normal off on show silent silentlog smooth true try lzma zlib bzip2 none listonly textonly \\\n"
"both top left bottom right license components directory instfiles uninstConfirm custom \\\n"
"all leave current ifdiff lastused LEFT RIGHT CENTER dlg_id ALT CONTROL EXT SHIFT \\\n"
"open print manual alwaysoff\n"
"\n"
"\n"
"style.nsis.0=fore:#000000,$(font.base)\n"
"style.nsis.1=fore:#007F00,$(font.comment)\n"
"style.nsis.2=fore:#999999,back:#EEEEEE\n"
"style.nsis.3=fore:#999999,back:#EEEEEE\n"
"style.nsis.4=fore:#999999,back:#EEEEEE\n"
"style.nsis.5=fore:#00007F,bold\n"
"style.nsis.6=fore:#CC3300\n"
"style.nsis.7=fore:#FF9900\n"
"style.nsis.8=fore:#000000\n"
"style.nsis.9=fore:#00007F,bold\n"
"style.nsis.10=fore:#00007F,bold\n"
"style.nsis.11=fore:#00007F,bold\n"
"style.nsis.12=fore:#00007F,bold\n"
"style.nsis.13=fore:#CC3300,back:#EEEEEE\n"
"style.nsis.14=fore:#007F7F\n"
"style.nsis.15=fore:#00007F,bold\n"
"style.nsis.16=fore:#00007F,bold\n"
"style.nsis.17=fore:#00007F,bold\n"
"style.nsis.18=fore:#007F00,$(font.comment),bold\n"
"\n"
"\n"
"command.compile.$(file.patterns.nsis)=c:/program files/nsis/makensis.exe \"$(FilePath)\"\n"
"command.build.$(file.patterns.nsis)=c:/program files/nsis/makensis.exe \"$(FilePath)\"\n"
"\n"
"command.go.$(file.patterns.nsis)=$(FileName).exe\n"
"\n"
"command.help.$(file.patterns.nsis)=$(CurrentWord)!C:\\Program files\\NSIS\\NSIS.chm\n"
"command.help.subsystem.$(file.patterns.nsis)=4\n"
"\n"
"comment.block.nsis=;\n"
"comment.block.at.line.start.nsis=1\n"
"comment.stream.start.nsis=/*\n"
"comment.stream.end.nsis=*/\n"
"comment.box.start.nsis=/*\n"
"comment.box.middle.nsis=;\n"
"comment.box.end.nsis=*/\n"
"\n"
"filter.opal=OPAL (impl sign)|*.impl;*.sign|\n"
"\n"
"file.patterns.opal=*.impl;*.sign\n"
"lexer.$(file.patterns.opal)=opal\n"
"\n"
"keywordclass.opal_keywords=ALL AND ANDIF ANY AS ASSERT AXM COMPLETELY DATA DEF DERIVE \\\n"
"DFD DISCRIMINATORS ELSE EX EXTERNAL FI FIX FUN IF IMPLEMENTATION IMPLIES IMPORT \\\n"
"IN INHERIT INJECTIONS INTERFACE INTERNAL LAW LAZY LEFTASSOC LET MODULE NOT ONLY \\\n"
"OR ORIF OTHERWISE POST PRE PRED PRIORITY PROPERTIES REALIZES REQUIRE RIGHTASSOC \\\n"
"SELECTORS SIGNATURE SORT SPC SPEC SPECIFICATION STRUCTURE THE THEN THEORY THM \\\n"
"TYPE UNIQ WHERE\n"
"\n"
"keywordclass.opal_sorts=aEntry agent align anchor ans arg arg1 arg2 array \\\n"
"arrowWhere bag bitmap bool bstree byte callback canvasEditor capStyle channel \\\n"
"char childstat codom codomFrom codomTo color colorModel com composeOp config \\\n"
"configCom cursor dArray data data1 data11 data2 data21 data3 data31 data4 \\\n"
"data41 dataFrom dataTo defaultPrio denotation device dist distOut dom domFrom \\\n"
"domTo drawing dyn emitter env event eventInfo file filemode filestat filetype \\\n"
"first first1 first2 first3 fission fmt font from from1 from2 funct group groupid \\\n"
"heap iconfig image in inData index inode input int inter interdom interpreter \\\n"
"iseq items joinStyle justifyHow long manager managerRequest map mapEntry mark \\\n"
"mid modifier nat natMap OBJECT option orient out outData output packOp pair \\\n"
"parser permission point positionRequest process procstat quad range real \\\n"
"regulator rel relief res res1 res2 result role sap script scroller scrollView \\\n"
"scrollWindow searchOpt second seekMode selector semaphor seq seqEntry set \\\n"
"setEntry short sigaction sighandler sigmask signal size sizeRequest some \\\n"
"sreal state stateId stateRequest string subrel tag textEditor time to tree \\\n"
"triple union user userid version view void wconfig wconfigCom wday widget \\\n"
"window wrapStyle \n"
"\n"
"keywords.$(file.patterns.opal)=$(keywordclass.opal_keywords)\n"
"keywords2.$(file.patterns.opal)=$(keywordclass.opal_sorts)\n"
"\n"
"\n"
"style.opal.0=fore:#000000,$(font.opal)\n"
"style.opal.1=fore:#007F00,italics,$(font.comment)\n"
"style.opal.2=fore:#007F00,italics,$(font.comment)\n"
"style.opal.3=fore:#007F7F\n"
"style.opal.4=fore:#00007F,bold\n"
"style.opal.5=fore:#007F7F\n"
"style.opal.6=fore:#7F007F,italics,$(font.comment)\n"
"style.opal.7=fore:#000000\n"
"style.opal.8=fore:#A00000\n"
"\n"
"style.opal.32=fore:#000000\n"
"style.opal.34=fore:#FF0000,back:#FFFF00,bold\n"
"style.opal.35=fore:#FF0000,back:#00FF00,bold\n"
"\n"
"file.patterns.props=*.properties;*.session;*.ini;*.inf;*.reg;*.url;*.cfg;*.cnf;*.aut\n"
"file.patterns.text=*.txt;*.log;*.lst;*.doc;*.diz;*.nfo\n"
"file.patterns.batch=*.bat;*.cmd;*.nt\n"
"file.patterns.diff=*.diff;*.patch\n"
"file.patterns.make=makefile;Makefile;*.mak;configure\n"
"\n"
"filter.properties=Properties (ini inf reg url cfg cnf)|$(file.patterns.props)|\n"
"filter.text=Text (txt log lst doc diz nfo)|$(file.patterns.text);make*|\n"
"filter.batch=Batch (bat cmd nt)|$(file.patterns.batch)|\n"
"filter.diff=Difference (diff patch)|$(file.patterns.diff)|\n"
"\n"
"lexer.$(file.patterns.props)=props\n"
"lexer.$(file.patterns.batch)=batch\n"
"lexer.*.err=errorlist\n"
"lexer.$(file.patterns.make)=makefile\n"
"lexer.*.iface=makefile\n"
"lexer.$(file.patterns.diff)=diff\n"
"\n"
"word.characters.$(file.patterns.text)=$(chars.alpha)$(chars.numeric)$(chars.accented)-'\n"
"\n"
"colour.other.operator=fore:#B06000\n"
"\n"
"\n"
"style.props.0=\n"
"style.props.1=fore:#007F7F,$(font.comment)\n"
"style.props.2=$(colour.string),back:#E0F0F0,eolfilled\n"
"style.props.3=$(colour.other.operator)\n"
"style.props.4=$(colour.preproc)\n"
"style.props.5=\n"
"style.props.34=fore:#0000FF,notbold\n"
"style.props.35=fore:#FF0000,notbold\n"
"comment.block.props=#~\n"
"preprocessor.symbol.$(file.patterns.make)=!\n"
"preprocessor.start.$(file.patterns.make)=IF IFDEF IFNDEF\n"
"preprocessor.middle.$(file.patterns.make)=ELSE ELSEIF ELSEIFDEF ELSEIFNDEF\n"
"preprocessor.end.$(file.patterns.make)=ENDIF\n"
"\n"
"\n"
"keywordclass.batch=rem set if exist errorlevel for in do \\\n"
"break call chcp cd chdir choice cls country ctty date del erase dir echo \\\n"
"exit goto loadfix loadhigh mkdir md move path pause prompt rename ren \\\n"
"rmdir rd shift time type ver verify vol \\\n"
"com con lpt nul \\\n"
"color copy defined else not start\n"
"keywords.$(file.patterns.batch)=$(keywordclass.batch)\n"
"\n"
"\n"
"style.batch.0=fore:#000000\n"
"style.batch.1=fore:#007F00,$(font.comment)\n"
"style.batch.2=$(colour.keyword),bold\n"
"style.batch.3=$(colour.string),back:#606060,fore:#FFFF00,eolfilled\n"
"style.batch.4=$(colour.preproc)\n"
"style.batch.5=fore:#007090,$(font.monospace),bold\n"
"style.batch.6=fore:#800080\n"
"style.batch.7=fore:#000000\n"
"\n"
"comment.block.batch=REM ~\n"
"\n"
"\n"
"style.makefile.0=fore:#000000\n"
"style.makefile.1=$(colour.other.comment),$(font.code.comment.box)\n"
"style.makefile.2=$(colour.preproc)\n"
"style.makefile.3=fore:#000080\n"
"style.makefile.4=$(colour.other.operator)\n"
"style.makefile.5=fore:#A00000\n"
"style.makefile.9=$(colour.error),eolfilled\n"
"style.makefile.34=fore:#0000FF,notbold\n"
"style.makefile.35=fore:#FF0000,notbold\n"
"\n"
"comment.block.makefile=#~\n"
"\n"
"\n"
"style.errorlist.32=fore:#B06000,$(font.small)\n"
"style.errorlist.0=fore:#000000\n"
"style.errorlist.1=fore:#FF0000\n"
"style.errorlist.2=fore:#800080\n"
"style.errorlist.3=fore:#808000\n"
"style.errorlist.4=fore:#0000FF\n"
"style.errorlist.5=fore:#B06000\n"
"style.errorlist.6=fore:#FF0000\n"
"style.errorlist.7=fore:#FF0000\n"
"style.errorlist.8=fore:#FF0000\n"
"style.errorlist.9=fore:#FF00FF\n"
"style.errorlist.10=fore:#007F00\n"
"style.errorlist.11=fore:#00007F\n"
"style.errorlist.12=fore:#007F7F\n"
"style.errorlist.13=fore:#7F0000\n"
"style.errorlist.14=fore:#FF0000\n"
"style.errorlist.15=fore:#FF0000\n"
"style.errorlist.16=fore:#FF0000\n"
"style.errorlist.17=fore:#FF0000\n"
"style.errorlist.18=fore:#FF0000\n"
"style.errorlist.19=fore:#FF0000\n"
"style.errorlist.20=fore:#FF0000\n"
"style.errorlist.21=fore:#000000\n"
"style.errorlist.33=$(font.small)\n"
"\n"
"lexer.errorlist.value.separate=1\n"
"\n"
"\n"
"style.diff.0=fore:#000000\n"
"style.diff.1=fore:#007F00\n"
"style.diff.2=fore:#7F7F00\n"
"style.diff.3=fore:#7F0000\n"
"style.diff.4=fore:#7F007F\n"
"style.diff.5=fore:#007F7F\n"
"style.diff.6=fore:#00007F\n"
"style.diff.7=fore:#7F7F7F\n"
"\n"
"command.build.makefile=make\n"
"command.build.*.mak=make\n"
"\n"
"command.help.*.properties=\"file://$(SciteDefaultHome)/SciTEDoc.html#property-$(CurrentSelection)\"\n"
"command.help.subsystem.*.properties=2\n"
"\n"
"if PLAT_WIN\n"
"	command.go.*.bat=$(FileNameExt)\n"
"	command.name.0.*.bat=Execute Selection\n"
"	command.0.*.bat=$(CurrentSelection)\n"
"	command.name.1.*.mak=nmake\n"
"	command.1.*.mak=nmake -f $(FileNameExt)\n"
"\n"
"filter.pascal=Pascal (dpr dpk pas dfm inc pp)|*.dpr;*.dpk;*.pas;*.dfm;*.inc;*.pp|\n"
"\n"
"file.patterns.pascal=*.dpr;*.pas;*.dfm;*.inc;*.pp\n"
"file.patterns.pascal.package=*.dpk\n"
"file.patterns.pascal.all=$(file.patterns.pascal);$(file.patterns.pascal.package)\n"
"lexer.$(file.patterns.pascal.all)=pascal\n"
"\n"
"keywordclass.pascal=absolute abstract and array as asm assembler automated begin case \\\n"
"cdecl class const constructor deprecated destructor dispid dispinterface div do downto \\\n"
"dynamic else end except export exports external far file final finalization finally for \\\n"
"forward function goto if implementation in inherited initialization inline interface is \\\n"
"label library message mod near nil not object of on or out overload override packed \\\n"
"pascal platform private procedure program property protected public published raise \\\n"
"record register reintroduce repeat resourcestring safecall sealed set shl shr static \\\n"
"stdcall strict string then threadvar to try type unit unsafe until uses var varargs \\\n"
"virtual while with xor\n"
"\n"
"keywordclass.pascal.smart=add default implements index name nodefault read readonly \\\n"
"remove stored write writeonly\n"
"\n"
"keywordclass.pascal.package=package contains requires\n"
"\n"
"keywords.$(file.patterns.pascal)=$(keywordclass.pascal) $(keywordclass.pascal.smart)\n"
"keywords.$(file.patterns.pascal.package)=$(keywordclass.pascal) $(keywordclass.pascal.smart) $(keywordclass.pascal.package)\n"
"\n"
"lexer.pascal.smart.highlighting=1\n"
"\n"
"\n"
"style.pascal.32=$(font.base)\n"
"style.pascal.0=fore:#808080\n"
"style.pascal.1=\n"
"style.pascal.2=$(colour.code.comment.box),$(font.code.comment.box)\n"
"style.pascal.3=$(colour.code.comment.box),$(font.code.comment.box)\n"
"style.pascal.4=$(colour.code.comment.line),$(font.code.comment.line)\n"
"style.pascal.5=$(colour.preproc)\n"
"style.pascal.6=$(colour.preproc)\n"
"style.pascal.7=$(colour.number)\n"
"style.pascal.8=$(colour.number)\n"
"style.pascal.9=$(colour.keyword),bold\n"
"style.pascal.10=$(colour.string)\n"
"style.pascal.11=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled\n"
"style.pascal.12=$(colour.char)\n"
"style.pascal.13=$(colour.operator),bold\n"
"style.pascal.14=fore:#804080\n"
"\n"
"braces.pascal.style=13\n"
"\n"
"\n"
"\n"
;
const char *props5 = 
"comment.block.pascal=//~\n"
"comment.stream.start.pascal={\n"
"comment.stream.end.pascal=}\n"
"comment.box.start.pascal=(*\n"
"comment.box.middle.pascal= *\n"
"comment.box.end.pascal= *)\n"
"\n"
"statement.indent.$(file.patterns.pascal)=9 case class do else for then \\\n"
"private protected public published repeat try while type\n"
"statement.end.$(file.patterns.pascal)=13 ;\n"
"statement.lookback.$(file.patterns.pascal)=20\n"
"block.start.$(file.patterns.pascal)=9 begin\n"
"block.end.$(file.patterns.pascal)=9 end\n"
"\n"
"\n"
"\n"
"command.compile.*.pas=fpc \"$(FilePath)\"\n"
"\n"
"if PLAT_WIN\n"
"	command.go.*.pas=\"$(FileName).exe\"\n"
"	command.go.subsystem.*.pas=2\n"
"if PLAT_GTK\n"
"	command.go.*.pas=\"kvt -e $(FileName)\"\n"
"\n"
"command.build.*.pas=fpc -B \"$(FilePath)\"\n"
"command.build.subsystem.*.pas=1\n"
"\n"
"command.name.0.*.pas=Debug Compile\n"
"command.0.*.pas=fpc -g \"$(FilePath)\"\n"
"command.name.1.*.pas=Debug Build\n"
"command.1.*.pas=fpc -g -B \"$(FilePath)\"\n"
"command.name.2.*.pas=GDB\n"
"if PLAT_WIN\n"
"	command.2.*.pas=gdbpasw \"$(FileName)\"\n"
"if PLAT_GTK\n"
"	command.2.*.pas=gdb \"$(FileName)\"\n"
"	command.name.3.*.pas=DDD\n"
"	command.3.*.pas=ddd \"$(FileName)\"\n"
"\n"
"\n"
"\n"
"file.patterns.perl=*.pl;*.pm;*.pod\n"
"file.patterns.bash=*.sh;*.bsh;configure;*.ksh\n"
"file.patterns.awk=*.awk\n"
"\n"
"shbang.perl=pl\n"
"shbang.sh=sh\n"
"shbang.bash=sh\n"
"\n"
"shbang.gawk=awk\n"
"shbang.nawk=awk\n"
"shbang.mawk=awk\n"
"\n"
"filter.perl=Perl (pl pm)|$(file.patterns.perl)|\n"
"filter.bash=Bash (sh bsh)|$(file.patterns.bash)|\n"
"filter.awk=GAWK  (awk)|$(file.patterns.awk)|\n"
"\n"
"lexer.$(file.patterns.perl)=perl\n"
"lexer.$(file.patterns.bash)=bash\n"
"lexer.$(file.patterns.awk)=perl\n"
"\n"
"keywords.$(file.patterns.perl)=\\\n"
"NULL __FILE__ __LINE__ __PACKAGE__ __DATA__ __END__ AUTOLOAD \\\n"
"BEGIN CORE DESTROY END EQ GE GT INIT LE LT NE CHECK abs accept \\\n"
"alarm and atan2 bind binmode bless caller chdir chmod chomp chop \\\n"
"chown chr chroot close closedir cmp connect continue cos crypt \\\n"
"dbmclose dbmopen defined delete die do dump each else elsif endgrent \\\n"
"endhostent endnetent endprotoent endpwent endservent eof eq eval \\\n"
"exec exists exit exp fcntl fileno flock for foreach fork format \\\n"
"formline ge getc getgrent getgrgid getgrnam gethostbyaddr gethostbyname \\\n"
"gethostent getlogin getnetbyaddr getnetbyname getnetent getpeername \\\n"
"getpgrp getppid getpriority getprotobyname getprotobynumber getprotoent \\\n"
"getpwent getpwnam getpwuid getservbyname getservbyport getservent \\\n"
"getsockname getsockopt glob gmtime goto grep gt hex if index \\\n"
"int ioctl join keys kill last lc lcfirst le length link listen \\\n"
"local localtime lock log lstat lt map mkdir msgctl msgget msgrcv \\\n"
"msgsnd my ne next no not oct open opendir or ord our pack package \\\n"
"pipe pop pos print printf prototype push quotemeta qu \\\n"
"rand read readdir readline readlink readpipe recv redo \\\n"
"ref rename require reset return reverse rewinddir rindex rmdir \\\n"
"scalar seek seekdir select semctl semget semop send setgrent \\\n"
"sethostent setnetent setpgrp setpriority setprotoent setpwent \\\n"
"setservent setsockopt shift shmctl shmget shmread shmwrite shutdown \\\n"
"sin sleep socket socketpair sort splice split sprintf sqrt srand \\\n"
"stat study sub substr symlink syscall sysopen sysread sysseek \\\n"
"system syswrite tell telldir tie tied time times truncate \\\n"
"uc ucfirst umask undef unless unlink unpack unshift untie until \\\n"
"use utime values vec wait waitpid wantarray warn while write \\\n"
"xor \\\n"
"given when default break say state UNITCHECK\n"
"\n"
"keywords.$(file.patterns.awk)=\\\n"
"BEGIN END \\\n"
"if else while do for in break continue delete exit function return \\\n"
"print printf sprintf \\\n"
"system close getline next nextfile fflush \\\n"
"atan2 cos exp int log rand sin sqrt srand \\\n"
"asort asorti gensub sub gsub index length match split \\\n"
"strtonum substr tolower toupper \\\n"
"mktime strftime systime \\\n"
"and compl lshift or rshift xor \\\n"
"bindtextdomain dcgettext dcngettext \\\n"
"ARGC ARGIND ARGV BINMODE CONVFMT ENVIRON ERRNO FIELDWIDTHS \\\n"
"FILENAME FNR FS IGNORECASE LINT NF NR OFMT OFS ORS PROCINFO \\\n"
"RS RT RSTART RLENGTH SUBSEP TEXTDOMAIN\n"
"\n"
"\n"
"comment.block.awk=#~\n"
"block.start.$(file.patterns.awk)=10 {\n"
"block.end.$(file.patterns.awk)=10 }\n"
"\n"
"\n"
"word.characters.$(file.patterns.perl)=$(chars.alpha)$(chars.numeric)_$@%&\n"
"\n"
"comment.block.perl=#~\n"
"block.start.$(file.patterns.perl)=10 {\n"
"block.end.$(file.patterns.perl)=10 }\n"
"\n"
"colour.perl.heredoc=$(colour.embedded.comment)\n"
"\n"
"\n"
"bash_keywords1=alias \\\n"
"ar asa awk banner basename bash bc bdiff break \\\n"
"bunzip2 bzip2 cal calendar case cat cc cd chmod cksum \\\n"
"clear cmp col comm compress continue cp cpio crypt \\\n"
"csplit ctags cut date dc dd declare deroff dev df diff diff3 \\\n"
"dircmp dirname do done du echo ed egrep elif else env \\\n"
"esac eval ex exec exit expand export expr false fc \\\n"
"fgrep fi file find fmt fold for function functions \\\n"
"getconf getopt getopts grep gres hash head help \\\n"
"history iconv id if in integer jobs join kill local lc \\\n"
"let line ln logname look ls m4 mail mailx make \\\n"
"man mkdir more mt mv newgrp nl nm nohup ntps od \\\n"
"pack paste patch pathchk pax pcat perl pg pr print \\\n"
"printf ps pwd read readonly red return rev rm rmdir \\\n"
"sed select set sh shift size sleep sort spell \\\n"
"split start stop strings strip stty sum suspend \\\n"
"sync tail tar tee test then time times touch tr \\\n"
"trap true tsort tty type typeset ulimit umask unalias \\\n"
"uname uncompress unexpand uniq unpack unset until \\\n"
"uudecode uuencode vi vim vpax wait wc whence which \\\n"
"while who wpaste wstart xargs zcat\n"
"\n"
"bash_keywords2=chgrp chown chroot dir dircolors \\\n"
"factor groups hostid install link md5sum mkfifo \\\n"
"mknod nice pinky printenv ptx readlink seq \\\n"
"sha1sum shred stat su tac unlink users vdir whoami yes\n"
"\n"
"keywords.$(file.patterns.bash)=$(bash_keywords1) $(bash_keywords2)\n"
"\n"
"word.characters.$(file.patterns.bash)=$(chars.alpha)$(chars.numeric)_$@%&\n"
"\n"
"comment.block.bash=#~\n"
"\n"
"colour.bash.heredoc=$(colour.embedded.comment)\n"
"\n"
"style.perl.32=\n"
"style.perl.0=fore:#808080,$(font.base)\n"
"style.perl.1=$(colour.error)\n"
"style.perl.2=$(colour.code.comment.box),$(font.code.comment.box)\n"
"style.perl.3=fore:#004000,back:#E0FFE0,$(font.text),eolfilled\n"
"style.perl.4=$(colour.number)\n"
"style.perl.5=$(colour.keyword),bold\n"
"style.perl.6=$(colour.string),$(font.monospace)\n"
"style.perl.7=$(colour.char),$(font.monospace)\n"
"style.perl.8=$(colour.notused),$(font.notused)\n"
"style.perl.9=$(colour.notused),$(font.notused)\n"
"style.perl.10=$(colour.operator),bold\n"
"style.perl.11=fore:#000000\n"
"style.perl.12=fore:#000000,back:#FFE0E0\n"
"style.perl.13=fore:#000000,back:#FFFFE0\n"
"style.perl.14=fore:#000000,back:#FFE0FF\n"
"style.perl.15=fore:#000000,back:#E0E0E0\n"
"style.perl.17=fore:#000000,back:#A0FFA0\n"
"style.perl.18=fore:#000000,back:#F0E080\n"
"style.perl.19=fore:#FFFF00,back:#8080A0\n"
"style.perl.20=$(style.perl.6),back:#90FFFF\n"
"style.perl.21=fore:#600000,back:#FFF0D8,eolfilled\n"
"style.perl.22=fore:#000000,back:#DDD0DD\n"
"style.perl.23=fore:#7F007F,back:#DDD0DD,eolfilled,notbold\n"
"style.perl.24=fore:#7F007F,back:#DDD0DD,eolfilled,bold\n"
"style.perl.25=fore:#7F007F,back:#DDD0DD,eolfilled,italics\n"
"style.perl.26=fore:#7F007F,$(font.monospace),notbold\n"
"style.perl.27=$(style.perl.6)\n"
"style.perl.28=$(style.perl.20)\n"
"style.perl.29=$(style.perl.17)\n"
"style.perl.30=$(style.perl.13)\n"
"style.perl.31=fore:#004000,back:#C0FFC0,$(font.monospace),eolfilled\n"
"style.perl.40=$(style.perl.10),italics\n"
"style.perl.41=fore:#C000C0,bold\n"
"style.perl.42=fore:#C000C0,back:#FFF0FF,eolfilled\n"
"style.perl.44=$(style.perl.18)\n"
"\n"
"style.perl.43=$(style.perl.6),fore:#D00000,bold\n"
"style.perl.54=$(style.perl.17),fore:#D00000,bold\n"
"style.perl.55=$(style.perl.18),fore:#D00000,bold\n"
"style.perl.57=$(style.perl.20),fore:#D00000,bold\n"
"style.perl.61=$(style.perl.24),fore:#D00000,bold\n"
"style.perl.62=$(style.perl.61)\n"
"style.perl.64=$(style.perl.43)\n"
"style.perl.65=$(style.perl.57)\n"
"style.perl.66=$(style.perl.54)\n"
"\n"
"braces.perl.style=10\n"
"\n"
"style.bash.32=\n"
"style.bash.0=fore:#808080,$(font.base)\n"
"style.bash.1=$(colour.error)\n"
"style.bash.2=$(colour.code.comment.box),$(font.code.comment.box)\n"
"style.bash.3=$(colour.number)\n"
"style.bash.4=$(colour.keyword),bold\n"
"style.bash.5=$(colour.string),$(font.monospace)\n"
"style.bash.6=$(colour.char),$(font.monospace)\n"
"style.bash.7=$(colour.operator),bold\n"
"style.bash.8=fore:#000000\n"
"style.bash.9=fore:#000000,back:#FFE0E0\n"
"style.bash.10=fore:#000000,back:#FFFFE0\n"
"style.bash.11=fore:#FFFF00,back:#A08080\n"
"style.bash.12=fore:#000000,back:#DDD0DD\n"
"style.bash.13=fore:#7F007F,back:#DDD0DD,eolfilled,notbold\n"
"braces.bash.style=7\n"
"\n"
"command.go.$(file.patterns.awk)=gawk -f $(FileNameExt)\n"
"\n"
"command.go.$(file.patterns.perl)=perl -w $(FileNameExt)\n"
"\n"
"command.compile.$(file.patterns.perl)=perl -c -w $(FileNameExt)\n"
"command.name.0.$(file.patterns.perl)=Lint\n"
"command.0.$(file.patterns.perl)=perl -MO=Lint,all $(FileNameExt)\n"
"\n"
"command.name.1.$(file.patterns.perl)=Check Syntax\n"
"command.1.$(file.patterns.perl)=perl -cw $(FileNameExt)\n"
"\n"
"command.name.2.$(file.patterns.perl)=Code Profiler\n"
"command.2.$(file.patterns.perl)=perl -d:DProf $(FileNameExt)\n"
"\n"
"command.name.3.$(file.patterns.perl)=Profiler Parser\n"
"command.3.$(file.patterns.perl)=C:\\Perl\\bin\\dprofpp.bat $(FileDir)\\tmon.out\n"
"\n"
"file.patterns.pov=*.pov;*.inc\n"
"\n"
"filter.pov=POV-Ray SDL (pov)|$(file.patterns.pov)|\n"
"\n"
"indent.size.*.pov=2\n"
"tab.size.*.pov=2\n"
"use.tabs.*.pov=0\n"
"indent.size.*.inc=2\n"
"tab.size.*.inc=2\n"
"use.tabs.*.inc=0\n"
"\n"
"lexer.$(file.patterns.pov)=pov\n"
"\n"
"word.chars.pov=$(chars.alpha)$(chars.numeric)_#\n"
"word.characters.$(file.patterns.pov)=$(word.chars.pov)\n"
"\n"
"api.*.pov=POV-Ray_SDL.api\n"
"autocomplete.pov.start.characters=.\n"
"calltip.pov.word.characters=.$(word.chars.pov)\n"
"\n"
"comment.block.at.line.start.pov=1\n"
"comment.block.pov=//~\n"
"comment.stream.start.pov=/*\n"
"comment.stream.end.pov=*/\n"
"comment.box.start.pov=/*\n"
"comment.box.middle.pov= *\n"
"comment.box.end.pov= */\n"
"\n"
"\n"
"preprocessor.symbol.$(file.patterns.pov)=#\n"
"preprocessor.start.$(file.patterns.pov)=if ifdef ifndef switch while macro\n"
"preprocessor.middle.$(file.patterns.pov)=else\n"
"preprocessor.end.$(file.patterns.pov)=end\n"
"\n"
"keywordclass.pov=declare local include undef fopen fclose read write default version \\\n"
"case range break debug error warning \\\n"
"if ifdef ifndef switch while macro else end\n"
"\n"
"keywords.$(file.patterns.pov)=$(keywordclass.pov)\n"
"\n"
"keywords2.$(file.patterns.pov)=camera light_source light_group \\\n"
"object blob sphere cylinder box cone height_field julia_fractal \\\n"
"lathe prism sphere_sweep superellipsoid sor text torus \\\n"
"bicubic_patch disc mesh mesh2 polygon triangle smooth_triangle \\\n"
"plane poly cubic quartic quadric isosurface parametric \\\n"
"union intersection difference merge function array spline \\\n"
"vertex_vectors normal_vectors uv_vectors face_indices normal_indices uv_indices \\\n"
"texture texture_list interior_texture \\\n"
"texture_map material_map image_map color_map colour_map pigment_map \\\n"
"normal_map slope_map bump_map density_map \\\n"
"pigment normal material interior finish reflection irid slope pigment_pattern image_pattern \\\n"
"warp media scattering density background fog sky_sphere rainbow \\\n"
"global_settings radiosity photons pattern \\\n"
"transform looks_like projected_through contained_by clipped_by bounded_by\n"
"\n"
"keywords3.$(file.patterns.pov)=linear_spline quadratic_spline cubic_spline natural_spline bezier_spline b_spline \\\n"
"read write append inverse open \\\n"
"perspective orthographic fisheye ultra_wide_angle omnimax panoramic \\\n"
"spherical spotlight jitter circular orient \\\n"
"media_attenuation media_interaction shadowless parallel \\\n"
"refraction collect pass_through global_lights hierarchy sturm smooth \\\n"
"gif tga iff pot png pgm ppm jpeg tiff sys ttf \\\n"
"quaternion hypercomplex linear_sweep conic_sweep \\\n"
"type all_intersections split_union cutaway_textures \\\n"
"no_shadow no_image no_reflection double_illuminate hollow \\\n"
"uv_mapping all use_index use_color use_colour no_bump_scale \\\n"
"conserve_energy fresnel \\\n"
"average agate boxed bozo bumps cells crackle cylindrical density_file dents \\\n"
"facets granite leopard marble onion planar quilted radial ripples spotted waves wood wrinkles \\\n"
"solid use_alpha interpolate magnet noise_generator toroidal \\\n"
"ramp_wave triangle_wave sine_wave scallop_wave cubic_wave poly_wave \\\n"
"once map_type method fog_type hf_gray_16 charset ascii utf8 \\\n"
"rotate scale translate matrix location right up direction sky \\\n"
"angle look_at aperture blur_samples focal_point confidence variance \\\n"
"radius falloff tightness point_at area_light adaptive fade_distance fade_power \\\n"
"threshold strength water_level tolerance max_iteration precision slice \\\n"
"u_steps v_steps flatness inside_vector \\\n"
"accuracy max_gradient evaluate max_trace precompute \\\n"
"target ior dispersion dispersion_samples caustics \\\n"
"color colour rgb rgbf rgbt rgbft red green blue filter transmit gray hf \\\n"
"fade_color fade_colour quick_color quick_colour \\\n"
"brick checker hexagon brick_size mortar bump_size \\\n"
"ambient diffuse brilliance crand phong phong_size metallic specular \\\n"
"roughness reflection_exponent exponent thickness \\\n"
"gradient spiral1 spiral2 agate_turb form metric \\\n"
"offset df3 coords size mandel exterior julia \\\n"
"control0 control1 altitude turbulence octaves omega lambda \\\n"
"repeat flip black-hole orientation dist_exp major_radius \\\n"
"frequency phase intervals samples ratio absorption emission aa_threshold aa_level \\\n"
"eccentricity extinction distance turb_depth fog_offset fog_alt width arc_angle falloff_angle \\\n"
"adc_bailout ambient_light assumed_gamma irid_wavelength number_of_waves \\\n"
"always_sample brigthness count error_bound gray_threshold load_file \\\n"
"low_error_factor max_sample minimum_reuse nearest_count \\\n"
"pretrace_end pretrace_start recursion_limit save_file \\\n"
"spacing gather max_trace_level autostop expand_thresholds\n"
"\n"
"keywords4.$(file.patterns.pov)=x y z t u v \\\n"
"yes no true false on off \\\n"
"clock clock_delta clock_on final_clock final_frame frame_number \\\n"
"image_height image_width initial_clock initial_frame pi version\n"
"\n"
"keywords5.$(file.patterns.pov)=abs acos acosh asc asin asinh atan atanh atan2 \\\n"
"ceil cos cosh defined degrees dimensions dimension_size div exp file_exists floor \\\n"
"inside int ln log max min mod pow prod radians rand seed select sin sinh sqrt strcmp \\\n"
"strlen sum tan tanh val vdot vlength min_extent max_extent trace vaxis_rotate \\\n"
"vcross vrotate vnormalize vturbulence chr concat str strlwr strupr substr vstr \\\n"
"sqr cube reciprocal pwr\n"
"\n"
"keywords6.$(file.patterns.pov)=\n"
"\n"
"keywords7.$(file.patterns.pov)=\n"
"\n"
"keywords8.$(file.patterns.pov)=\n"
"\n"
"\n"
"style.pov.32=$(font.code.base)\n"
"style.pov.0=fore:#FF0080\n"
"style.pov.1=$(colour.code.comment.box),$(font.code.comment.box)\n"
"style.pov.2=$(colour.code.comment.line),$(font.code.comment.line)\n"
"style.pov.3=$(colour.number)\n"
"style.pov.4=$(colour.operator)\n"
"style.pov.5=\n"
"style.pov.6=$(colour.string)\n"
"style.pov.7=back:#E0C0E0,eolfilled,$(font.computer),bold\n"
"style.pov.8=$(colour.preproc)\n"
"style.pov.9=fore:#804020,$(font.code.comment.doc),italics\n"
"style.pov.10=$(colour.keyword),back:#FFD0D0\n"
"style.pov.11=$(colour.keyword),back:#FFFFD0\n"
"style.pov.12=$(colour.keyword),bold\n"
"style.pov.13=$(colour.keyword),back:#D0D0FF\n"
"style.pov.14=$(colour.keyword),back:#D0FFD0\n"
"style.pov.15=$(colour.keyword),back:#D0D0D0\n"
"style.pov.17=$(colour.keyword),back:#E0E0E0\n"
"braces.pov.style=4\n"
"\n"
"command.compile.*.pov=pvengine.exe $(FileName)\n"
"command.build.*.pov=\n"
"command.go.*.pov=pvengine.exe $(FileName)\n"
"\n"
"if PLAT_WIN\n"
"	command.help.$(file.patterns.pov)=$(CurrentWord)!D:\\Programmes\\UImages\\POV-Ray 3.5\\help\\povray35.chm\n"
"	command.help.subsystem.$(file.patterns.pov)=4\n"
"file.patterns.powerpro=*.powerpro\n"
"\n"
"filter.powerpro=PowerPro (powerpro)|$(file.patterns.powerpro)|\n"
"lexer.$(file.patterns.powerpro)=powerpro\n"
"\n"
"keywordclass.control=\\\n"
"break do else elseif endfor endif for function global gt if ifelse \\\n"
"ifx jump local lt quit static\n"
"\n"
"keywords.$(file.patterns.powerpro)=$(keywordclass.control)\n"
"\n"
"keywordclass.plugins=\\\n"
"win.debug win.debugshow win.exists win.getdisplayrect win.getfocus win.gethandle win.getrect \\\n"
"win.getsystemmetrics win.gettext win.maximize win.minimize win.move win.sendkeys win.setdebug \\\n"
"win.setfocus win.setrect win.settext win.show\n"
"\n"
"keywordclass.functions=\\\n"
"bar case clip env exec fill flag floattostring format formattime ftos \\\n"
"index input inputcancel inputdefault inputdialog join length messagebox mouse \\\n"
"not note readline remove replace replacechars replaceg revindex select \\\n"
"stof validpath visiblewindow wait wait.activity wait.for wait.forinterval wait.message \\\n"
"wait.quit wait.ready wait.sleep wait.until wallpaper window window word \n"
"\n"
"keywords2.$(file.patterns.powerpro)=$(keywordclass.plugins)|$(keywordclass.functions)\n"
"\n"
"calltip.powerpro.word.characters=$(chars.alpha)$(chars.numeric)_\n"
"comment.block.powerpro=//~\n"
"comment.stream.start.powerpro=/*\n"
"comment.stream.end.powerpro=*/\n"
"comment.box.start.powerpro=/*\n"
"comment.box.middle.powerpro= *\n"
"comment.box.end.powerpro= */\n"
"\n"
"word.characters.*.powerpro=$(chars.alpha)$(chars.numeric)@$_\n"
"\n"
"style.powerpro.32=$(font.base)\n"
"style.powerpro.0=#fore:$(font.base)\n"
"style.powerpro.1=$(colour.code.comment.box),$(font.code.comment.box)\n"
"style.powerpro.2=$(colour.code.comment.line),$(font.code.comment.line)\n"
"style.powerpro.3=$(colour.number)\n"
"style.powerpro.4=fore:#0000FF\n"
"style.powerpro.5=fore:#B00040\n"
"style.powerpro.6=fore:#0000FF\n"
"style.powerpro.7=fore:#0000FF\n"
"style.powerpro.8=$(colour.string)\n"
"style.powerpro.9=$(colour.char)\n"
"style.powerpro.10=$(colour.preproc)\n"
"style.powerpro.11=$(colour.operator),bold\n"
"braces.powerpro.style=11\n"
"style.powerpro.12=#0000FF\n"
"style.powerpro.13=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled\n"
"style.powerpro.14=$(colour.char)\n"
"style.powerpro.15=$(colour.string)\n"
"style.powerpro.16=fore:#B00040,bold\n"
"\n"
"\n"
"command.go.$(file.patterns.powerpro)=\"$(FilePath)\"\n"
"command.go.subsystem.$(file.patterns.powerpro)=2\n"
"\n"
"command.help.$(file.patterns.powerpro)=$(CurrentWord)!C:\\Program Files\\PowerPro\\powerpro.chm\n"
"command.help.subsystem.$(file.patterns.powerpro)=4\n"
"\n"
"file.patterns.powershell=*.ps1\n"
"\n"
"filter.powershell=PowerShell (ps1)|$(file.patterns.powershell)|\n"
"\n"
"lexer.$(file.patterns.powershell)=powershell\n"
"\n"
"word.characters.$(file.patterns.powershell)=$(chars.alpha)$(chars.numeric)_-$\n"
"\n"
"keywords.$(file.patterns.powershell)=\\\n"
"begin break catch continue data do dynamicparam else elseif end exit filter \\\n"
"finally for foreach from function if in local param private process return \\\n"
"switch throw trap try until where while\n"
"\n"
"keywords2.$(file.patterns.powershell)=\\\n"
"add-computer add-content add-history add-member add-pssnapin add-type \\\n"
"checkpoint-computer clear-content clear-eventlog clear-history clear-item \\\n"
"clear-itemproperty clear-variable compare-object complete-transaction \\\n"
"connect-wsman convert-path convertfrom-csv convertfrom-securestring \\\n"
"convertfrom-stringdata convertto-csv convertto-html convertto-securestring \\\n"
"convertto-xml copy-item copy-itemproperty debug-process disable-computerrestore \\\n"
"disable-psbreakpoint disable-pssessionconfiguration disable-wsmancredssp \\\n"
"disconnect-wsman enable-computerrestore enable-psbreakpoint enable-psremoting \\\n"
"enable-pssessionconfiguration enable-wsmancredssp enter-pssession exit-pssession \\\n"
"export-alias export-clixml export-console export-counter export-csv \\\n"
"export-formatdata export-modulemember export-pssession foreach-object \\\n"
"format-custom format-list format-table format-wide get-acl get-alias \\\n"
"get-authenticodesignature get-childitem get-command get-computerrestorepoint \\\n"
"get-content get-counter get-credential get-culture get-date get-event \\\n"
"get-eventlog get-eventsubscriber get-executionpolicy get-formatdata get-help \\\n"
"get-history get-host get-hotfix get-item get-itemproperty get-job get-location \\\n"
"get-member get-module get-psbreakpoint get-pscallstack get-psdrive \\\n"
"get-psprovider get-pssession get-pssessionconfiguration get-pssnapin \\\n"
"get-pfxcertificate get-process get-random get-service get-tracesource \\\n"
"get-transaction get-uiculture get-unique get-variable get-wsmancredssp \\\n"
"get-wsmaninstance get-winevent get-wmiobject group-object import-alias \\\n"
"import-clixml import-counter import-csv import-localizeddata import-module \\\n"
"import-pssession invoke-command invoke-expression invoke-history invoke-item \\\n"
"invoke-wsmanaction invoke-wmimethod join-path limit-eventlog measure-command \\\n"
"measure-object move-item move-itemproperty new-alias new-event new-eventlog \\\n"
"new-item new-itemproperty new-module new-modulemanifest new-object new-psdrive \\\n"
"new-pssession new-pssessionoption new-service new-timespan new-variable \\\n"
"new-wsmaninstance new-wsmansessionoption new-webserviceproxy out-default \\\n"
"out-file out-gridview out-host out-null out-printer out-string pop-location \\\n"
"push-location read-host receive-job register-engineevent register-objectevent \\\n"
"register-pssessionconfiguration register-wmievent remove-computer remove-event \\\n"
"remove-eventlog remove-item remove-itemproperty remove-job remove-module \\\n"
"remove-psbreakpoint remove-psdrive remove-pssession remove-pssnapin \\\n"
"remove-variable remove-wsmaninstance remove-wmiobject rename-item \\\n"
"rename-itemproperty reset-computermachinepassword resolve-path restart-computer \\\n"
"restart-service restore-computer resume-service select-object select-string \\\n"
"select-xml send-mailmessage set-acl set-alias set-authenticodesignature \\\n"
"set-content set-date set-executionpolicy set-item set-itemproperty set-location \\\n"
"set-psbreakpoint set-psdebug set-pssessionconfiguration set-service \\\n"
"set-strictmode set-tracesource set-variable set-wsmaninstance \\\n"
"set-wsmanquickconfig set-wmiinstance show-eventlog sort-object split-path \\\n"
"start-job start-process start-service start-sleep start-transaction \\\n"
"start-transcript stop-computer stop-job stop-process stop-service \\\n"
"stop-transcript suspend-service tee-object test-computersecurechannel \\\n"
"test-connection test-modulemanifest test-path test-wsman trace-command \\\n"
"undo-transaction unregister-event unregister-pssessionconfiguration \\\n"
"update-formatdata update-list update-typedata use-transaction wait-event \\\n"
"wait-job wait-process where-object write-debug write-error write-eventlog \\\n"
"write-host write-output write-progress write-verbose write-warning\n"
"\n"
"keywords3.$(file.patterns.powershell)=\\\n"
"ac asnp cat cd chdir clc clear clhy cli clp cls clv compare copy cp cpi cpp cvpa \\\n"
"dbp del diff dir ebp echo epal epcsv epsn erase etsn exsn fc fl foreach ft fw \\\n"
"gal gbp gc gci gcm gcs gdr ghy gi gjb gl gm gmo gp gps group gsn gsnp gsv gu gv \\\n"
"gwmi h history icm iex ihy ii ipal ipcsv ipmo ipsn ise iwmi kill lp ls man md \\\n"
"measure mi mount move mp mv nal ndr ni nmo nsn nv ogv oh popd ps pushd pwd r rbp \\\n"
"rcjb rd rdr ren ri rjb rm rmdir rmo rni rnp rp rsn rsnp rv rvpa rwmi sajb sal \\\n"
"saps sasv sbp sc select set si sl sleep sort sp spjb spps spsv start sv swmi tee \\\n"
"type where wjb write\n"
"\n"
"keywords4.$(file.patterns.powershell)=\\\n"
"clear-host disable-psremoting enable-psremoting get-verb help importsystemmodules \\\n"
"mkdir more prompt psedit tabexpansion\n"
"\n"
"\n"
"comment.block.powershell=#~\n"
"comment.block.at.line.start.powershell=1\n"
"\n"
"style.powershell.0=fore:#000000\n"
"style.powershell.1=fore:#008000\n"
"style.powershell.2=fore:#800000\n"
"style.powershell.3=fore:#800000\n"
"style.powershell.4=fore:#FF0000\n"
"style.powershell.5=fore:#800080\n"
"style.powershell.6=fore:#000000,bold\n"
"style.powershell.7=$(style.powershell.0)\n"
"style.powershell.8=fore:#000080,bold\n"
"style.powershell.9=fore:#008080,bold\n"
"style.powershell.10=fore:#008080,italics\n"
"style.powershell.11=fore:#808000,bold\n"
"style.powershell.12=\n"
"style.powershell.13=$(style.powershell.1)\n"
"\n"
"file.patterns.ps=*.ps\n"
"\n"
"filter.ps=PS (PostScript)|$(file.patterns.ps)|\n"
"\n"
"lexer.$(file.patterns.ps)=ps\n"
"\n"
"ps.tokenize=0\n"
"ps.level=3\n"
"\n"
"comment.block.ps=%~\n"
"\n"
"keywords.$(file.patterns.ps)=\\\n"
"$error = == FontDirectory StandardEncoding UserObjects abs add aload \\\n"
"anchorsearch and arc arcn arcto array ashow astore atan awidthshow begin bind \\\n"
"bitshift bytesavailable cachestatus ceiling charpath clear cleardictstack \\\n"
"cleartomark clip clippath closefile closepath concat concatmatrix copy copypage \\\n"
"cos count countdictstack countexecstack counttomark currentcmykcolor \\\n"
"currentcolorspace currentdash currentdict currentfile currentflat currentfont \\\n"
"currentgray currenthsbcolor currentlinecap currentlinejoin currentlinewidth \\\n"
"currentmatrix currentmiterlimit currentpagedevice currentpoint currentrgbcolor \\\n"
"currentscreen currenttransfer cvi cvlit cvn cvr cvrs cvs cvx def defaultmatrix \\\n"
"definefont dict dictstack div dtransform dup echo end eoclip eofill eq \\\n"
"erasepage errordict exch exec execstack executeonly executive exit exp false \\\n"
"file fill findfont flattenpath floor flush flushfile for forall ge get \\\n"
"getinterval grestore grestoreall gsave gt idetmatrix idiv idtransform if ifelse \\\n"
"image imagemask index initclip initgraphics initmatrix inustroke invertmatrix \\\n"
"itransform known kshow le length lineto ln load log loop lt makefont mark \\\n"
"matrix maxlength mod moveto mul ne neg newpath noaccess nor not null nulldevice \\\n"
"or pathbbox pathforall pop print prompt pstack put putinterval quit rand rcheck \\\n"
"rcurveto read readhexstring readline readonly readstring rectstroke repeat \\\n"
"resetfile restore reversepath rlineto rmoveto roll rotate round rrand run save \\\n"
"scale scalefont search setblackgeneration setcachedevice setcachelimit \\\n"
"setcharwidth setcolorscreen setcolortransfer setdash setflat setfont setgray \\\n"
"sethsbcolor setlinecap setlinejoin setlinewidth setmatrix setmiterlimit \\\n"
"setpagedevice setrgbcolor setscreen settransfer setvmthreshold show showpage \\\n"
"sin sqrt srand stack start status statusdict stop stopped store string \\\n"
"stringwidth stroke strokepath sub systemdict token token transform translate \\\n"
"true truncate type ueofill undefineresource userdict usertime version vmstatus \\\n"
"wcheck where widthshow write writehexstring writestring xcheck xor\n"
"\n"
"keywords2.$(file.patterns.ps)=\\\n"
"GlobalFontDirectory ISOLatin1Encoding SharedFontDirectory UserObject arct \\\n"
"colorimage cshow currentblackgeneration currentcacheparams currentcmykcolor \\\n"
"currentcolor currentcolorrendering currentcolorscreen currentcolorspace \\\n"
"currentcolortransfer currentdevparams currentglobal currentgstate \\\n"
"currenthalftone currentobjectformat currentoverprint currentpacking \\\n"
"currentpagedevice currentshared currentstrokeadjust currentsystemparams \\\n"
"currentundercolorremoval currentuserparams defineresource defineuserobject \\\n"
"deletefile execform execuserobject filenameforall fileposition filter \\\n"
"findencoding findresource gcheck globaldict glyphshow gstate ineofill infill \\\n"
"instroke inueofill inufill inustroke languagelevel makepattern packedarray \\\n"
"printobject product realtime rectclip rectfill rectstroke renamefile \\\n"
"resourceforall resourcestatus revision rootfont scheck selectfont serialnumber \\\n"
"setbbox setblackgeneration setcachedevice2 setcacheparams setcmykcolor setcolor \\\n"
"setcolorrendering setcolorscreen setcolorspace setcolortranfer setdevparams \\\n"
"setfileposition setglobal setgstate sethalftone setobjectformat setoverprint \\\n"
"setpacking setpagedevice setpattern setshared setstrokeadjust setsystemparams \\\n"
"setucacheparams setundercolorremoval setuserparams setvmthreshold shareddict \\\n"
"startjob uappend ucache ucachestatus ueofill ufill undef undefinefont \\\n"
"undefineresource undefineuserobject upath ustroke ustrokepath vmreclaim \\\n"
"writeobject xshow xyshow yshow\n"
"\n"
"keywords3.$(file.patterns.ps)=\\\n"
"cliprestore clipsave composefont currentsmoothness findcolorrendering \\\n"
"setsmoothness shfill\n"
"\n"
"keywords4.$(file.patterns.ps)=\\\n"
".begintransparencygroup .begintransparencymask .bytestring .charboxpath \\\n"
".currentaccuratecurves .currentblendmode .currentcurvejoin .currentdashadapt \\\n"
".currentdotlength .currentfilladjust2 .currentlimitclamp .currentopacityalpha \\\n"
".currentoverprintmode .currentrasterop .currentshapealpha \\\n"
".currentsourcetransparent .currenttextknockout .currenttexturetransparent \\\n"
".dashpath .dicttomark .discardtransparencygroup .discardtransparencymask \\\n"
".endtransparencygroup .endtransparencymask .execn .filename .filename \\\n"
".fileposition .forceput .forceundef .forgetsave .getbitsrect .getdevice \\\n"
".inittransparencymask .knownget .locksafe .makeoperator .namestring .oserrno \\\n"
".oserrorstring .peekstring .rectappend .runandhide .setaccuratecurves \\\n"
".setblendmode .setcurvejoin .setdashadapt .setdebug .setdefaultmatrix \\\n"
".setdotlength .setfilladjust2 .setlimitclamp .setmaxlength .setopacityalpha \\\n"
".setoverprintmode .setrasterop .setsafe .setshapealpha .setsourcetransparent \\\n"
".settextknockout .settexturetransparent .stringbreak .stringmatch .tempfile \\\n"
".type1decrypt .type1encrypt .type1execchar .unread arccos arcsin copydevice \\\n"
"copyscanlines currentdevice finddevice findlibfile findprotodevice flushpage \\\n"
"getdeviceprops getenv makeimagedevice makewordimagedevice max min \\\n"
"putdeviceprops setdevice\n"
"\n"
"\n"
"style.ps.0=$(font.base)\n"
"style.ps.1=$(colour.code.comment.line),$(font.code.comment.line)\n"
"style.ps.2=$(colour.code.comment.doc),$(font.code.comment.doc)\n"
"style.ps.3=fore:#3060A0,$(font.code.comment.doc)\n"
"style.ps.4=$(colour.number)\n"
"style.ps.5=$(colour.operator)\n"
"style.ps.6=$(colour.keyword),bold\n"
"style.ps.7=$(colour.preproc)\n"
"style.ps.8=$(colour.preproc),bold\n"
"style.ps.9=$(colour.keyword)\n"
"style.ps.10=fore:#3060A0\n"
"style.ps.11=$(colour.operator),bold\n"
"style.ps.12=$(colour.string),$(font.text)\n"
"style.ps.13=fore:#3F7F3F\n"
"style.ps.14=$(colour.string)\n"
"style.ps.15=$(colour.error)\n"
"braces.ps.style=11\n"
"\n"
"if PLAT_WIN\n"
"    command.go.*.ps=gswin32c \"$(FileNameExt)\"\n"
"\n"
"if PLAT_GTK\n"
"    command.go.*.ps=gs \"$(FileNameExt)\"\n"
"\n"
"\n"
"file.patterns.purebasic=*.pb\n"
"\n"
"filter.purebasic=PureBasic (pb)|$(file.patterns.purebasic)|\n"
"\n"
"lexer.$(file.patterns.purebasic)=purebasic\n"
"\n"
"\n"
"keywords.$(file.patterns.purebasic)=and break case continue data \\\n"
"datasection declare declarecdll declaredll default deftype dim else \\\n"
"elseif end enddatasection endenumeration endif endinterface endprocedure \\\n"
"endselect endstructure endstructureunion enumeration extends fakereturn \\\n"
"for foreach forever global gosub goto if includebinary includefile \\\n"
"includepath interface newlist next or procedure procedurecdll \\\n"
"proceduredll procedurereturn protected read repeat restore return select \\\n"
"shared static step structure structureunion to until wend while xincludefile\n"
"\n"
"keywords2.$(file.patterns.purebasic)=compilercase compilerdefault \\\n"
"compilerelse compilerendif compilerendselect compilerif compilerselect\n"
"\n"
"style.purebasic.0=fore:#000000\n"
"style.purebasic.1=$(colour.code.comment.line),$(font.code.comment.line)\n"
"style.purebasic.2=$(colour.number)\n"
"style.purebasic.3=$(colour.keyword)\n"
"style.purebasic.4=$(colour.string)\n"
"style.purebasic.6=$(colour.operator)\n"
"style.purebasic.7=$(style.purebasic.0)\n"
"style.purebasic.10=$(colour.preproc)\n"
"style.purebasic.11=$(colour.keyword)\n"
"style.purebasic.12=$(colour.keyword)\n"
"style.purebasic.13=$(colour.number)\n"
"style.purebasic.15=$(colour.preproc)\n"
"style.purebasic.16=$(colour.error)\n"
"style.purebasic.17=$(colour.number)\n"
"style.purebasic.18=$(colour.number)\n"
"\n"
"\n"
"file.patterns.py=*.py;*.pyw\n"
"file.patterns.scons=SConstruct;SConscript\n"
"\n"
"shbang.python=py\n"
"\n"
"filter.python=Python (py pyw)|$(file.patterns.py)|\n"
"\n"
"lexer.$(file.patterns.py)=python\n"
"lexer.$(file.patterns.scons)=python\n"
"\n"
"keywordclass.python2=and as assert break class continue def del elif \\\n"
"else except exec finally for from global if import in is lambda not \\\n"
"or pass print raise return try while with yield\n"
"\n"
"keywordclass.python3=False None True and as assert break class continue \\\n"
"def del elif else except finally for from global if import in is lambda \\\n"
"nonlocal not or pass raise return try while with yield\n"
"\n"
"keywordclass.python=$(keywordclass.python2)\n"
"\n"
"keywordclass.cython=cdef cimport cpdef\n"
"\n"
"keywords.$(file.patterns.py)=$(keywordclass.python) $(keywordclass.cython)\n"
"keywords.$(file.patterns.scons)=$(keywordclass.python)\n"
"\n"
"\n"
"\n"
"statement.indent.$(file.patterns.py)=5 class def elif else except finally \\\n"
"for if try while with\n"
"\n"
"statement.lookback.$(file.patterns.py)=0\n"
"block.start.$(file.patterns.py)=\n"
"block.end.$(file.patterns.py)=\n"
"\n"
"view.indentation.examine.*.py=2\n"
"\n"
"tab.timmy.whinge.level=1\n"
"\n"
"\n"
"comment.block.python=#~\n"
"\n"
"indent.python.colon=1\n"
"\n"
"style.python.0=fore:#808080\n"
"style.python.1=fore:#007F00,$(font.comment)\n"
"style.python.2=fore:#007F7F\n"
"style.python.3=fore:#7F007F,$(font.monospace)\n"
"style.python.4=fore:#7F007F,$(font.monospace)\n"
"style.python.5=fore:#00007F,bold\n"
"style.python.6=fore:#7F0000\n"
"style.python.7=fore:#7F0000\n"
"style.python.8=fore:#0000FF,bold\n"
"style.python.9=fore:#007F7F,bold\n"
"style.python.10=bold\n"
"style.python.11=\n"
"style.python.12=fore:#7F7F7F\n"
"style.python.13=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled\n"
"style.python.14=fore:#407090\n"
"style.python.15=fore:#805000\n"
"style.python.34=fore:#0000FF,bold\n"
"style.python.35=fore:#FF0000,bold\n"
"braces.python.style=10\n"
"\n"
"if PLAT_WIN\n"
"	command.go.*.py=pythonw -u \"$(FileNameExt)\"\n"
"	command.go.subsystem.*.py=1\n"
"	command.go.*.pyw=pythonw -u \"$(FileNameExt)\"\n"
"	command.go.subsystem.*.pyw=1\n"
"	command.build.SConscript=scons.bat --up .\n"
"	command.build.SConstruct=scons.bat .\n"
"\n"
"if PLAT_GTK\n"
"	command.go.*.py=python -u \"$(FileNameExt)\"\n"
"	command.build.SConscript=scons --up .\n"
"	command.build.SConstruct=scons .\n"
"\n"
"if PLAT_MAC\n"
"	command.go.*.py=python -u \"$(FileNameExt)\"\n"
"	command.build.SConscript=scons --up .\n"
"	command.build.SConstruct=scons .\n"
"\n"
"command.name.1.*.py=Syntax Check\n"
"command.1.*.py=python -c \"import py_compile; py_compile.compile(r'$(FilePath)')\"\n"
"\n"
"file.patterns.r=*.R;*.rsource;*.S;\n"
"file.patterns.r.like=$(file.patterns.r)\n"
"\n"
"filter.r=R and S+ (R S rsouce)|$(file.patterns.r)|\n"
"\n"
"lexer.$(file.patterns.r)=r\n"
"\n"
"keywordclass.r=if else repeat while function for in next break TRUE FALSE NULL NA Inf NaN\n"
"\n"
"keywords.$(file.patterns.r)=$(keywordclass.r)\n"
"\n"
"keywords2.$(file.patterns.r)=abbreviate abline abs acf acos acosh addmargins aggregate agrep alarm alias alist all anova any aov aperm append apply approx approxfun apropos ar args arima array arrows asin asinh assign assocplot atan atanh attach attr attributes autoload autoloader ave axis backsolve barplot basename beta bindtextdomain binomial biplot bitmap bmp body box boxplot bquote break browser builtins bxp by bzfile c call cancor capabilities casefold cat category cbind ccf ceiling character charmatch chartr chol choose chull citation class close cm cmdscale codes coef coefficients col colnames colors colorspaces colours comment complex confint conflicts contour contrasts contributors convolve cophenetic coplot cor cos cosh cov covratio cpgram crossprod cummax cummin cumprod cumsum curve cut cutree cycle data dataentry date dbeta dbinom dcauchy dchisq de debug debugger decompose delay deltat demo dendrapply density deparse deriv det detach determinant deviance dexp df dfbeta dfbetas dffits dgamma dgeom dget dhyper diag diff diffinv difftime digamma dim dimnames dir dirname dist dlnorm dlogis dmultinom dnbinom dnorm dotchart double dpois dput drop dsignrank dt dump dunif duplicated dweibull dwilcox eapply ecdf edit effects eigen emacs embed end environment eval evalq example exists exp expression factanal factor factorial family fft fifo file filter find fitted fivenum fix floor flush for force formals format formula forwardsolve fourfoldplot frame frequency ftable function gamma gaussian gc gcinfo gctorture get getenv geterrmessage gettext gettextf getwd gl glm globalenv gray grep grey grid gsub gzcon gzfile hat hatvalues hcl hclust head heatmap help hist history hsv httpclient iconv iconvlist identical identify if ifelse image influence inherits integer integrate interaction interactive intersect invisible isoreg jitter jpeg julian kappa kernapply kernel kmeans knots kronecker ksmooth labels lag lapply layout lbeta lchoose lcm legend length letters levels lfactorial lgamma library licence license line lines list lm load loadhistory loadings local locator loess log logb logical loglin lowess ls lsfit machine mad mahalanobis makepredictcall manova mapply match matlines matplot matpoints matrix max mean median medpolish menu merge message methods mget min missing mode monthplot months mosaicplot mtext mvfft names napredict naprint naresid nargs nchar ncol next nextn ngettext nlevels nlm nls noquote nrow numeric objects offset open optim optimise optimize options order ordered outer pacf page pairlist pairs palette par parse paste pbeta pbinom pbirthday pcauchy pchisq pdf pentagamma person persp pexp pf pgamma pgeom phyper pi pico pictex pie piechart pipe plclust plnorm plogis plot pmatch pmax pmin pnbinom png pnorm points poisson poly polygon polym polyroot postscript power ppoints ppois ppr prcomp predict preplot pretty princomp print prmatrix prod profile profiler proj promax prompt provide psigamma psignrank pt ptukey punif pweibull pwilcox q qbeta qbinom qbirthday qcauchy qchisq qexp qf qgamma qgeom qhyper qlnorm qlogis qnbinom qnorm qpois qqline qqnorm qqplot qr qsignrank qt qtukey quantile quarters quasi quasibinomial quasipoisson quit qunif quote qweibull qwilcox rainbow range rank raw rbeta rbind rbinom rcauchy rchisq readline real recover rect reformulate regexpr relevel remove reorder rep repeat replace replicate replications require reshape resid residuals restart return rev rexp rf rgamma rgb rgeom rhyper rle rlnorm rlogis rm rmultinom rnbinom rnorm round row rownames rowsum rpois rsignrank rstandard rstudent rt rug runif runmed rweibull rwilcox sample sapply save savehistory scale scan screen screeplot sd search searchpaths seek segments seq sequence serialize setdiff setequal setwd shell sign signif sin single sinh sink smooth solve sort source spectrum spline splinefun split sprintf sqrt stack stars start stderr stdin stdout stem step stepfun stl stop stopifnot str strftime strheight stripchart strptime strsplit strtrim structure strwidth strwrap sub subset substitute substr substring sum summary sunflowerplot supsmu svd sweep switch symbols symnum system t table tabulate tail tan tanh tapply tempdir tempfile termplot terms tetragamma text time title toeplitz tolower topenv toupper trace traceback transform trigamma trunc truncate try ts tsdiag tsp typeof unclass undebug union unique uniroot unix unlink unlist unname unserialize unsplit unstack untrace unz update upgrade url var varimax vcov vector version vi vignette warning warnings weekdays weights which while window windows with write wsbrowser xedit xemacs xfig xinch xor xtabs xyinch yinch zapsmall\n"
"\n"
"keywords3.$(file.patterns.r)=acme aids aircondit amis aml banking barchart barley beaver bigcity boot brambles breslow bs bwplot calcium cane capability cav censboot channing city claridge cloth cloud coal condense contourplot control corr darwin densityplot dogs dotplot ducks empinf envelope environmental ethanol fir frets gpar grav gravity grob hirose histogram islay knn larrows levelplot llines logit lpoints lsegments lset ltext lvqinit lvqtest manaus melanoma melanoma motor multiedit neuro nitrofen nodal ns nuclear oneway parallel paulsen poisons polar qq qqmath remission rfs saddle salinity shingle simplex singer somgrid splom stripplot survival tau tmd tsboot tuna unit urine viewport wireframe wool xyplot\n"
"\n"
"\n"
"word.chars.r=$(chars.alpha)$(chars.numeric)_.#\n"
"word.characters.$(file.patterns.r)=$(word.chars.r)\n"
"comment.block.r=#~\n"
"\n"
"statement.indent.$(file.patterns.r.like)=5 for if\n"
"statement.end.$(file.patterns.r.like)=10 ;\n"
"statement.lookback.$(file.patterns.r.like)=20\n"
"block.start.$(file.patterns.r.like)=10 {\n"
"block.end.$(file.patterns.r.like)=10 }\n"
"\n"
"\n"
"style.r.32=$(font.base)\n"
"style.r.0=fore:#808080\n"
"style.r.1=$(colour.code.comment.box),$(font.code.comment.box)\n"
"style.r.2=$(colour.keyword),bold\n"
"style.r.3=fore:#7f0000,bold\n"
"style.r.4=fore:#7f007F,bold\n"
"style.r.5=$(colour.number)\n"
"style.r.6=$(colour.string)\n"
"style.r.7=$(colour.string)\n"
"style.r.8=$(colour.operator),bold\n"
"style.r.9=$(colour.identifier)\n"
"style.r.10=$(colour.operator),bold\n"
"style.r.11=$(colour.operator),$(font.monospace),back:#E0C0E0,eolfilled\n"
"\n"
"braces.r.style=8\n"
"\n"
"file.patterns.rebol=*.r;*.reb\n"
"\n"
"filter.rebol=REBOL (r)|$(file.patterns.rebol)|\n"
"\n"
"lexer.$(file.patterns.rebol)=rebol\n"
"\n"
"keywords.$(file.patterns.rebol)=about abs absolute add \\\n"
"alert alias all alter and \\\n"
"any any-block? any-function? any-string? any-type? \\\n"
"any-word? append arccosine arcsine arctangent \\\n"
"array as-pair ask at attempt \\\n"
"back binary? bind bitset? block? \\\n"
"break brightness? browse build-tag caret-to-offset \\\n"
"catch center-face change change-dir char? \\\n"
"charset checksum choose clean-path clear \\\n"
"clear-fields close comment complement component? \\\n"
"compose compress confirm connected? construct \\\n"
"context copy cosine datatype? date? \\\n"
"debase decimal? decode-cgi decompress dehex \\\n"
"delete detab difference dir? dirize \\\n"
"disarm dispatch divide do do-events \\\n"
"does dump-face dump-obj echo either \\\n"
"else email? empty? enbase entab \\\n"
"equal? error? even? event? exclude \\\n"
"exists? exit exp extract fifth \\\n"
"file? find first flash focus \\\n"
"for forall foreach forever form \\\n"
"forskip found? fourth free func \\\n"
"function function? get get-modes get-word? \\\n"
"greater-or-equal? greater? halt has hash? \\\n"
"head head? help hide hide-popup \\\n"
"if image? import-email in in-window? \\\n"
"index? info? inform input input? \\\n"
"insert integer? intersect issue? join \\\n"
"last launch layout length? lesser-or-equal? \\\n"
"lesser? library? license link? list-dir \\\n"
"list? lit-path? lit-word? load load-image \\\n"
"log-10 log-2 log-e logic? loop \\\n"
"lowercase make make-dir make-face max \\\n"
"maximum maximum-of min minimum minimum-of \\\n"
"modified? mold money? multiply native? \\\n"
"negate negative? next none? not \\\n"
"not-equal? now number? object? odd? \\\n"
"offset-to-caret offset? op? open or \\\n"
"pair? paren? parse parse-xml path? \\\n"
"pick poke port? positive? power \\\n"
"prin print probe protect protect-system \\\n"
"query quit random read read-io \\\n"
"recycle reduce refinement? reform rejoin \\\n"
"remainder remold remove remove-each rename \\\n"
"repeat repend replace request request-color \\\n"
"request-date request-download request-file request-list request-pass \\\n"
"request-text resend return reverse routine? \\\n"
"same? save script? second secure \\\n"
"select send series? set set-modes \\\n"
"set-net set-path? set-word? show show-popup \\\n"
"sign? sine size-text size? skip \\\n"
"sort source span? split-path square-root \\\n"
"strict-equal? strict-not-equal? string? struct? stylize \\\n"
"subtract suffix? switch tag? tail \\\n"
"tail? tangent third throw time? \\\n"
"to to-binary to-bitset to-block to-char \\\n"
"to-date to-decimal to-email to-file to-get-word \\\n"
"to-hash to-hex to-idate to-image to-integer \\\n"
"to-issue to-list to-lit-path to-lit-word to-local-file \\\n"
"to-logic to-money to-pair to-paren to-path \\\n"
"to-rebol-file to-refinement to-set-path to-set-word to-string \\\n"
"to-tag to-time to-tuple to-url to-word \\\n"
"trace trim try tuple? type? \\\n"
"unfocus union unique unprotect unset \\\n"
"unset? until unview update upgrade \\\n"
"uppercase url? usage use value? \\\n"
"view viewed? wait what what-dir \\\n"
"while within? word? write write-io xor zero?\n"
"\n"
"keywords2.$(file.patterns.rebol)=action? any-block? any-function? any-string? \\\n"
"any-type? any-word? binary? bitset? block? char? component? connected? \\\n"
"datatype? date? decimal? dir? email? empty? equal? error? even? event? exists? \\\n"
"file? found? function? get-word? greater-or-equal greater? hash? head? image? \\\n"
"index? info? input? integer? issue? length? lesser-or-equal? lesser? library? \\\n"
"link-app? link? list? lit-path? lit-word? logic? modified? money? native? negative? \\\n"
"none? not-equal? number? object? odd? offset? op? pair? paren? path? port? \\\n"
"positive? rebol-command? rebol-encap? rebol-link? rebol-pro? rebol-view? \\\n"
"refinement? routine? same? script? series? set-path? set-word? sign? size? \\\n"
"strict-equal? strict-not-equal string? struct? suffix? tag? tail? time? tuple? type? \\\n"
"unset? url? value? view? word? zero?\n"
"\n"
"keywords3.$(file.patterns.rebol)=action! any-block! any-function! any-string! any-type! \\\n"
" any-word! binary! bitset! block! char! datatype! date! decimal! email! error! \\\n"
" event! file! function! get-word! hash! image! integer! issue! library! list! lit-path! \\\n"
" lit-word! logic! money! native! none! number! object! op! pair! paren! path! \\\n"
" port! refinement! routine! series! set-path! set-word! string! struct! symbol! tag! \\\n"
" time! tuple! unset! url! word!\n"
"\n"
"word.chars.rebol=$(chars.alpha)$(chars.numeric)?!.í+-*&|=_~\n"
"word.characters.$(file.patterns.rebol)=$(word.chars.rebol)\n"
"\n"
"comment.block.rebol=;\n"
"comment.box.start.rebol=;;\n"
"comment.box.middle.rebol=;;\n"
"comment.box.end.rebol=;;\n"
"\n"
"\n"
"style.rebol.32=$(font.base)\n"
"style.rebol.0=fore:#000000,bold\n"
"style.rebol.1=$(colour.code.comment.box),$(font.code.comment.box)\n"
"style.rebol.2=$(colour.code.comment.box),$(font.code.comment.box)\n"
"style.rebol.3=$(colour.code.comment.box),$(font.code.comment.box),bold\n"
"style.rebol.4=$(colour.operator),bold\n"
"style.rebol.5=$(colour.string)\n"
"style.rebol.6=$(colour.string)\n"
"style.rebol.7=$(colour.string)\n"
"style.rebol.8=$(colour.number)\n"
"style.rebol.9=fore:#005090\n"
"style.rebol.10=fore:#005090\n"
"style.rebol.11=fore:#C000C0\n"
"style.rebol.12=fore:#003070\n"
"style.rebol.13=fore:#800000\n"
"style.rebol.14=fore:#C00000\n"
"style.rebol.15=fore:#0080FF\n"
"style.rebol.16=fore:#0080FF\n"
"style.rebol.17=fore:#0080FF\n"
"style.rebol.18=fore:#8000FF\n"
"style.rebol.19=fore:#8000FF\n"
"\n"
"style.rebol.20=\n"
"style.rebol.21=$(colour.keyword),bold\n"
"style.rebol.22=fore:#8000C0,bold\n"
"style.rebol.23=fore:#800060,bold\n"
"\n"
"style.rebol.34=fore:#0000FF,bold\n"
"style.rebol.35=fore:#FF0000,bold\n"
"braces.rebol.style=0\n"
"\n"
"command.go.$(file.patterns.rebol)=E:\\tools\\lang\\rebol\\core\\rebol.exe $(FilePath)\n"
"\n"
"\n"
"file.patterns.rb=*.rb;*.rbw;*.rake;*.rjs;Rakefile\n"
"\n"
"shbang.ruby=rb\n"
"\n"
"filter.ruby=Ruby (rb rbw)|$(file.patterns.rb)|\n"
"\n"
"lexer.$(file.patterns.rb)=ruby\n"
"\n"
"keywordclass.ruby=__FILE__ and def end in or self unless __LINE__ begin \\\n"
"defined? ensure module redo super until BEGIN break do false next rescue \\\n"
"then when END case else for nil retry true while alias class elsif if \\\n"
"not return undef yield\n"
"keywords.$(file.patterns.rb)=$(keywordclass.ruby)\n"
"\n"
"statement.indent.$(file.patterns.rb)=5 def class if do elsif else case while for\n"
"\n"
"block.start.$(file.patterns.rb)=5 do\n"
"block.end.$(file.patterns.rb)=5 end\n"
"\n"
"indent.opening.$(file.patterns.rb)=1\n"
"indent.closing.$(file.patterns.rb)=1\n"
"\n"
"comment.block.ruby=#~\n"
"\n"
"style.ruby.0=fore:#808080\n"
"style.ruby.1=back:#FF0000\n"
"style.ruby.2=fore:#007F00,$(font.comment)\n"
"style.ruby.3=fore:#004000,back:#C0FFC0,$(font.monospace),eolfilled\n"
"style.ruby.4=fore:#007F7F\n"
"style.ruby.5=fore:#00007F,bold\n"
"style.ruby.6=fore:#7F007F,$(font.monospace)\n"
"style.ruby.7=fore:#7F007F,$(font.monospace)\n"
"style.ruby.8=fore:#0000FF,bold\n"
"style.ruby.9=fore:#007F7F,bold\n"
"style.ruby.10=bold\n"
"style.ruby.11=\n"
"style.ruby.12=fore:#000000,back:#A0FFA0\n"
"style.ruby.13=fore:#800080\n"
"style.ruby.14=fore:#C0A030\n"
"style.ruby.15=fore:#A000A0,bold\n"
"style.ruby.16=fore:#B00080\n"
"style.ruby.17=fore:#8000B0\n"
"style.ruby.18=fore:#FFFF00,back:#A08080\n"
"style.ruby.19=fore:#600000,back:#FFF0D8,eolfilled\n"
"style.ruby.20=fore:#000000,back:#DDD0DD\n"
"style.ruby.21=fore:#7F007F,back:#DDD0DD,eolfilled,notbold\n"
"style.ruby.22=fore:#7F007F,back:#DDD0DD,eolfilled,bold\n"
"style.ruby.23=fore:#7F007F,back:#DDD0DD,eolfilled,italics\n"
"style.ruby.24=fore:#7F007F,$(font.monospace),notbold\n"
"style.ruby.25=$(colour.string),$(font.monospace)\n"
"style.ruby.26=fore:#FFFF00,back:#A08080\n"
"style.ruby.27=fore:#000000,back:#A0FFA0\n"
"style.ruby.28=fore:#000000,back:#FFFFE0\n"
"style.ruby.29=$(style.ruby.5)\n"
"style.ruby.30=back:#FF8080\n"
"style.ruby.31=back:#FF8080\n"
"style.ruby.40=back:#FF8080\n"
"\n"
"style.ruby.34=fore:#0000FF,bold\n"
"style.ruby.35=fore:#FF0000,bold\n"
"braces.ruby.style=10\n"
"\n"
"if PLAT_WIN\n"
"	command.go.*.rb=ruby $(FileNameExt)\n"
"	command.go.subsystem.*.rb=1\n"
"	command.go.*.rbw=rubyw $(FileNameExt)\n"
"	command.go.subsystem.*.rbw=1\n"
"	command.help.*.rb=$(CurrentWord)!c:\\apps\\ruby\\ProgrammingRuby.chm\n"
"	command.help.subsystem.*.rb=4\n"
"\n"
"if PLAT_GTK\n"
"	command.go.*.rb=ruby $(FileNameExt)\n"
"\n"
"	command.name.1.*.rb=Check Syntax\n"
"	command.1.*.rb=ruby -cw $(FileNameExt)\n"
"\n"
"	command.name.2.*.rb=Code Profiler\n"
"	command.2.*.rb=ruby -r profile $(FileNameExt)\n"
"\n"
"filter.scriptol=Scriptol (sol)|*.sol|\n"
"\n"
"lexer.*.sol=scriptol\n"
"\n"
"file.patterns.sol=*.sol\n"
"\n"
"keywordclass.scriptol= act action alias always and array as \\\n"
"bool boolean break by byte \\\n"
"class case catch const constant continue \\\n"
"dyn def define dict do double \\\n"
"echo else elsif end enum error false file for float forever function \\\n"
"globak gtk \\\n"
"in if ifdef import include int integer java javax \\\n"
"let long match mod nil not natural null number \\\n"
"or print protected public real return redo \\\n"
"scan script scriptol sol short super static step until using \\\n"
"var text then this true try \\\n"
"void volatile while when \\\n"
"undef zero\n"
"keywords.$(file.patterns.sol)=$(keywordclass.scriptol)\n"
"\n"
"statement.indent.*.sol=\n"
"statement.lookback.*.sol=1\n"
"block.start.*.sol=10\n"
"\n"
"comment.block.scriptol=`~\n"
"\n"
"style.scriptol.0=fore:#000000\n"
"style.scriptol.1=fore:#808080\n"
"style.scriptol.2=fore:#007F00,$(font.comment)\n"
"style.scriptol.3=fore:#007F00,$(font.comment)\n"
"style.scriptol.4=fore:#007F00\n"
"style.scriptol.5=fore:#007F00,$(font.comment)\n"
"style.scriptol.6=fore:#007F7F\n"
"style.scriptol.7=fore:#7F007F,$(font.monospace)\n"
"style.scriptol.8=fore:#7F007F,$(font.monospace)\n"
"style.scriptol.9=fore:#FF0000,$(font.monospace),back:#E0C0E0,eolfilled\n"
"style.scriptol.10=fore:#00007F,bold\n"
"style.scriptol.11=bold\n"
"style.scriptol.12=fore:#333333\n"
"style.scriptol.14=fore:#0000FF,bold\n"
"\n"
"\n"
"if PLAT_WIN\n"
"        command.help.$(file.patterns.sol)=\"file://$(SciteDefaultHome)\\manual.html\"\n"
"        command.help.subsystem.$(file.patterns.sol)=2\n"
"\n"
"if PLAT_GTK\n"
"        command.help.$(file.patterns.sol)=man $(CurrentWord) | col -b\n"
"\n"
"command.compile.*.sol=solc -c $(FileNameExt)\n"
"command.build.*.sol=solc -be $(FileNameExt)\n"
"command.go.*.sol=$(FileName)\n"
"command.go.subsystem.*.sol=1\n"
"\n"
"command.name.0.*.sol=XSolP\n"
"command.0.*.sol =xsolp -be $(FileNameExt)\n"
"command.is.filter.0.*.sol=1\n"
"\n"
"command.name.1.*.sol=XSolC\n"
"command.1.*.sol =xsolc -be $(FileNameExt)\n"
"command.is.filter.1.*.sol=1\n"
"\n"
"command.name.2.*.sol=Compile to Php\n"
"command.2.*.sol=solp -b $(FileNameExt)\n"
"command.is.filter.2.*.sol=1\n"
"\n"
"command.name.3.*.sol=Compile Web page\n"
"command.3.*.sol=solp -b -w $(FileNameExt)\n"
"command.is.filter.3.*.sol=1\n"
"\n"
"command.name.4.*.sol=Interpret\n"
"command.4.*.sol=solp $(FileNameExt)\n"
"command.is.filter.4.*.sol=1\n"
"\n"
"\n"
"file.patterns.smalltalk=*.st\n"
"\n"
"filter.smalltalk=Smalltalk (.st)|$(file.patterns.smalltalk)|\n"
"\n"
"lexer.$(file.patterns.smalltalk)=smalltalk\n"
"\n"
"keywords.$(file.patterns.smalltalk)=\\\n"
"    ifTrue: ifFalse: whileTrue: whileFalse: ifNil: ifNotNil: whileTrue whileFalse repeat isNil notNil\n"
"\n"
"\n"
"style.smalltalk.0=\n"
"style.smalltalk.1=$(colour.string),eolfilled\n"
"style.smalltalk.2=$(colour.number)\n"
"style.smalltalk.3=$(colour.code.comment.box)\n"
"style.smalltalk.4=fore:#800080\n"
"style.smalltalk.5=$(colour.operator)\n"
"style.smalltalk.6=$(colour.keyword),bold\n"
"style.smalltalk.7=$(colour.keyword),bold\n"
"style.smalltalk.8=$(colour.keyword),bold\n"
"style.smalltalk.9=$(colour.keyword),bold\n"
"style.smalltalk.10=bold\n"
"style.smalltalk.11=fore:#A00000,bold\n"
"style.smalltalk.12=bold\n"
"style.smalltalk.13=fore:#008000\n"
"style.smalltalk.14=bold\n"
"style.smalltalk.15=$(colour.char)\n"
"style.smalltalk.16=$(colour.keyword),bold\n"
"\n"
"file.patterns.sorcins=*.ins\n"
"filter.sorcins=SORCUS Installation File|$(file.patterns.sorcins)|\n"
"\n"
"lexer.$(file.patterns.sorcins)=sorcins\n"
"\n"
"commands=ARGUSCONNECTCHANNELS \\\n"
"    M2DEVICE M2INST M2PAR M2PROC M2FUNC M2CMD M2LOADMODUL \\\n"
"    M6DEVICE M6INST M6PAR M6PROC M6FUNC M6CMD M6LOADMODUL \\\n"
"    M7DEVICE M7INST M7PAR M7PROC M7FUNC M7CMD M7LOADMODUL \\\n"
"    M8DEVICE M8INST M8PAR M8PROC M8FUNC M8CMD M8LOADMODUL \\\n"
"    MAXRESET MAXCONNECTCPU MAXLOADOSX MAXINST MAXPROC \\\n"
"    MAXFUNC MAXPAR MAXLOADMDD MAXFLASHFILE\n"
"\n"
"parameter=board slot layer osx file no usage task tasktype level irq flags \\\n"
"    datasize func para start progno name count index TIMEOUT RESET\n"
"\n"
"constants=MAX_NI_TASK MAX_TI_TASK MAX_II_TASK MAX_DI_TASK\n"
"\n"
"keywords.$(file.patterns.sorcins)=$(commands) \n"
"keywords2.$(file.patterns.sorcins)=$(parameter)\n"
"keywords3.$(file.patterns.sorcins)=$(constants)\n"
"\n"
"comment.block.sorcins=;\n"
"\n"
"style.sorcins.0=\n"
"style.sorcins.1=fore:#0000ff\n"
"style.sorcins.2=fore:#808080\n"
"style.sorcins.3=fore:#008000\n"
"style.sorcins.4=fore:#ff0000\n"
"style.sorcins.9=fore:#ff00ff\n"
"\n"
"file.patterns.specman=*.e\n"
"\n"
"filter.specman=Specman (e)|\\\n"
"$(file.patterns.specman)|\n"
"\n"
"lexer.$(file.patterns.specman)=specman\n"
"\n"
"keywords.$(file.patterns.specman)= \\\n"
"struct unit \\\n"
"integer real bool int long uint nibble byte bits bytes bit time string \\\n"
"var instance event \\\n"
"verilog vhdl \\\n"
"on compute start expect check that routine \\\n"
"specman is also first only with like \\\n"
"list of all radix hex dec bin ignore illegal \\\n"
"traceable untraceable \\\n"
"cover using count_only trace_only at_least transition item ranges \\\n"
"cross text call task within \\\n"
"packing low high \\\n"
"locker address \\\n"
"body code vec chars \\\n"
"byte_array external_pointer \\\n"
"choose matches \\\n"
"if then else when try \\\n"
"case casex casez default \\\n"
"and or not xor \\\n"
"until repeat while for from to step each do break continue \\\n"
"before next always -kind network \\\n"
"index it me in new return result select \\\n"
"cycle sample events forever \\\n"
"wait  change  negedge rise fall delay sync sim true detach eventually emit \\\n"
"gen keep keeping soft before \\\n"
"define as computed type extend \\\n"
"variable global sys \\\n"
"import \\\n"
"untyped symtab ECHO DOECHO \\\n"
"initialize non_terminal testgroup delayed exit finish \\\n"
"out append print outf appendf \\\n"
"post_generate pre_generate setup_test finalize_test extract_test \\\n"
"init run copy as_a a set_config dut_error add clear lock quit \\\n"
"lock unlock release swap quit to_string value stop_run \\\n"
"crc_8 crc_32 crc_32_flip get_config add0 all_indices and_all \\\n"
"apply average count delete exists first_index get_indices \\\n"
"has insert is_a_permutation is_empty key key_exists key_index \\\n"
"last last_index max max_index max_value min min_index \\\n"
"min_value or_all pop pop0 push push0 product resize reverse \\\n"
"sort split sum top top0 unique clear is_all_iterations \\\n"
"get_enclosing_unit hdl_path exec deep_compare deep_compare_physical \\\n"
"pack unpack warning error fatal \\\n"
"size \\\n"
"files load module ntv source_ref script read write \\\n"
"initial idle others posedge clock cycles \\\n"
"statement action command member exp block num file\n"
"\n"
"keywords2.$(file.patterns.specman)= \\\n"
"TRUE FALSE \\\n"
"MAX_INT MIN_INT NULL UNDEF \\\n"
"\n"
"keywords3.$(file.patterns.specman)= \\\n"
"any_sequence_item sequence any_sequence_driver driver \\\n"
"created_driver  parent_sequence \\\n"
"bfm_interaction_mode PULL_MODE PUSH_MODE MAIN SIMPLE RANDOM \\\n"
"max_random_count max_random_depth num_of_last_items \\\n"
"NORMAL NONE FULL LOW HIGH MEDIUM logger message \\\n"
"get_tags show_units show_actions show_message ignore_tags \\\n"
"set_style set_screen set_file set_flush_frequency \\\n"
"set_format set_units set_actions at_message_verbosity \\\n"
"short_name short_name_path short_name_style \\\n"
"\\\n"
"private protected package rerun any_env \\\n"
"unqualified_clk clk reset_start reset_end \\\n"
"message_logger verbosity tags to_file \\\n"
"\\\n"
"body pre_body post_body get_next_item send_to_bfm \\\n"
"get_depth get_driver nice_string get_index grab \\\n"
"is_blocked is_relevant ungrab mid_do post_do post_trace \\\n"
"pre_do current_grabber get_current_item get_num_items_sent \\\n"
"get_sequence_trace_list get_trace_list is_grabbed \\\n"
"try_next_item check_is_relevant delay_clock \\\n"
"get_sub_drivers regenerate_data wait_for_sequences \\\n"
"stop\n"
"\n"
"keywords4.$(file.patterns.specman)=\n"
"\n"
"word.chars.specman=$(chars.alpha)$(chars.numeric)_#\n"
"word.characters.$(file.patterns.specman)=$(word.chars.specman)\n"
"comment.block.specman=//~\n"
"comment.block.at.line.start.specman=1\n"
;
const char *props6 = 
"comment.stream.start.specman=\n"
"comment.stream.end.specman=\n"
"comment.box.start.specman=\n"
"comment.box.middle.specman=\n"
"comment.box.end.specman=\n"
"\n"
"\n"
"indent.maintain.$(file.patterns.specman)=1;\n"
"\n"
"\n"
"preprocessor.symbol.$(file.patterns.specman)=#\n"
"preprocessor.start.$(file.patterns.specman)=ifdef ifndef\n"
"preprocessor.middle.$(file.patterns.specman)=else\n"
"preprocessor.end.$(file.patterns.specman)=}\n"
"\n"
"\n"
"\n"
"style.specman.32=$(font.base)\n"
"style.specman.0=fore:#808080\n"
"style.specman.1=$(font.base)\n"
"style.specman.2=$(colour.code.comment.line),$(font.code.comment.line)\n"
"style.specman.3=fore:red\n"
"style.specman.4=$(colour.number)\n"
"style.specman.5=$(colour.keyword),bold\n"
"style.specman.6=$(colour.string)\n"
"style.specman.7=fore:#B00040\n"
"style.specman.8=fore:#804080,bold\n"
"style.specman.9=$(colour.preproc)\n"
"style.specman.10=$(colour.operator),bold\n"
"style.specman.11=\n"
"style.specman.12=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled\n"
"style.specman.13=fore:#007F00,back:#E0FFE0\n"
"style.specman.14=fore:#00005F\n"
"style.specman.15=back:#E0F0FF\n"
"\n"
"braces.specman.style=10\n"
"\n"
"\n"
"file.patterns.spice=*.scp;*.out\n"
"filter.spice=Spice (out scp)|$(file.patterns.spice)|\n"
"lexer.$(file.patterns.spice)=spice\n"
"\n"
"\n"
"keywordclass.spice.command=\\\n"
"ac  alias  alter  alterparam append askvalues assertvalid autoscale \\\n"
"break compose copy copytodoc dc  delete  destroy  destroyvec diff  display \\\n"
"disto  dowhile  echo  else  end  errorstop  fftinit filter foreach  fourier \\\n"
"freqtotime function  functionundef goto  homecursors if isdisplayed label \\\n"
"let  linearize listing  load  loadaccumulator makelabel movelabel makesmithplot \\\n"
"movecursorleft movecursorright  msgbox nameplot  newplot nextparam noise \\\n"
"nopoints  op plot plotf plotref poly print  printcursors  printevent printname \\\n"
"printplot printstatus printtext printtol printunits printval printvector \\\n"
"pwl  pz  quit  removesmithplot rename repeat  resume  rotate  runs rusage \\\n"
"save sendplot sendscript sens  set  setcursor setdoc setlabel setlabeltype \\\n"
"setmargins setnthtrigger  setunits setvec setparam setplot  setquery \\\n"
"setscaletype settracecolor settracestyle setsource settrigger  setvec \\\n"
"setxlimits setylimits show  showmod  sort status  step  stop  switch \\\n"
"tf  timetofreq  timetowave tran  unalias  unlet  unset  unalterparam \\\n"
"update version view   wavefilter  wavetotime where  while  write\n"
"keywordclass.spice.functions=\\\n"
"abs askvalue atan average ceil cos db differentiate differentiatex \\\n"
"exp finalvalue floor getcursorx getcursory getcursory0 getcursory1 \\\n"
"getparam im ln initialvalue integrate integratex interpolate isdef \\\n"
"isdisplayed j log length mag, max maxscale mean meanpts min minscale \\\n"
"nextplot  nextvector  norm operatingpoint ph phase phaseextend pk_pk \\\n"
"pos pulse re rms rmspts rnd sameplot  sin sqrt stddev stddevpts tan \\\n"
"tfall tolerance trise unitvec vector\n"
"keywordclass.spice.params=param nodeset include options dcconv subckt ends model\n"
"\n"
"\n"
"keywordclass.spice=$(keywordclass.spice.command) $(keywordclass.spice.functions) $(keywordclass.spice.params)\n"
"\n"
"keywords.$(file.patterns.spice)=$(keywordclass.spice.command)\n"
"keywords2.$(file.patterns.spice)=$(keywordclass.spice.functions)\n"
"keywords3.$(file.patterns.spice)=$(keywordclass.spice.params)\n"
"\n"
"style.spice.0=fore:#808080\n"
"style.spice.1=\n"
"style.spice.2=$(colour.keyword)\n"
"style.spice.3=$(colour.keyword),bold\n"
"style.spice.4=fore:#0040E0\n"
"style.spice.5=$(colour.number)\n"
"style.spice.6=$(colour.operator),bold\n"
"style.spice.7=$(colour.char)\n"
"style.spice.8=$(colour.code.comment.line),$(font.code.comment.line)\n"
"\n"
"comment.block.spice=*~\n"
"\n"
"braces.spice.style=4\n"
"\n"
"statement.indent.$(file.patterns.spice)=5 begin declare else elsif exception for if is loop while\n"
"statement.lookback.$(file.patterns.spice)=20\n"
"block.start.$(file.patterns.spice)=10 then is\n"
"block.end.$(file.patterns.spice)=10 end\n"
"\n"
"calltip.spice.word.characters=._$(chars.alpha)\n"
"\n"
"filter.sql=SQL (sql)|*.sql|\n"
"\n"
"file.patterns.sql=*.sql\n"
"file.patterns.plsql=*.spec;*.body;*.sps;*.spb;*.sf;*.sp\n"
"\n"
"lexer.$(file.patterns.sql)=sql\n"
"lexer.$(file.patterns.plsql)=sql\n"
"\n"
"style.sql.0=fore:#808080\n"
"style.sql.1=fore:#007F00,$(font.comment)\n"
"style.sql.2=fore:#007F00,$(font.comment)\n"
"style.sql.3=fore:#7F7F7F\n"
"style.sql.4=fore:#007F7F\n"
"style.sql.5=fore:#00007F,bold\n"
"style.sql.6=fore:#7F007F,$(font.monospace)\n"
"style.sql.7=fore:#7F007F,$(font.monospace)\n"
"style.sql.8=$(colour.preproc)\n"
"style.sql.9=fore:#007F00,$(font.monospace),back:#E0FFE0,eolfilled\n"
"style.sql.10=bold\n"
"style.sql.11=\n"
"style.sql.12=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled\n"
"style.sql.13=fore:#007F00,$(font.comment)\n"
"style.sql.15=fore:#007F00,$(font.comment)\n"
"style.sql.16=fore:#B00040\n"
"style.sql.17=fore:#3060A0,$(font.code.comment.doc)\n"
"style.sql.18=fore:#804020,$(font.code.comment.doc)\n"
"style.sql.19=fore:#4B0082\n"
"style.sql.20=fore:#B00040\n"
"style.sql.21=fore:#8B0000\n"
"style.sql.22=fore:#800080\n"
"\n"
"braces.sql.style=10\n"
"\n"
"\n"
"\n"
"keywords.$(file.patterns.sql)=\\\n"
"absolute action add admin after aggregate \\\n"
"alias all allocate alter and any are array as asc \\\n"
"assertion at authorization \\\n"
"before begin binary bit blob body boolean both breadth by \\\n"
"call cascade cascaded case cast catalog char character \\\n"
"check class clob close collate collation column commit \\\n"
"completion connect connection constraint constraints \\\n"
"constructor continue corresponding create cross cube current \\\n"
"current_date current_path current_role current_time current_timestamp \\\n"
"current_user cursor cycle \\\n"
"data date day deallocate dec decimal declare default \\\n"
"deferrable deferred delete depth deref desc describe descriptor \\\n"
"destroy destructor deterministic dictionary diagnostics disconnect \\\n"
"distinct domain double drop dynamic \\\n"
"each else end end-exec equals escape every except \\\n"
"exception exec execute exists exit external \\\n"
"false fetch first float for foreign found from free full \\\n"
"function \\\n"
"general get global go goto grant group grouping \\\n"
"having host hour \\\n"
"identity if ignore immediate in indicator initialize initially \\\n"
"inner inout input insert int integer intersect interval \\\n"
"into is isolation iterate \\\n"
"join \\\n"
"key \\\n"
"language large last lateral leading left less level like \\\n"
"limit local localtime localtimestamp locator \\\n"
"map match minute modifies modify module month \\\n"
"names national natural nchar nclob new next no none \\\n"
"not null numeric \\\n"
"object of off old on only open operation option \\\n"
"or order ordinality out outer output \\\n"
"package pad parameter parameters partial path postfix precision prefix \\\n"
"preorder prepare preserve primary \\\n"
"prior privileges procedure public \\\n"
"read reads real recursive ref references referencing relative \\\n"
"restrict result return returns revoke right \\\n"
"role rollback rollup routine row rows \\\n"
"savepoint schema scroll scope search second section select \\\n"
"sequence session session_user set sets size smallint some| space \\\n"
"specific specifictype sql sqlexception sqlstate sqlwarning start \\\n"
"state statement static structure system_user \\\n"
"table temporary terminate than then time timestamp \\\n"
"timezone_hour timezone_minute to trailing transaction translation \\\n"
"treat trigger true \\\n"
"under union unique unknown \\\n"
"unnest update usage user using \\\n"
"value values varchar variable varying view \\\n"
"when whenever where with without work write \\\n"
"year \\\n"
"zone\n"
"\n"
"keywords.$(file.patterns.plsql)=\\\n"
"all alter and any array as asc at authid avg begin between \\\n"
"binary_integer \\\n"
"body boolean bulk by char char_base check close cluster collect \\\n"
"comment commit compress connect constant create current currval \\\n"
"cursor date day declare decimal default delete desc distinct \\\n"
"do drop else elsif end exception exclusive execute exists exit \\\n"
"extends false fetch float for forall from function goto group \\\n"
"having heap hour if immediate in index indicator insert integer \\\n"
"interface intersect interval into is isolation java level like \\\n"
"limited lock long loop max min minus minute mlslabel mod mode \\\n"
"month natural naturaln new nextval nocopy not nowait null number \\\n"
"number_base ocirowid of on opaque open operator option or order \\\n"
"organization others out package partition pctfree pls_integer \\\n"
"positive positiven pragma prior private procedure public raise \\\n"
"range raw real record ref release return reverse rollback row \\\n"
"rowid rownum rowtype savepoint second select separate set share \\\n"
"smallint space sql sqlcode sqlerrm start stddev subtype successful \\\n"
"sum synonym sysdate table then time timestamp to trigger true \\\n"
"type uid union unique update use user validate values varchar \\\n"
"varchar2 variance view when whenever where while with work write \\\n"
"year zone\n"
"\n"
"keywords3.$(file.patterns.sql)=\\\n"
"param author since return see deprecated todo\n"
"\n"
"keywords4.$(file.patterns.sql)=\\\n"
"acc~ept a~ppend archive log attribute \\\n"
"bre~ak bti~tle \\\n"
"c~hange cl~ear col~umn comp~ute conn~ect copy \\\n"
"def~ine del desc~ribe disc~onnect \\\n"
"e~dit exec~ute exit \\\n"
"get \\\n"
"help ho~st \\\n"
"i~nput \\\n"
"l~ist \\\n"
"passw~ord pau~se pri~nt pro~mpt \\\n"
"quit \\\n"
"recover rem~ark repf~ooter reph~eader r~un \\\n"
"sav~e set sho~w shutdown spo~ol sta~rt startup store \\\n"
"timi~ng tti~tle \\\n"
"undef~ine \\\n"
"var~iable \\\n"
"whenever oserror whenever sqlerror \\\n"
"\n"
"keywords5.$(file.patterns.sql)=\\\n"
"dbms_output.disable dbms_output.enable dbms_output.get_line \\\n"
"dbms_output.get_lines dbms_output.new_line dbms_output.put \\\n"
"dbms_output.put_line \\\n"
"\n"
"file.patterns.TACL=*.tacl\n"
"filter.tacl=TACL (TACL)|$(file.patterns.TACL)|\n"
"\n"
"lexer.$(file.patterns.TACL)=TACL\n"
"\n"
"keywords.$(file.patterns.TACL)=activate add adddsttransition adduser alter altpri assign attachseg backupcpu break builtins buscmd clear columnize comment compute copy dump copyvar create createseg debug debugnow default delete deluser detachseg env exit fileinfo filenames files filetovar help history home info initterm inlecho inleof inlout inlprefix inlto join keep keys lights load loaded files logoff logon o obey outvar param password pause pmsearch pmsg pop ppd purge push rcvdump receivedump reload remotepassword rename reset rpasswrd run rund seginfo set setprompt settime show sink status stop suspend switch system systimes time timestamp_to_text useusers variables varinfo vartofile vchange vcopy vdelete vfind vinsert vlist vmove volume vtree wakeup who xbusdown xbusup ybusdown ybusup _comparev _contime_to_text _contime_to_text_date _contime_to_text_time _debugger _execute _longest _month3\n"
"\n"
"comment.block.TACL===\n"
"\n"
"style.TACL.0=fore:#808080,$(font.monospace)\n"
"\n"
"style.TACL.1=$(colour.text.comment),$(font.code.comment)\n"
"style.TACL.2=$(colour.code.comment.line),$(font.code.comment.line)\n"
"style.TACL.3=$(colour.code.comment.document),$(font.code.comment.document)\n"
"style.TACL.4=$(colour.number),$(font.monospace)\n"
"style.TACL.5=$(colour.keyword),bold,$(font.monospace)\n"
"style.TACL.6=$(colour.string),$(font.monospace),$(font.monospace)\n"
"style.TACL.7=$(colour.char),$(font.monospace),$(font.monospace)\n"
"style.TACL.8=back:#C0C0C0,bold,$(font.monospace)\n"
"style.TACL.9=$(colour.preproc),$(font.preproc),$(font.monospace)\n"
"style.TACL.10=$(colour.operator),bold,$(font.monospace)\n"
"style.TACL.11=$(colour.identifier),$(font.identifier),$(font.monospace)\n"
"style.TACL.16=fore:#0020F0,$(font.monospace)\n"
"\n"
"\n"
"file.patterns.TAL=*.TAL\n"
"filter.tal=TAL (TAL)|$(file.patterns.TAL)|\n"
"\n"
"lexer.$(file.patterns.TAL)=TAL\n"
"\n"
"keywords.$(file.patterns.TAL)=and assert baddr begin by call callable case cbaddr code cwaddr define do downto drop else end entry external fixed for forward goto if int interrupt label land literal lor main not of or otherwise priv proc procaddr real resident return rscan scan sgbaddr sgwaddr sgxbaddr sgxwaddr stack store string struct subproc then to unsigned until use variable waddr while xor\n"
"keywords2.$(file.patterns.TAL)=at below bit_filler block bytes c cobol elements ext extensible filler fortran language name pascal private unspecified words\n"
"\n"
"comment.block.TAL=--\n"
"\n"
"style.TAL.0=fore:#808080\n"
"\n"
"style.TAL.1=fore:#008000,$(font.code.comment)\n"
"style.TAL.2=$(colour.code.comment.line),$(font.code.comment.line)\n"
"style.TAL.3=$(colour.code.comment.document),$(font.code.comment.document)\n"
"style.TAL.4=$(colour.number)\n"
"style.TAL.5=$(colour.keyword),bold\n"
"style.TAL.6=$(colour.string),$(font.monospace)\n"
"style.TAL.7=$(colour.char),$(font.monospace)\n"
"style.TAL.8=$(colour.keyword),bold\n"
"style.TAL.9=$(colour.preproc),$(font.preproc)\n"
"style.TAL.10=$(colour.operator),bold\n"
"style.TAL.11=$(colour.identifier),$(font.identifier)\n"
"\n"
"\n"
"\n"
"\n"
"file.patterns.tcl=*.tcl;*.exp\n"
"file.patterns.itcl=*.itcl\n"
"file.patterns.tcl.like=$(file.patterns.tcl);$(file.patterns.itcl);\n"
"\n"
"filter.tcl=Tcl (tcl)|$(file.patterns.tcl)|\n"
"filter.itcl=itcl (itcl)|$(file.patterns.itcl)|\n"
"\n"
"lexer.$(file.patterns.tcl)=tcl\n"
"lexer.$(file.patterns.itcl)=tcl\n"
"\n"
"keywordclass.tcl=after append array auto_execok \\\n"
"auto_import auto_load auto_load_index auto_qualify \\\n"
"beep bgerror binary break case catch cd clock \\\n"
"close concat continue dde default echo else elseif \\\n"
"encoding eof error eval exec exit expr fblocked \\\n"
"fconfigure fcopy file fileevent flush for foreach format \\\n"
"gets glob global history http if incr info \\\n"
"interp join lappend lindex linsert list llength load \\\n"
"loadTk lrange lreplace lsearch lset lsort memory msgcat \\\n"
"namespace open package pid pkg::create pkg_mkIndex Platform-specific proc \\\n"
"puts pwd re_syntax read regexp registry regsub rename \\\n"
"resource return scan seek set socket source split \\\n"
"string subst switch tclLog tclMacPkgSearch tclPkgSetup tclPkgUnknown tell \\\n"
"time trace unknown unset update uplevel upvar variable \\\n"
"vwait while\n"
"\n"
"keywordclass.tk=bell bind bindtags bitmap button canvas checkbutton clipboard \\\n"
"colors console cursors destroy entry event focus font \\\n"
"frame grab grid image Inter-client keysyms label labelframe \\\n"
"listbox lower menu menubutton message option options pack \\\n"
"panedwindow photo place radiobutton raise scale scrollbar selection \\\n"
"send spinbox text tk tk_chooseColor tk_chooseDirectory tk_dialog tk_focusNext \\\n"
"tk_getOpenFile tk_messageBox tk_optionMenu tk_popup tk_setPalette tkerror tkvars tkwait \\\n"
"toplevel winfo wish wm\n"
"\n"
"keywordclass.itcl=@scope body class code common component configbody \\\n"
"constructor define destructor hull import inherit itcl itk itk_component \\\n"
"itk_initialize itk_interior itk_option iwidgets keep method \\\n"
"private protected public\n"
"\n"
"keywordclass.TkCommands=tk_bisque tk_chooseColor tk_dialog tk_focusFollowsMouse tk_focusNext \\\n"
"tk_focusPrev tk_getOpenFile tk_getSaveFile tk_messageBox tk_optionMenu \\\n"
"tk_popup tk_setPalette tk_textCopy tk_textCut tk_textPaste \\\n"
"tkButtonAutoInvoke tkButtonDown tkButtonEnter tkButtonInvoke tkButtonLeave \\\n"
"tkButtonUp tkCancelRepeat tkCheckRadioDown tkCheckRadioEnter tkCheckRadioInvoke \\\n"
"tkColorDialog tkColorDialog_BuildDialog tkColorDialog_CancelCmd tkColorDialog_Config tkColorDialog_CreateSelector \\\n"
"tkColorDialog_DrawColorScale tkColorDialog_EnterColorBar tkColorDialog_HandleRGBEntry tkColorDialog_HandleSelEntry tkColorDialog_InitValues \\\n"
"tkColorDialog_LeaveColorBar tkColorDialog_MoveSelector tkColorDialog_OkCmd tkColorDialog_RedrawColorBars tkColorDialog_RedrawFinalColor \\\n"
"tkColorDialog_ReleaseMouse tkColorDialog_ResizeColorBars tkColorDialog_RgbToX tkColorDialog_SetRGBValue tkColorDialog_StartMove \\\n"
"tkColorDialog_XToRgb tkConsoleAbout tkConsoleBind tkConsoleExit tkConsoleHistory \\\n"
"tkConsoleInit tkConsoleInsert tkConsoleInvoke tkConsoleOutput tkConsolePrompt \\\n"
"tkConsoleSource tkDarken tkEntryAutoScan tkEntryBackspace tkEntryButton1 \\\n"
"tkEntryClosestGap tkEntryGetSelection tkEntryInsert tkEntryKeySelect tkEntryMouseSelect \\\n"
"tkEntryNextWord tkEntryPaste tkEntryPreviousWord tkEntrySeeInsert tkEntrySetCursor \\\n"
"tkEntryTranspose tkEventMotifBindings tkFDGetFileTypes tkFirstMenu tkFocusGroup_BindIn \\\n"
"tkFocusGroup_BindOut tkFocusGroup_Create tkFocusGroup_Destroy tkFocusGroup_In tkFocusGroup_Out \\\n"
"tkFocusOK tkGenerateMenuSelect tkIconList tkIconList_Add tkIconList_Arrange \\\n"
"tkIconList_AutoScan tkIconList_Btn1 tkIconList_Config tkIconList_Create tkIconList_CtrlBtn1 \\\n"
"tkIconList_Curselection tkIconList_DeleteAll tkIconList_Double1 tkIconList_DrawSelection tkIconList_FocusIn \\\n"
"tkIconList_FocusOut tkIconList_Get tkIconList_Goto tkIconList_Index tkIconList_Invoke \\\n"
"tkIconList_KeyPress tkIconList_Leave1 tkIconList_LeftRight tkIconList_Motion1 tkIconList_Reset \\\n"
"tkIconList_ReturnKey tkIconList_See tkIconList_Select tkIconList_Selection tkIconList_ShiftBtn1 \\\n"
"tkIconList_UpDown tkListbox tkListboxAutoScan tkListboxBeginExtend tkListboxBeginSelect \\\n"
"tkListboxBeginToggle tkListboxCancel tkListboxDataExtend tkListboxExtendUpDown tkListboxKeyAccel_Goto \\\n"
"tkListboxKeyAccel_Key tkListboxKeyAccel_Reset tkListboxKeyAccel_Set tkListboxKeyAccel_Unset tkListboxMotion \\\n"
"tkListboxSelectAll tkListboxUpDown tkMbButtonUp tkMbEnter tkMbLeave \\\n"
"tkMbMotion tkMbPost tkMenuButtonDown tkMenuDownArrow tkMenuDup \\\n"
"tkMenuEscape tkMenuFind tkMenuFindName tkMenuFirstEntry tkMenuInvoke \\\n"
"tkMenuLeave tkMenuLeftArrow tkMenuMotion tkMenuNextEntry tkMenuNextMenu \\\n"
"tkMenuRightArrow tkMenuUnpost tkMenuUpArrow tkMessageBox tkMotifFDialog \\\n"
"tkMotifFDialog_ActivateDList tkMotifFDialog_ActivateFEnt tkMotifFDialog_ActivateFList tkMotifFDialog_ActivateSEnt tkMotifFDialog_BrowseDList \\\n"
"tkMotifFDialog_BrowseFList tkMotifFDialog_BuildUI tkMotifFDialog_CancelCmd tkMotifFDialog_Config tkMotifFDialog_Create \\\n"
"tkMotifFDialog_FileTypes tkMotifFDialog_FilterCmd tkMotifFDialog_InterpFilter tkMotifFDialog_LoadFiles tkMotifFDialog_MakeSList \\\n"
"tkMotifFDialog_OkCmd tkMotifFDialog_SetFilter tkMotifFDialog_SetListMode tkMotifFDialog_Update tkPostOverPoint \\\n"
"tkRecolorTree tkRestoreOldGrab tkSaveGrabInfo tkScaleActivate tkScaleButton2Down \\\n"
"tkScaleButtonDown tkScaleControlPress tkScaleDrag tkScaleEndDrag tkScaleIncrement \\\n"
"tkScreenChanged tkScrollButton2Down tkScrollButtonDown tkScrollButtonDrag tkScrollButtonUp \\\n"
"tkScrollByPages tkScrollByUnits tkScrollDrag tkScrollEndDrag tkScrollSelect \\\n"
"tkScrollStartDrag tkScrollTopBottom tkScrollToPos tkTabToWindow tkTearOffMenu \\\n"
"tkTextAutoScan tkTextButton1 tkTextClosestGap tkTextInsert tkTextKeyExtend \\\n"
"tkTextKeySelect tkTextNextPara tkTextNextPos tkTextNextWord tkTextPaste \\\n"
"tkTextPrevPara tkTextPrevPos tkTextPrevWord tkTextResetAnchor tkTextScrollPages \\\n"
"tkTextSelectTo tkTextSetCursor tkTextTranspose tkTextUpDownLine tkTraverseToMenu \\\n"
"tkTraverseWithinMenu\n"
"\n"
"keywords.$(file.patterns.tcl.like)=$(keywordclass.tcl) \n"
"keywords2.$(file.patterns.tcl.like)=$(keywordclass.tk)\n"
"keywords3.$(file.patterns.tcl.like)= $(keywordclass.TkCommands)\n"
"keywords4.$(file.patterns.itcl)=$(keywordclass.itcl) \n"
"keywords5.$(file.patterns.tcl.like)=expand\n"
"\n"
"comment.block.tcl=#~\n"
"comment.box.start.tcl=##\n"
"comment.box.middle.tcl= #\n"
"comment.box.end.tcl= ##\n"
"\n"
"style.tcl.32=$(font.base)\n"
"style.tcl.0=fore:#808080\n"
"style.tcl.1=$(colour.code.comment.line),$(font.comment),back:#f0FFE0\n"
"style.tcl.2=$(colour.code.comment.line),$(font.code.comment.line)\n"
"style.tcl.3=$(colour.number)\n"
"style.tcl.4=$(colour.string),bold,back:#FFF0F0\n"
"style.tcl.5=$(colour.string),back:#FFf0f0,eolfilled\n"
"style.tcl.6=$(colour.operator),bold\n"
"style.tcl.7=$(colour.keyword)\n"
"style.tcl.8=$(colour.preproc)\n"
"style.tcl.9=$(colour.preproc),back:#effff0\n"
"style.tcl.10=$(colour.char)\n"
"style.tcl.11=$(colour.keyword),back:#FFFF80,bold\n"
"style.tcl.12=$(colour.keyword),bold\n"
"style.tcl.13=$(colour.keyword),back:#e0ffff,bold\n"
"style.tcl.14=$(colour.keyword),back:#FFf0f0,bold\n"
"style.tcl.15=$(colour.keyword),back:#FFD0D0,bold\n"
"style.tcl.16=$(style.tcl.7),back:#FFD0FF,bold\n"
"style.tcl.17=$(style.tcl.7),back:#FFFFD0,bold\n"
"style.tcl.18=$(style.tcl.7),back:#FFA0A0,bold,\n"
"style.tcl.19=$(style.tcl.7),back:#FFD0D0\n"
"style.tcl.20=$(colour.code.comment.box),$(font.code.comment.box),back:#f0FFf0,eolfilled\n"
"style.tcl.21=$(colour.embedded.comment),$(font.embedded.comment),back:#f0FFf0\n"
"\n"
"style.tcl.34=fore:#f0f0f0,bold,back:#7070ff\n"
"style.tcl.35=fore:#FF0000,bold,back:#FF00FF\n"
"\n"
"braces.tcl.style=6\n"
"\n"
"\n"
"\n"
"file.patterns.tex=*.tex;*.sty\n"
"file.patterns.latex=*.tex;*.sty;*.aux;*.toc;*.idx\n"
"file.patterns.context=*.tex;*.tui;*.tuo;*.sty\n"
"\n"
"\n"
"filter.context=TeX|$(file.patterns.tex)|\n"
"filter.context=LaTeX|$(file.patterns.latex)|\n"
"filter.context=ConTeXt|$(file.patterns.context)|\n"
"\n"
"lexer.$(file.patterns.tex)=tex\n"
"lexer.$(file.patterns.latex)=tex\n"
"lexer.$(file.patterns.context)=tex\n"
"\n"
"\n"
"command.compile.$(file.patterns.tex)=\n"
"command.build.$(file.patterns.tex)=tex $(FileNameExt)\n"
"command.go.$(file.patterns.tex)=gv $(FileName).pdf\n"
"\n"
"command.compile.$(file.patterns.latex)=\n"
"command.build.$(file.patterns.latex)=pdflatex $(FileNameExt)\n"
"command.go.$(file.patterns.latex)=gv $(FileName).pdf\n"
"\n"
"command.compile.$(file.patterns.context)=\n"
"command.build.$(file.patterns.context)=texexec --pdf $(FileNameExt)\n"
"command.go.$(file.patterns.context)=gv $(FileName).pdf\n"
"\n"
"command.0.$(file.patterns.tex)=\n"
"command.1.$(file.patterns.tex)=\n"
"command.2.$(file.patterns.tex)=\n"
"command.3.$(file.patterns.tex)=\n"
"command.4.$(file.patterns.tex)=\n"
"command.5.$(file.patterns.tex)=\n"
"command.6.$(file.patterns.tex)=\n"
"command.7.$(file.patterns.tex)=\n"
"command.8.$(file.patterns.tex)=\n"
"command.9.$(file.patterns.tex)=\n"
"\n"
"command.0.$(file.patterns.latex)=\n"
"command.1.$(file.patterns.latex)=\n"
"command.2.$(file.patterns.latex)=\n"
"command.3.$(file.patterns.latex)=\n"
"command.4.$(file.patterns.latex)=\n"
"command.5.$(file.patterns.latex)=\n"
"command.6.$(file.patterns.latex)=\n"
"command.7.$(file.patterns.latex)=\n"
"command.8.$(file.patterns.latex)=\n"
"command.9.$(file.patterns.latex)=\n"
"\n"
"command.0.$(file.patterns.context)=\n"
"command.1.$(file.patterns.context)=\n"
"command.2.$(file.patterns.context)=\n"
"command.3.$(file.patterns.context)=\n"
"command.4.$(file.patterns.context)=\n"
"command.5.$(file.patterns.context)=\n"
"command.6.$(file.patterns.context)=\n"
"command.7.$(file.patterns.context)=\n"
"command.8.$(file.patterns.context)=\n"
"command.9.$(file.patterns.context)=\n"
"\n"
"\n"
"style.tex.0=fore:#3F3F3F\n"
"style.tex.1=fore:#007F7F\n"
"style.tex.2=fore:#7F0000\n"
"style.tex.3=fore:#7F7F00\n"
"style.tex.4=fore:#007F00\n"
"\n"
"style.tex.34=fore:#00007F\n"
"style.tex.35=fore:#7F007F\n"
"\n"
"\n"
"comment.block.tex=%\n"
"comment.block.at.line.start.tex=1\n"
"\n"
"\n"
"lexer.tex.interface.default=0\n"
"\n"
"\n"
"lexer.tex.use.keywords=1\n"
"\n"
"\n"
"lexer.tex.comment.process=0\n"
"\n"
"\n"
"lexer.tex.auto.if=1\n"
"\n"
"\n"
"keywordclass.primitives.tex=\\\n"
"    above abovedisplayshortskip abovedisplayskip \\\n"
"    abovewithdelims accent adjdemerits advance afterassignment \\\n"
"    aftergroup atop atopwithdelims \\\n"
"    badness baselineskip batchmode begingroup \\\n"
"    belowdisplayshortskip belowdisplayskip binoppenalty botmark \\\n"
"    box boxmaxdepth brokenpenalty \\\n"
"    catcode char chardef cleaders closein closeout clubpenalty \\\n"
"    copy count countdef cr crcr csname \\\n"
"    day deadcycles def defaulthyphenchar defaultskewchar \\\n"
"    delcode delimiter delimiterfactor delimeters \\\n"
"    delimitershortfall delimeters dimen dimendef discretionary \\\n"
"    displayindent displaylimits displaystyle \\\n"
"    displaywidowpenalty displaywidth divide \\\n"
"    doublehyphendemerits dp dump \\\n"
"    edef else emergencystretch end endcsname endgroup endinput \\\n"
"    endlinechar eqno errhelp errmessage errorcontextlines \\\n"
"    errorstopmode escapechar everycr everydisplay everyhbox \\\n"
"    everyjob everymath everypar everyvbox exhyphenpenalty \\\n"
"    expandafter  \\\n"
"    fam fi finalhyphendemerits firstmark floatingpenalty font \\\n"
"    fontdimen fontname futurelet \\\n"
"    gdef global group globaldefs \\\n"
"    halign hangafter hangindent hbadness hbox hfil horizontal \\\n"
"    hfill horizontal hfilneg hfuzz hoffset holdinginserts hrule \\\n"
"    hsize hskip hss horizontal ht hyphenation hyphenchar \\\n"
"    hyphenpenalty hyphen \\\n"
"    if ifcase ifcat ifdim ifeof iffalse ifhbox ifhmode ifinner \\\n"
"    ifmmode ifnum ifodd iftrue ifvbox ifvmode ifvoid ifx \\\n"
"    ignorespaces immediate indent input inputlineno input \\\n"
"    insert insertpenalties interlinepenalty \\\n"
"    jobname \\\n"
"    kern \\\n"
"    language lastbox lastkern lastpenalty lastskip lccode \\\n"
"    leaders left lefthyphenmin leftskip leqno let limits \\\n"
"    linepenalty line lineskip lineskiplimit long looseness \\\n"
"    lower lowercase \\\n"
"    mag mark mathaccent mathbin mathchar mathchardef mathchoice \\\n"
"    mathclose mathcode mathinner mathop mathopen mathord \\\n"
"    mathpunct mathrel mathsurround maxdeadcycles maxdepth \\\n"
"    meaning medmuskip message mkern month moveleft moveright \\\n"
"    mskip multiply muskip muskipdef \\\n"
"    newlinechar noalign noboundary noexpand noindent nolimits \\\n"
"    nonscript scriptscript nonstopmode nulldelimiterspace \\\n"
"    nullfont number \\\n"
"    omit openin openout or outer output outputpenalty over \\\n"
"    overfullrule overline overwithdelims \\\n"
"    pagedepth pagefilllstretch pagefillstretch pagefilstretch \\\n"
"    pagegoal pageshrink pagestretch pagetotal par parfillskip \\\n"
"    parindent parshape parskip patterns pausing penalty \\\n"
"    postdisplaypenalty predisplaypenalty predisplaysize \\\n"
"    pretolerance prevdepth prevgraf \\\n"
"    radical raise read relax relpenalty right righthyphenmin \\\n"
"    rightskip romannumeral \\\n"
"    scriptfont scriptscriptfont scriptscriptstyle scriptspace \\\n"
"    scriptstyle scrollmode setbox setlanguage sfcode shipout \\\n"
"    show showbox showboxbreadth showboxdepth showlists showthe \\\n"
"    skewchar skip skipdef spacefactor spaceskip span special \\\n"
"    splitbotmark splitfirstmark splitmaxdepth splittopskip \\\n"
"    string \\\n"
"    tabskip textfont textstyle the thickmuskip thinmuskip time \\\n"
"    toks toksdef tolerance topmark topskip tracingcommands \\\n"
"    tracinglostchars tracingmacros tracingonline tracingoutput \\\n"
"    tracingpages tracingparagraphs tracingrestores tracingstats \\\n"
"    uccode uchyph underline unhbox unhcopy unkern unpenalty \\\n"
"    unskip unvbox unvcopy uppercase \\\n"
"    vadjust valign vbadness vbox vcenter vfil vfill vfilneg \\\n"
"    vfuzz voffset vrule vsize vskip vsplit vss vtop \\\n"
"    wd widowpenalty write \\\n"
"    xdef xleaders xspaceskip \\\n"
"    year\n"
"\n"
"keywordclass.primitives.etex=\\\n"
"    beginL beginR botmarks \\\n"
"    clubpenalties currentgrouplevel currentgrouptype \\\n"
"    currentifbranch currentiflevel currentiftype \\\n"
"    detokenize dimexpr displaywidowpenalties \\\n"
"    endL endR eTeXrevision eTeXversion everyeof \\\n"
"    firstmarks fontchardp fontcharht fontcharic fontcharwd \\\n"
"    glueexpr glueshrink glueshrinkorder gluestretch \\\n"
"    gluestretchorder gluetomu \\\n"
"    ifcsname ifdefined iffontchar interactionmode \\\n"
"    interactionmode interlinepenalties \\\n"
"    lastlinefit lastnodetype \\\n"
"    marks topmarks middle muexpr mutoglue \\\n"
"    numexpr \\\n"
"    pagediscards parshapedimen parshapeindent parshapelength \\\n"
"    predisplaydirection \\\n"
"    savinghyphcodes savingvdiscards scantokens showgroups \\\n"
"    showifs showtokens splitdiscards splitfirstmarks \\\n"
"    TeXXeTstate tracingassigns tracinggroups tracingifs \\\n"
"    tracingnesting tracingscantokens \\\n"
"    unexpanded unless \\\n"
"    widowpenalties\n"
"\n"
"keywordclass.primitives.pdftex=\\\n"
"    pdfadjustspacing pdfannot pdfavoidoverfull \\\n"
"    pdfcatalog pdfcompresslevel \\\n"
"    pdfdecimaldigits pdfdest pdfdestmargin \\\n"
"    pdfendlink pdfendthread \\\n"
"    pdffontattr pdffontexpand pdffontname pdffontobjnum pdffontsize \\\n"
"    pdfhorigin \\\n"
"    pdfimageresolution pdfincludechars pdfinfo \\\n"
"    pdflastannot pdflastdemerits pdflastobj \\\n"
"    pdflastvbreakpenalty pdflastxform pdflastximage \\\n"
"    pdflastximagepages pdflastxpos pdflastypos \\\n"
"    pdflinesnapx pdflinesnapy pdflinkmargin pdfliteral \\\n"
"    pdfmapfile pdfmaxpenalty pdfminpenalty pdfmovechars \\\n"
"    pdfnames \\\n"
"    pdfobj pdfoptionpdfminorversion pdfoutline pdfoutput \\\n"
"    pdfpageattr pdfpageheight pdfpageresources pdfpagesattr \\\n"
"    pdfpagewidth pdfpkresolution pdfprotrudechars \\\n"
"    pdfrefobj pdfrefxform pdfrefximage \\\n"
"    pdfsavepos pdfsnaprefpoint pdfsnapx pdfsnapy pdfstartlink \\\n"
"    pdfstartthread \\\n"
"    pdftexrevision pdftexversion pdfthread pdfthreadmargin \\\n"
"    pdfuniqueresname \\\n"
"    pdfvorigin \\\n"
"    pdfxform pdfximage\n"
"\n"
"keywordclass.primitives.omega=\\\n"
"    odelimiter omathaccent omathchar oradical omathchardef omathcode odelcode \\\n"
"    leftghost rightghost \\\n"
"    charwd charht chardp charit \\\n"
"    localleftbox localrightbox \\\n"
"    localinterlinepenalty localbrokenpenalty \\\n"
"    pagedir bodydir pardir textdir mathdir \\\n"
"    boxdir nextfakemath \\\n"
"    pagewidth pageheight pagerightoffset pagebottomoffset \\\n"
"    nullocp nullocplist ocp externalocp ocplist pushocplist popocplist clearocplists ocptracelevel \\\n"
"    addbeforeocplist addafterocplist removebeforeocplist removeafterocplist \\\n"
"    OmegaVersion \\\n"
"    InputTranslation OutputTranslation DefaultInputTranslation DefaultOutputTranslation \\\n"
"    noInputTranslation noOutputTranslation \\\n"
"    InputMode OutputMode DefaultInputMode DefaultOutputMode \\\n"
"    noInputMode noOutputMode noDefaultInputMode noDefaultOutputMode\n"
"\n"
"\n"
"keywordclass.macros.plain.partial=\\\n"
"    TeX \\\n"
"    bgroup egroup endgraf space empty null \\\n"
"    newcount newdimen newskip newmuskip newbox newtoks newhelp newread newwrite newfam newlanguage newinsert newif \\\n"
"    maxdimen magstephalf magstep \\\n"
"    frenchspacing nonfrenchspacing normalbaselines obeylines obeyspaces raggedright ttraggedright \\\n"
"    thinspace negthinspace enspace enskip quad qquad \\\n"
"    smallskip medskip bigskip removelastskip topglue vglue hglue \\\n"
"    break nobreak allowbreak filbreak goodbreak smallbreak medbreak bigbreak \\\n"
"    line leftline rightline centerline rlap llap underbar strutbox strut \\\n"
"    cases matrix pmatrix bordermatrix eqalign displaylines eqalignno leqalignno \\\n"
"    pageno folio tracingall showhyphens fmtname fmtversion \\\n"
"    hphantom vphantom phantom smash\n"
"\n"
"keywordclass.macros.eplain.partial=\\\n"
"    eTeX \\\n"
"    newmarks grouptype interactionmode nodetype iftype \\\n"
"    tracingall loggingall tracingnone\n"
"\n"
"\n"
"keywordclass.primitives.pdftex.experimental=\n"
"\n"
"keywordclass.primitives.all=\\\n"
"    $(keywordclass.primitives.tex) \\\n"
"    $(keywordclass.primitives.etex) \\\n"
"    $(keywordclass.primitives.pdftex) \\\n"
"    $(keywordclass.primitives.pdftex.experimental) \\\n"
"    $(keywordclass.primitives.omega)\n"
"\n"
"\n"
"keywordclass.macros.context.undocumented.en=\n"
"keywordclass.macros.context.undocumented.nl=\n"
"keywordclass.macros.context.undocumented.de=\n"
"keywordclass.macros.context.undocumented.cz=\n"
"keywordclass.macros.context.undocumented.it=\n"
"keywordclass.macros.context.undocumented.ro=\n"
"\n"
"keywordclass.macros.context.extras=\n"
"\n"
"keywordclass.macros.context.nl=\n"
"keywordclass.macros.context.en=\n"
"keywordclass.macros.context.de=\n"
"keywordclass.macros.context.cz=\n"
"keywordclass.macros.context.it=\n"
"keywordclass.macros.context.ro=\n"
"\n"
"import cont-en-scite\n"
"import cont-nl-scite\n"
"import cont-de-scite\n"
"import cont-cz-scite\n"
"import cont-it-scite\n"
"import cont-ro-scite\n"
"\n"
"import cont-xx-scite\n"
"\n"
"\n"
"keywordclass.macros.latex.all=\n"
"\n"
"import latex-scite\n"
"\n"
"\n"
"keywordclass.tex.all=\\\n"
"    $(keywordclass.primitives.tex) \\\n"
"    $(keywordclass.macros.plain.partial)\n"
"\n"
"keywordclass.etex.all=\\\n"
"    $(keywordclass.primitives.tex) \\\n"
"    $(keywordclass.primitives.etex) \\\n"
"    $(keywordclass.macros.plain.partial) \\\n"
"    $(keywordclass.macros.eplain.partial)\n"
"\n"
"keywordclass.latex.all=\\\n"
"    $(keywordclass.primitives.tex) \\\n"
"    $(keywordclass.primitives.etex) \\\n"
"    $(keywordclass.macros.latex.all)\n"
"\n"
"keywordclass.pdflatex.all=\\\n"
"    $(keywordclass.primitives.tex) \\\n"
"    $(keywordclass.primitives.etex) \\\n"
"    $(keywordclass.primitives.pdftex) \\\n"
"    $(keywordclass.macros.latex.all)\n"
"\n"
"\n"
"keywordclass.context.base=\\\n"
"    $(keywordclass.primitives.tex) \\\n"
"    $(keywordclass.primitives.etex) \\\n"
"    $(keywordclass.primitives.pdftex) \\\n"
"    $(keywordclass.primitives.pdftex.experimental) \\\n"
"    $(keywordclass.primitives.omega) \\\n"
"    $(keywordclass.macros.plain.partial) \\\n"
"    $(keywordclass.macros.eplain.partial)\n"
"\n"
"keywordclass.context.all=\\\n"
"    $(keywordclass.context.base) \\\n"
"    $(keywordclass.macros.context.en) \\\n"
"    $(keywordclass.macros.context.extras) \\\n"
"    $(keywordclass.macros.context.undocumented.en)\n"
"\n"
"keywordclass.context.all.nl=\\\n"
"    $(keywordclass.context.base) \\\n"
"    $(keywordclass.macros.context.nl) \\\n"
"    $(keywordclass.macros.context.extras) \\\n"
"    $(keywordclass.macros.context.undocumented.nl)\n"
"\n"
"keywordclass.context.all.en=\\\n"
"    $(keywordclass.context.base) \\\n"
"    $(keywordclass.macros.context.en) \\\n"
"    $(keywordclass.macros.context.extras) \\\n"
"    $(keywordclass.macros.context.undocumented.en)\n"
"\n"
"keywordclass.context.all.de=\\\n"
"    $(keywordclass.context.base) \\\n"
"    $(keywordclass.macros.context.de) \\\n"
"    $(keywordclass.macros.context.extras) \\\n"
"    $(keywordclass.macros.context.undocumented.de)\n"
"\n"
"keywordclass.context.all.cz=\\\n"
"    $(keywordclass.context.base) \\\n"
"    $(keywordclass.macros.context.cz) \\\n"
"    $(keywordclass.macros.context.extras) \\\n"
"    $(keywordclass.macros.context.undocumented.cz)\n"
"\n"
"keywordclass.context.all.it=\\\n"
"    $(keywordclass.context.base) \\\n"
"    $(keywordclass.macros.context.it) \\\n"
"    $(keywordclass.macros.context.extras) \\\n"
"    $(keywordclass.macros.context.undocumented.it)\n"
"\n"
"keywordclass.context.all.ro=\\\n"
"    $(keywordclass.context.base) \\\n"
"    $(keywordclass.macros.context.ro) \\\n"
"    $(keywordclass.macros.context.extras) \\\n"
"    $(keywordclass.macros.context.undocumented.ro)\n"
"\n"
"\n"
"keywords.$(file.patterns.tex)=$(keywordclass.tex.all)\n"
"keywords.$(file.patterns.latex)=$(keywordclass.latex.all)\n"
"keywords.$(file.patterns.context)=$(keywordclass.context.all)\n"
"\n"
"\n"
"keywords.$(file.patterns.context)=$(keywordclass.context.base)\n"
"\n"
"keywords2.$(file.patterns.context)=$(keywordclass.context.all.nl)\n"
"keywords3.$(file.patterns.context)=$(keywordclass.context.all.en)\n"
"keywords4.$(file.patterns.context)=$(keywordclass.context.all.de)\n"
"keywords5.$(file.patterns.context)=$(keywordclass.context.all.cz)\n"
"keywords6.$(file.patterns.context)=$(keywordclass.context.all.it)\n"
"keywords7.$(file.patterns.context)=$(keywordclass.context.all.ro)\n"
"\n"
"\n"
"\n"
"keywords8.$(file.patterns.context)=$(keywordclass.pdflatex.all)\n"
"\n"
"\n"
"word.characters.$(file.patterns.tex)=$(chars.alpha)$(chars.numeric)$(chars.accented)\\@\n"
"word.characters.$(file.patterns.latex)=$(chars.alpha)$(chars.numeric)$(chars.accented)\\@\n"
"word.characters.$(file.patterns.context)=$(chars.alpha)$(chars.numeric)$(chars.accented)\\@!?\n"
"\n"
"\n"
"file.patterns.txt2tags=*.t2t\n"
"\n"
"shbang.txt2tags=txt2tags\n"
"\n"
"filter.txt2tags=Txt2tags (t2t)|$(file.patterns.txt2tags)|\n"
"\n"
"lexer.$(file.patterns.txt2tags)=txt2tags\n"
"\n"
"style.txt2tags.0=fore:#000000\n"
"\n"
"style.txt2tags.1=fore:#000000\n"
"\n"
"style.txt2tags.2=fore:#445675,bold\n"
"\n"
"style.txt2tags.3=fore:#445675\n"
"\n"
"style.txt2tags.4=fore:#653A39,italics\n"
"\n"
"style.txt2tags.5=fore:#386742\n"
"\n"
"style.txt2tags.6=fore:#E20700,bold\n"
"\n"
"style.txt2tags.7=fore:#E20700,bold\n"
"\n"
"style.txt2tags.8=fore:#A81D05,bold\n"
"\n"
"style.txt2tags.9=fore:#871704,bold\n"
"\n"
"style.txt2tags.10=fore:#871704,bold\n"
"\n"
"style.txt2tags.11=fore:#871704,bold\n"
"\n"
"style.txt2tags.12=fore:#871704,bold\n"
"\n"
"style.txt2tags.13=fore:#E300EE\n"
"\n"
"style.txt2tags.14=fore:#E300EE\n"
"\n"
"style.txt2tags.15=fore:#015F52\n"
"\n"
"style.txt2tags.16=fore:#644A9B\n"
"\n"
"style.txt2tags.17=fore:#ff901e\n"
"\n"
"style.txt2tags.18=fore:#0930DE,italics\n"
"\n"
"style.txt2tags.19=fore:#009f00\n"
"\n"
"style.txt2tags.20=fore:#009f00\n"
"\n"
"style.txt2tags.21=fore:#005f00\n"
"\n"
"style.txt2tags.22=fore:#777777\n"
"\n"
"style.txt2tags.23=fore:#C0036E\n"
"\n"
"style.txt2tags.24=fore:#848B00\n"
"\n"
"style.txt2tags.25=fore:#C05600\n"
"\n"
"\n"
"\n"
"\n"
"file.patterns.vb=*.vb;*.bas;*.frm;*.cls;*.ctl;*.pag;*.dsr;*.dob\n"
"file.patterns.wscript=*.vbs;*.dsm\n"
"\n"
"filter.vb=VB (vb vbp vbs bas frm cls ctl pag dsr dob)|$(file.patterns.vb);$(file.patterns.wscript);*.vbp;*.vbg;*.mak;*.vbw|\n"
"\n"
"lexer.$(file.patterns.vb)=vb\n"
"lexer.$(file.patterns.wscript)=vbscript\n"
"\n"
"keywordclass.vb6=\\\n"
"addressof alias and as attribute base begin binary boolean byref byte byval call case cdbl \\\n"
"cint clng compare const csng cstr currency date decimal declare defbool defbyte defcur \\\n"
"defdate defdbl defdec defint deflng defobj defsng defstr defvar dim do double each else \\\n"
"elseif empty end enum eqv erase error event exit explicit false for friend function get \\\n"
"global gosub goto if imp implements in input integer is len let lib like load lock long \\\n"
"loop lset me mid midb mod new next not nothing null object on option optional or paramarray \\\n"
"preserve print private property public raiseevent randomize redim rem resume return rset \\\n"
"seek select set single static step stop string sub text then time to true type typeof \\\n"
"unload until variant wend while with withevents xor\n"
"\n"
"keywordclass.vb=$(keywordclass.vb6)\n"
"\n"
"keywordclass.vbotherstatements=\\\n"
"appactivate beep chdir chdrive close filecopy get input kill line unlock mkdir name \\\n"
"open print put reset rmdir savepicture savesetting seek sendkeys setattr width write\n"
"\n"
"keywordclass.vbnet=\\\n"
"addhandler andalso ansi assembly auto catch cbool cbyte cchar cdate cdec char class \\\n"
"cobj continue csbyte cshort ctype cuint culng cushort custom default delegate directcast \\\n"
"endif externalsource finally gettype handles imports inherits interface isfalse isnot \\\n"
"istrue module mustinherit mustoverride my mybase myclass namespace narrowing notinheritable \\\n"
"notoverridable of off operator orelse overloads overridable overrides partial protected \\\n"
"readonly region removehandler sbyte shadows shared short strict structure synclock \\\n"
"throw try trycast uinteger ulong unicode ushort using when widening writeonly\n"
"\n"
"keywords.$(file.patterns.vb)=$(keywordclass.vb6) $(keywordclass.vbnet)\n"
"keywords.$(file.patterns.wscript)=$(keywordclass.vb6)\n"
"\n"
"keywords2.$(file.patterns.vb)=$(keywordclass.vbotherstatements)\n"
"\n"
"comment.block.vb='~\n"
"comment.block.vbscript='~\n"
"\n"
"style.vb.32=$(font.base)\n"
"style.vb.0=\n"
"style.vb.1=$(colour.code.comment.line),$(font.code.comment.line)\n"
"style.vb.2=$(colour.number)\n"
"style.vb.3=$(colour.keyword)\n"
"style.vb.4=$(colour.string)\n"
"style.vb.5=$(colour.preproc)\n"
"style.vb.6=$(colour.operator)\n"
"style.vb.7=\n"
"style.vb.8=$(colour.number)\n"
"style.vb.9=$(style.stringeol)\n"
"style.vb.10=$(style.vb.5),back:#D0FFD0\n"
"style.vb.11=$(style.vb.5),back:#D0D0FF\n"
"style.vb.12=$(style.vb.5),back:#FFD0D0\n"
"\n"
"style.vbscript.0=$(style.vb.0)\n"
"style.vbscript.1=$(style.vb.1)\n"
"style.vbscript.2=$(style.vb.2)\n"
"style.vbscript.3=$(style.vb.3)\n"
"style.vbscript.4=$(style.vb.4)\n"
"style.vbscript.5=$(style.vb.5)\n"
"style.vbscript.6=$(style.vb.6)\n"
"style.vbscript.7=$(style.vb.7)\n"
"style.vbscript.8=$(style.vb.8)\n"
"style.vbscript.9=$(style.vb.9)\n"
"style.vbscript.10=$(style.vb.10)\n"
"style.vbscript.11=$(style.vb.11)\n"
"style.vbscript.12=$(style.vb.12)\n"
"\n"
"command.go.$(file.patterns.wscript)=\"$(FilePath)\"\n"
"command.go.subsystem.$(file.patterns.wscript)=2\n"
"\n"
"command.build.$(file.patterns.wscript)=cscript \"$(FilePath)\"\n"
"command.build.subsystem.$(file.patterns.wscript)=1\n"
"\n"
"command.help.$(file.patterns.wscript)=$(CurrentWord)!C:\\Program Files\\Microsoft Visual Studio\\MSDN\\2001OCT\\1033\\MSDN130.COL\n"
"command.help.subsystem.$(file.patterns.wscript)=4\n"
"command.help.$(file.patterns.vb)=$(CurrentWord)!C:\\Program Files\\Microsoft Visual Studio\\MSDN\\2001OCT\\1033\\MSDN130.COL\n"
"command.help.subsystem.$(file.patterns.vb)=4\n"
"\n"
"file.patterns.verilog=*.v;*.vh\n"
"filter.verilog=Verilog (verilog)|$(file.patterns.verilog)|\n"
"\n"
"lexer.$(file.patterns.verilog)=verilog\n"
"\n"
"word.chars.verilog=$(chars.alpha)$(chars.numeric)_`$#\n"
"word.characters.$(file.patterns.verilog)=$(word.chars.verilog)\n"
"\n"
"calltip.verilog.word.characters=$(chars.alpha)$(chars.numeric)_$\n"
"\n"
"comment.block.verilog=//~\n"
"comment.stream.start.verilog=/*\n"
"comment.stream.end.verilog=*/\n"
"comment.box.start.verilog=/*\n"
"comment.box.middle.verilog= *\n"
"comment.box.end.verilog= */\n"
"\n"
"fold.verilog.flags=0\n"
"\n"
"statement.lookback.$(file.patterns.verilog)=20\n"
"statement.end.$(file.patterns.verilog)=10 ;\n"
"block.start.$(file.patterns.verilog)=5 begin case casex casez\n"
"block.end.$(file.patterns.verilog)=5 begin end endcase\n"
"statement.indent.$(file.patterns.verilog)=5 always else for if while\n"
"\n"
"indent.maintain.$(file.patterns.verilog)=0\n"
"\n"
"preprocessor.symbol.$(file.patterns.verilog)=`\n"
"preprocessor.start.$(file.patterns.verilog)=ifdef ifndef\n"
"preprocessor.middle.$(file.patterns.verilog)=else\n"
"preprocessor.end.$(file.patterns.verilog)=endif\n"
"\n"
"keywordclass.verilog= \\\n"
"always and assign automatic \\\n"
"begin buf bufif0 bufif1 \\\n"
"case casex casez cell cmos config \\\n"
"deassign default defparam design disable \\\n"
"edge else end endcase endconfig endfunction endgenerate endmodule endprimitive endspecify endtable endtask event \\\n"
"for force forever fork function \\\n"
"generate genvar \\\n"
"highz0 highz1 \\\n"
"if ifnone incdir include initial inout input instance integer \\\n"
"join \\\n"
"large liblist library localparam \\\n"
"macromodule medium module \\\n"
"nand negedge nmos nor noshowcancelled not notif0 notif1 \\\n"
"or output \\\n"
"parameter pmos posedge primitive pull0 pull1 pulldown pullup pulsestyle_ondetect pulsestyle_onevent \\\n"
"rcmos real realtime reg release repeat rnmos rpmos rtran rtranif0 rtranif1 \\\n"
"scalared showcancelled signed small specify specparam strong0 strong1 supply0 supply1 \\\n"
"table task time tran tranif0 tranif1 tri tri0 tri1 triand trior trireg \\\n"
"unsigned use uwire \\\n"
"vectored \\\n"
"wait wand weak0 weak1 while wire wor \\\n"
"xnor xor\n"
"\n"
"keywords.$(file.patterns.verilog)=$(keywordclass.verilog)\n"
"\n"
"keywords3.$(file.patterns.verilog)= \\\n"
"$async$and$array $async$and$plane $async$nand$array $async$nand$plane $async$nor$array $async$nor$plane $async$or$array $async$or$plane \\\n"
"$bitstoreal \\\n"
"$countdrivers \\\n"
"$display $displayb $displayh $displayo \\\n"
"$dist_chi_square $dist_erlang $dist_exponential $dist_normal $dist_poisson $dist_t $dist_uniform \\\n"
"$dumpall $dumpfile $dumpflush $dumplimit $dumpoff $dumpon $dumpportsall $dumpportsflush $dumpportslimit $dumpportsoff $dumpportson $dumpvars \\\n"
"$fclose $fdisplayh $fdisplay $fdisplayf $fdisplayb $feof $ferror $fflush $fgetc $fgets $finish $fmonitorb $fmonitor $fmonitorf $fmonitorh $fopen $fread $fscanf $fseek $fsscanf $fstrobe $fstrobebb $fstrobef $fstrobeh $ftel $fullskew $fwriteb $fwritef $fwriteh $fwrite \\\n"
"$getpattern \\\n"
"$history $hold \\\n"
"$incsave $input $itor \\\n"
"$key \\\n"
"$list $log \\\n"
"$monitorb $monitorh $monitoroff $monitoron $monitor $monitoro \\\n"
"$nochange $nokey $nolog \\\n"
"$period $printtimescale \\\n"
"$q_add $q_exam $q_full $q_initialize $q_remove \\\n"
"$random $readmemb $readmemh $readmemh $realtime $realtobits $recovery $recrem $removal $reset_count $reset $reset_value $restart $rewind $rtoi \\\n"
"$save $scale $scope $sdf_annotate $setup $setuphold $sformat $showscopes $showvariables $showvars $signed $skew $sreadmemb $sreadmemh $stime $stop $strobeb $strobe $strobeh $strobeo $swriteb $swriteh $swriteo $swrite $sync$and$array $sync$and$plane $sync$nand$array $sync$nand$plane $sync$nor$array $sync$nor$plane $sync$or$array $sync$or$plane \\\n"
"$test$plusargs $time $timeformat $timeskew \\\n"
"$ungetc $unsigned \\\n"
"$value$plusargs \\\n"
"$width $writeb $writeh $write $writeo\n"
"\n"
"\n"
"\n"
"file.patterns.systemverilog=*.sv;*.svh\n"
"filter.systemverilog=systemverilog (systemverilog)|$(file.patterns.systemverilog)|\n"
"lexer.$(file.patterns.systemverilog)=verilog\n"
"\n"
"word.chars.systemverilog=$(chars.alpha)$(chars.numeric)_`$#\n"
"word.characters.$(file.patterns.systemverilog)=$(word.chars.systemverilog)\n"
"\n"
"statement.lookback.$(file.patterns.systemverilog)=20\n"
"statement.end.$(file.patterns.systemverilog)=10 ;\n"
"block.start.$(file.patterns.systemverilog)=5 begin case casex casez\n"
"block.end.$(file.patterns.systemverilog)=5 begin end endcase\n"
"statement.indent.$(file.patterns.systemverilog)=5 always else for if while\n"
"\n"
"indent.maintain.$(file.patterns.systemverilog)= 0\n"
"\n"
"preprocessor.symbol.$(file.patterns.systemverilog)=`\n"
"preprocessor.start.$(file.patterns.systemverilog)=ifdef ifndef\n"
"preprocessor.middle.$(file.patterns.systemverilog)=else\n"
"preprocessor.end.$(file.patterns.systemverilog)=endif\n"
"\n"
"keywords.$(file.patterns.systemverilog)=\\\n"
"alias always always_comb always_ff always_latch and assert assign assume \\\n"
"automatic before begin bind bins binsof bit break buf bufif0 bufif1 byte case \\\n"
"casex casez cell chandle class clocking cmos config const constraint context \\\n"
"continue cover covergroup coverpoint cross deassign default defparam design \\\n"
"disable dist do edge else end endcase endclass endclocking endconfig \\\n"
"endfunction endgenerate endgroup endinterface endmodule endpackage \\\n"
"endprimitive endprogram endproperty endspecify endsequence endtable endtask \\\n"
"enum event expect export extends extern final first_match for force foreach \\\n"
"forever fork forkjoin function generate genvar highz0 highz1 if iff ifnone \\\n"
"ignore_bins illegal_bins import incdir include initial inout input inside \\\n"
"instance int integer interface intersect join join_any join_none large liblist \\\n"
"library local localparam logic longint macromodule matches medium modport \\\n"
"module nand negedge new nmos nor noshowcancelled not notif0 notif1 null or \\\n"
"output package packed parameter pmos posedge primitive priority program \\\n"
"property protected pull0 pull1 pulldown pullup pulsestyle_onevent \\\n"
"pulsestyle_ondetect pure rand randc randcase randsequence rcmos real realtime \\\n"
"ref reg release repeat return rnmos rpmos rtran rtranif0 rtranif1 scalared \\\n"
"sequence shortint shortreal showcancelled signed small solve specify specparam \\\n"
"static string strong0 strong1 struct super supply0 supply1 table tagged task \\\n"
"this throughout time timeprecision timeunit tran tranif0 tranif1 tri tri0 tri1 \\\n"
"triand trior trireg type typedef union unique unsigned use uwire var vectored \\\n"
"virtual void wait wait_order wand weak0 weak1 while wildcard wire with within \\\n"
"wor xnor xor\n"
"\n"
"\n"
"keywords3.$(file.patterns.systemverilog)=\\\n"
"$acos $acosh $asin $asinh $assertfailoff $assertfailon $assertkill \\\n"
"$assertnonvacuouson $assertoff $asserton $assertpassoff $assertpasson \\\n"
"$assertvacuousoff $async$and$array $async$and$plane $async$nand$array \\\n"
"$async$nand$plane $async$nor$array $async$nor$plane $async$or$array \\\n"
"$async$or$plane $atan $atan2 $atanh $bits $bitstoreal $bitstoshortreal $cast \\\n"
"$ceil $changed $changed_gclk $changing_gclk $clog2 $cos $cosh $countdrivers \\\n"
"$countones $coverage_control $coverage_get $coverage_get_max $coverage_merge \\\n"
"$coverage_save $dimensions $display $displayb $displayh $displayo \\\n"
"$dist_chi_square $dist_erlang $dist_exponential $dist_normal $dist_poisson \\\n"
"$dist_t $dist_uniform $dumpall $dumpfile $dumpflush $dumplimit $dumpoff \\\n"
"$dumpon $dumpports $dumpportsall $dumpportsflush $dumpportslimit $dumpportsoff \\\n"
"$dumpportson $dumpvars $error $exit $exp $falling_gclk $fatal $fclose \\\n"
"$fdisplay $fdisplayb $fdisplayf $fdisplayh $fdisplayo $fell $fell_gclk $feof \\\n"
"$ferror $fflush $fgetc $fgets $finish $floor $fmonitor $fmonitorb $fmonitorf \\\n"
"$fmonitorh $fmonitoro $fopen $fread $fscanf $fseek $fsscanf $fstrobe $fstrobeb \\\n"
"$fstrobebb $fstrobef $fstrobeh $fstrobeo $ftel $ftell $fullskew $future_gclk \\\n"
"$fwrite $fwriteb $fwritef $fwriteh $fwriteo $get_coverage $getpattern $high \\\n"
"$history $hold $hypot $increment $incsave $info $input $isunbounded $isunknown \\\n"
"$itor $key $left $list $ln $load_coverage_db $log $log10 $low $monitor \\\n"
"$monitorb $monitorh $monitoro $monitoroff $monitoron $nochange $nokey $nolog \\\n"
"$onehot $onehot0 $past $past_gclk $period $pow $printtimescale $q_add $q_exam \\\n"
"$q_full $q_initialize $q_remove $random $readmemb $readmemh $realtime \\\n"
"$realtobits $recovery $recrem $removal $reset $reset_count $reset_value \\\n"
"$restart $rewind $right $rising_gclk $root $rose $rose_gclk $rtoi $sampled \\\n"
"$save $scale $scope $sdf_annotate $set_coverage_db_name $setup $setuphold \\\n"
"$sformat $sformatf $shortrealtobits $showscopes $showvariables $showvars \\\n"
"$signed $sin $sinh $size $skew $sqrt $sreadmemb $sreadmemh $sscanf $stable \\\n"
"$stable_gclk $steady_gclk $stime $stop $strobe $strobeb $strobeh $strobeo \\\n"
"$swrite $swriteb $swriteh $swriteo $sync$and$array $sync$and$plane \\\n"
"$sync$nand$array $sync$nand$plane $sync$nor$array $sync$nor$plane \\\n"
"$sync$or$array $sync$or$plane $system $tan $tanh $test$plusargs $time \\\n"
"$timeformat $timeskew $typename $ungetc $unit $unpacked_dimensions $unsigned \\\n"
"$urandom $urandom_range $value$plusargs $warning $width $write $writeb $writeh \\\n"
"$writememb $writememh $writeo\n"
"\n"
"\n"
"\n"
"\n"
"style.verilog.32=$(font.base)\n"
"style.verilog.0=fore:#808080\n"
"style.verilog.1=$(colour.code.comment.box),$(font.code.comment.box)\n"
"style.verilog.2=$(colour.code.comment.line),$(font.code.comment.line)\n"
"style.verilog.3=fore:#3F7F3F,$(font.code.comment.line),back:#E0F0FF,eolfilled\n"
"style.verilog.4=$(colour.number)\n"
"style.verilog.5=$(colour.keyword),bold\n"
"style.verilog.6=$(colour.string),$(font.string.literal)\n"
"style.verilog.7=fore:#007F7F\n"
"style.verilog.8=fore:#804020\n"
"style.verilog.9=$(colour.preproc)\n"
"style.verilog.10=fore:#007070\n"
"style.verilog.11=\n"
"style.verilog.12=fore:#000000,$(font.string.literal),back:#E0C0E0,eolfilled\n"
"style.verilog.19=fore:#804020,$(font.code.comment.doc)\n"
"braces.verilog.style=10\n"
"\n"
"\n"
"file.patterns.vhdl=*.vhd;*.vhdl\n"
"filter.vhdl=VHDL (vhd vhdl)|$(file.patterns.vhdl)|\n"
"\n"
"lexer.$(file.patterns.vhdl)=vhdl\n"
"\n"
"word.chars.vhdl=$(chars.alpha)$(chars.numeric)_\n"
"word.characters.$(file.patterns.vhdl)=$(word.chars.vhdl)\n"
"\n"
"\n"
"comment.block.vhdl=--\n"
"\n"
"\n"
"\n"
"indent.maintain.$(file.patterns.vhdl)=1;\n"
"\n"
"\n"
"keywords.$(file.patterns.vhdl)=access after alias all architecture array assert attribute begin block \\\n"
"body buffer bus case component configuration constant disconnect downto else elsif end entity exit file \\\n"
"for function generate generic group guarded if impure in inertial inout is label library linkage literal \\\n"
"loop map new next null of on open others out package port postponed procedure process pure range record \\\n"
"register reject report return select severity shared signal subtype then to transport type unaffected \\\n"
"units until use variable wait when while with\n"
"\n"
"keywords2.$(file.patterns.vhdl)=                                                                            \\\n"
" abs and mod nand nor not or rem rol ror sla sll sra srl xnor xor\n"
"\n"
"keywords3.$(file.patterns.vhdl)=                                                                            \\\n"
" left right low high ascending image value pos val succ pred leftof rightof base range reverse_range        \\\n"
" length delayed stable quiet transaction event active last_event last_active last_value driving             \\\n"
" driving_value simple_name path_name instance_name\n"
"\n"
"keywords4.$(file.patterns.vhdl)=                                                                            \\\n"
" now readline read writeline write endfile resolved to_bit to_bitvector to_stdulogic to_stdlogicvector      \\\n"
" to_stdulogicvector to_x01 to_x01z to_UX01 rising_edge falling_edge is_x shift_left shift_right rotate_left \\\n"
" rotate_right resize to_integer to_unsigned to_signed std_match to_01\n"
"\n"
"keywords5.$(file.patterns.vhdl)=                                                                            \\\n"
" std ieee work standard textio std_logic_1164 std_logic_arith std_logic_misc std_logic_signed               \\\n"
" std_logic_textio std_logic_unsigned numeric_bit numeric_std math_complex math_real vital_primitives        \\\n"
" vital_timing\n"
"\n"
"keywords6.$(file.patterns.vhdl)=                                                                            \\\n"
" boolean bit character severity_level integer real time delay_length natural positive string bit_vector     \\\n"
" file_open_kind file_open_status line text side width std_ulogic std_ulogic_vector std_logic                \\\n"
" std_logic_vector X01 X01Z UX01 UX01Z unsigned signed\n"
"\n"
"\n"
"style.vhdl.32=$(font.base)\n"
"style.vhdl.0=fore:#800080\n"
"style.vhdl.1=$(colour.code.comment.line),$(font.code.comment.line)\n"
"style.vhdl.2=fore:#3F7F3F,$(font.code.comment.line)\n"
"style.vhdl.3=$(colour.number)\n"
"style.vhdl.4=$(colour.string)\n"
"style.vhdl.6=\n"
"style.vhdl.7=fore:#000000,$(font.string.literal),back:#E0C0E0,eolfilled\n"
"style.vhdl.8=$(colour.keyword)\n"
"style.vhdl.9=fore:#007F7F\n"
"style.vhdl.10=fore:#804020\n"
"style.vhdl.11=fore:#808020\n"
"style.vhdl.12=fore:#208020\n"
"style.vhdl.13=fore:#208080\n"
"style.vhdl.14=fore:#804020,$(font.code.comment.doc)\n"
"braces.vhdl.style=5\n"
"\n"
"file.patterns.yaml=*.yaml;*.yml\n"
"filter.yaml=YAML (yaml)|$(file.patterns.yaml)|\n"
"lexer.$(file.patterns.yaml)=yaml\n"
"\n"
"tabsize.$(file.patterns.yaml)=2\n"
"indent.size.$(file.patterns.yaml)=2\n"
"use.tabs.$(file.patterns.yaml)=0\n"
"\n"
"comment.block.yaml=#~\n"
"\n"
"keywords.$(file.patterns.yaml)=true false yes no\n"
"\n"
"style.yaml.0=$(font.text),fore:#000000\n"
"style.yaml.1=$(font.comment),fore:#008800\n"
"style.yaml.2=$(font.base),fore:#000088,bold\n"
"style.yaml.3=$(font.base),fore:#880088\n"
"style.yaml.4=$(font.base),fore:#880000\n"
"style.yaml.5=$(font.base),fore:#008888\n"
"style.yaml.6=$(font.comment),fore:#FFFFFF,bold,back:#000088,eolfilled\n"
"style.yaml.7=$(font.text),fore:#333366\n"
"style.yaml.8=$(font.text),fore:#FFFFFF,italics,bold,back:#FF0000,eolfilled\n"
;